{"隐藏已禁用的规则":"Hide disabled rules","规则说明":"Rule Description","错误的示例":"Incorrect Example","正确的示例":"Correct Example","配置：":"Options:","申明后不再被修改的变量必须使用 const 来申明":"require `const` declarations for variables that are never reassigned after declared","强制数组方括号中使用一致的空格":"强制数组方括号中使用一致的空格","数组的方法除了 forEach 之外，回调函数必须有返回值":"数组的方法除了 forEach 之外，回调函数必须有返回值","强制数组元素间出现换行":"强制数组元素间出现换行","要求箭头函数体使用大括号":"要求箭头函数体使用大括号","要求箭头函数的参数使用圆括号":"要求箭头函数的参数使用圆括号","强制箭头函数的箭头前后使用一致的空格":"强制箭头函数的箭头前后使用一致的空格","禁止或强制在代码块中开括号前和闭括号后有空格":"禁止或强制在代码块中开括号前和闭括号后有空格","强制在代码块中使用一致的大括号风格":"强制在代码块中使用一致的大括号风格","变量名必须是 camelcase 风格的":"变量名必须是 camelcase 风格的","要求或禁止末尾逗号":"要求或禁止末尾逗号","强制在逗号前后使用一致的空格":"强制在逗号前后使用一致的空格","强制使用一致的逗号风格":"强制使用一致的逗号风格","强制在计算的属性的方括号中使用一致的空格":"强制在计算的属性的方括号中使用一致的空格","禁止使用 foo['bar']，必须写成 foo.bar":"禁止使用 foo['bar']，必须写成 foo.bar","要求或禁止文件末尾存在空行":"要求或禁止文件末尾存在空行","必须使用 === 或 !==，禁止使用 == 或 !=":"必须使用 === 或 !==，禁止使用 == 或 !=","要求或禁止在函数标识符和其调用之间有空格":"要求或禁止在函数标识符和其调用之间有空格","必须只使用函数声明或只使用函数表达式":"必须只使用函数声明或只使用函数表达式","强制在函数括号内使用一致的换行":"强制在函数括号内使用一致的换行","强制 generator 函数中 * 号周围使用一致的空格":"强制 generator 函数中 * 号周围使用一致的空格","限制变量名长度":"限制变量名长度","强制隐式返回的箭头函数体的位置":"强制隐式返回的箭头函数体的位置","强制在对象字面量的属性中键和值之间使用一致的间距":"强制在对象字面量的属性中键和值之间使用一致的间距","强制在关键字前后使用一致的空格":"强制在关键字前后使用一致的空格","强制一行的最大长度":"强制一行的最大长度","new 后面的类名必须首字母大写":"new 后面的类名必须首字母大写","要求方法链中每个调用都有一个换行符":"要求方法链中每个调用都有一个换行符","switch 的 case 内有变量定义的时候，必须使用大括号将 case 内变成一个代码块":"switch 的 case 内有变量定义的时候，必须使用大括号将 case 内变成一个代码块","禁止在可能与比较操作符相混淆的地方使用箭头函数":"禁止在可能与比较操作符相混淆的地方使用箭头函数","禁止对使用 const 定义的常量重新赋值":"禁止对使用 const 定义的常量重新赋值","禁止重复定义类的成员":"禁止重复定义类的成员","禁止重复导入模块":"禁止重复导入模块","禁止在 else 内使用 return，必须改为提前结束":"禁止在 else 内使用 return，必须改为提前结束","禁止使用 eval":"禁止使用 eval","禁止使用 __iterator__":"禁止使用 __iterator__","__iterator__ 是一个已废弃的属性\n使用 [Symbol.iterator] 替代它":"__iterator__ 是一个已废弃的属性\n使用 [Symbol.iterator] 替代它","禁止在循环内的函数内部出现循环体条件语句中定义的变量":"禁止在循环内的函数内部出现循环体条件语句中定义的变量","禁止混合使用不同的操作符":"禁止混合使用不同的操作符","禁止连续赋值，比如 foo = bar = 1":"禁止连续赋值，比如 foo = bar = 1","禁止出现多行空行":"禁止出现多行空行","禁止使用嵌套的三元表达式，比如 a ? b : c ? d : e":"禁止使用嵌套的三元表达式，比如 a ? b : c ? d : e","禁止使用 new Function":"禁止使用 new Function","这和 eval 是等价的":"这和 eval 是等价的","禁止直接 new Object":"禁止直接 new Object","禁止使用 new 来生成 String, Number 或 Boolean":"禁止使用 new 来生成 String, Number 或 Boolean","禁止对函数的参数重新赋值":"禁止对函数的参数重新赋值","禁止使用 ++ 或 --":"禁止使用 ++ 或 --","禁止使用 hasOwnProperty, isPrototypeOf 或 propertyIsEnumerable":"禁止使用 hasOwnProperty, isPrototypeOf 或 propertyIsEnumerable","禁止使用指定的对象属性":"禁止使用指定的对象属性","禁止变量名出现下划线":"禁止变量名出现下划线","必须使用 !a 替代 a ? false : true":"必须使用 !a 替代 a ? false : true","已定义的变量必须使用":"已定义的变量必须使用","禁止出现没必要的 constructor":"禁止出现没必要的 constructor","禁止出现没必要的转义":"禁止出现没必要的转义","禁止使用 var":"禁止使用 var","禁止属性前有空白":"禁止属性前有空白","强制单个语句的位置":"强制单个语句的位置","强制在大括号中使用一致的空格":"强制在大括号中使用一致的空格","禁止变量申明时用逗号一次申明多个":"禁止变量申明时用逗号一次申明多个","要求或禁止块内填充":"要求或禁止块内填充","要求回调函数使用箭头函数":"要求回调函数使用箭头函数","必须使用解构赋值":"必须使用解构赋值","必须使用 ...args 而不是 arguments":"必须使用 ...args 而不是 arguments","必须使用 ... 而不是 apply，比如 foo(...args)":"必须使用 ... 而不是 apply，比如 foo(...args)","必须使用模版字符串而不是字符串连接":"必须使用模版字符串而不是字符串连接","要求对象字面量属性名称用引号括起来":"要求对象字面量属性名称用引号括起来","强制使用一致的反勾号、双引号或单引号":"强制使用一致的反勾号、双引号或单引号","parseInt 必须传入第二个参数":"parseInt 必须传入第二个参数","要求或禁止使用分号代替 ASI":"要求或禁止使用分号代替 ASI","强制在块之前使用一致的空格":"强制在块之前使用一致的空格","强制在 function 的左括号之前使用一致的空格":"强制在 function 的左括号之前使用一致的空格","强制在圆括号内使用一致的空格":"强制在圆括号内使用一致的空格","要求操作符周围有空格":"要求操作符周围有空格","注释的斜线或 * 后必须有空格":"注释的斜线或 * 后必须有空格","要求或禁止模板字符串中的嵌入表达式周围空格的使用":"要求或禁止模板字符串中的嵌入表达式周围空格的使用","要求 IIFE 使用括号括起来":"要求 IIFE 使用括号括起来","禁止使用 let 导出":"禁止使用 let 导出","当只有一个导出时，必须使用 export default 来导出":"当只有一个导出时，必须使用 export default 来导出","导入语句前不允许有任何非导入语句":"导入语句前不允许有任何非导入语句","禁用导入的模块时使用 webpack 特有的语法（感叹号）":"禁用导入的模块时使用 webpack 特有的语法（感叹号）","变量应先声明再使用，禁止引用任何未声明的变量，除非你明确知道引用的变量存在于当前作用域链上。":"变量应先声明再使用，禁止引用任何未声明的变量，除非你明确知道引用的变量存在于当前作用域链上。","已定义的变量必须使用\n但不检查最后一个使用的参数之前的参数\n也不检查 rest 属性的兄弟属性":"已定义的变量必须使用\n但不检查最后一个使用的参数之前的参数\n也不检查 rest 属性的兄弟属性","2 个空格缩进":"2 个空格缩进","使用 2 个空格缩进":"使用 2 个空格缩进","不要在中括号中添加空格":"不要在中括号中添加空格","要求打开的块标志和同一行上的标志拥有一致的间距。此规则还会在同一行关闭的块标记和前边的标记强制实施一致的间距。":"要求打开的块标志和同一行上的标志拥有一致的间距。此规则还会在同一行关闭的块标记和前边的标记强制实施一致的间距。","使用驼峰命名法（camelCase）命名对象、函数和实例。":"使用驼峰命名法（camelCase）命名对象、函数和实例。","添加尾随逗号":"添加尾随逗号","只有在命名构造器或者类的时候，才用帕斯卡拼命名法（PascalCase），即首字母大写。":"只有在命名构造器或者类的时候，才用帕斯卡拼命名法（PascalCase），即首字母大写。","在编写多个方法链式调用(超过两个方法链式调用)时。 使用前导点，强调这行是一个方法调用，而不是一个语句。":"在编写多个方法链式调用(超过两个方法链式调用)时。 使用前导点，强调这行是一个方法调用，而不是一个语句。","使用字面量语法创建数组。":"使用字面量语法创建数组。","在 case 和 default 的子句中，如果存在声明 (例如. let, const, function, 和 class)，使用大括号来创建块级作用域。":"在 case 和 default 的子句中，如果存在声明 (例如. let, const, function, 和 class)，使用大括号来创建块级作用域。","避免搞混箭头函数符号 (=>) 和比较运算符 (<=, >=)。":"避免搞混箭头函数符号 (=>) 和比较运算符 (<=, >=)。","不要使用多个空行填充代码。":"不要使用多个空行填充代码。","计算指数时，可以使用 ** 运算符。":"计算指数时，可以使用 ** 运算符。","推荐使用 JavaScript 的高阶函数代替 for-in 或者 for-of":"推荐使用 JavaScript 的高阶函数代替 for-in 或者 for-of","避免在行尾添加空格。":"避免在行尾添加空格。","将对象方法、属性简写，且间歇属性放在前面。":"将对象方法、属性简写，且间歇属性放在前面。","避免在赋值语句 = 前后换行。如果你的代码单行长度超过了 max-len 定义的长度而不得不换行， 那么使用括号包裹。":"避免在赋值语句 = 前后换行。如果你的代码单行长度超过了 max-len 定义的长度而不得不换行， 那么使用括号包裹。","使用单引号 '' 定义字符串":"使用单引号 '' 定义字符串","要加分号":"要加分号","要求立即执行的函数使用括号括起来":"要求立即执行的函数使用括号括起来","强制一行的最大长度，限制单行不能超过100个字符，字符串和正则表达式除外。":"强制一行的最大长度，限制单行不能超过100个字符，字符串和正则表达式除外。","不要使用迭代器。":"不要使用迭代器。","推荐使用 JavaScript 的高阶函数代替 for-in 或者 for-of。":"推荐使用 JavaScript 的高阶函数代替 for-in 或者 for-of。","重载的函数必须写在一起":"重载的函数必须写在一起","增加可读性":"增加可读性","限制数组类型必须使用 Array<T> 或 T[]":"限制数组类型必须使用 Array<T> 或 T[]","允许灵活运用两者":"允许灵活运用两者","禁止对没有 then 方法的对象使用 await":"禁止对没有 then 方法的对象使用 await","统一关闭 requires type information 的规则":"统一关闭 requires type information 的规则","禁止使用 // @ts-ignore // @ts-nocheck // @ts-check":"禁止使用 // @ts-ignore // @ts-nocheck // @ts-check","这种注释本身就是对特殊代码的说明":"这种注释本身就是对特殊代码的说明","禁止使用指定的类型":"禁止使用指定的类型","类的只读属性若是一个字面量，则必须使用只读属性而不是 getter":"类的只读属性若是一个字面量，则必须使用只读属性而不是 getter","类型断言必须使用 as Type，禁止使用 <Type>，禁止对对象字面量进行类型断言（断言成 any 是允许的）":"类型断言必须使用 as Type，禁止使用 <Type>，禁止对对象字面量进行类型断言（断言成 any 是允许的）","<Type> 容易被理解为 jsx":"<Type> 容易被理解为 jsx","优先使用 interface 而不是 type":"优先使用 interface 而不是 type","interface 可以 implement, extend 和 merge":"interface 可以 implement, extend 和 merge","有默认值或可选的参数必须放到最后":"有默认值或可选的参数必须放到最后","函数返回值必须与声明的类型一致":"函数返回值必须与声明的类型一致","编译阶段检查就足够了":"编译阶段检查就足够了","必须设置类的成员的可访问性":"必须设置类的成员的可访问性","将不需要公开的成员设为私有的，可以增强代码的可理解性，对文档输出也很友好":"将不需要公开的成员设为私有的，可以增强代码的可理解性，对文档输出也很友好","导出的函数或类中的 public 方法必须定义输入输出参数的类型":"导出的函数或类中的 public 方法必须定义输入输出参数的类型","指定类成员的排序规则":"指定类成员的排序规则","优先级：\n1. static > instance\n2. field > constructor > method\n3. public > protected > private":"优先级：\n1. static > instance\n2. field > constructor > method\n3. public > protected > private","接口中的方法必须用属性的方式定义":"接口中的方法必须用属性的方式定义","配置了 strictFunctionTypes 之后，用属性的方式定义方法可以获得更严格的检查":"配置了 strictFunctionTypes 之后，用属性的方式定义方法可以获得更严格的检查","限制各种变量或类型的命名规则":"限制各种变量或类型的命名规则","禁止使用 Array 构造函数":"禁止使用 Array 构造函数","禁止滥用 toString 方法":"禁止滥用 toString 方法","编译阶段就会报错了":"编译阶段就会报错了","禁止 delete 时传入的 key 是动态的":"禁止 delete 时传入的 key 是动态的","不允许有空函数":"不允许有空函数","有时需要将一个空函数设置为某个项的默认值":"有时需要将一个空函数设置为某个项的默认值","禁止定义空的接口":"禁止定义空的接口","禁止使用 any":"禁止使用 any","禁止多余的 non-null 断言":"禁止多余的 non-null 断言","禁止定义没必要的类，比如只有静态方法的类":"禁止定义没必要的类，比如只有静态方法的类","禁止调用 Promise 时没有处理异常情况":"禁止调用 Promise 时没有处理异常情况","禁止对 array 使用 for in 循环":"禁止对 array 使用 for in 循环","禁止给一个初始化时直接赋值为 number, string 的变量显式的声明类型":"禁止给一个初始化时直接赋值为 number, string 的变量显式的声明类型","可以简化代码":"可以简化代码","禁止使用 magic numbers":"禁止使用 magic numbers","禁止在接口中定义 constructor，或在类中定义 new":"禁止在接口中定义 constructor，或在类中定义 new","避免错误的使用 Promise":"避免错误的使用 Promise","禁止使用 namespace 来定义命名空间":"禁止使用 namespace 来定义命名空间","使用 es6 引入模块，才是更标准的方式。\n但是允许使用 declare namespace ... {} 来定义外部命名空间":"使用 es6 引入模块，才是更标准的方式。\n但是允许使用 declare namespace ... {} 来定义外部命名空间","禁止在 optional chaining 之后使用 non-null 断言（感叹号）":"禁止在 optional chaining 之后使用 non-null 断言（感叹号）","optional chaining 后面的属性一定是非空的":"optional chaining 后面的属性一定是非空的","禁止使用 non-null 断言（感叹号）":"禁止使用 non-null 断言（感叹号）","使用 non-null 断言时就已经清楚了风险":"使用 non-null 断言时就已经清楚了风险","禁止给类的构造函数的参数添加修饰符":"禁止给类的构造函数的参数添加修饰符","强制所有属性都定义到类里面，比较统一":"强制所有属性都定义到类里面，比较统一","禁止使用 require":"禁止使用 require","统一使用 import 来引入模块，特殊情况使用单行注释允许 require 引入":"统一使用 import 来引入模块，特殊情况使用单行注释允许 require 引入","禁止将 this 赋值给其他变量，除非是解构赋值":"禁止将 this 赋值给其他变量，除非是解构赋值","禁止 throw 字面量，必须 throw 一个 Error 对象":"禁止 throw 字面量，必须 throw 一个 Error 对象","禁止使用类型别名":"禁止使用类型别名","测试表达式中的布尔类型禁止与 true 或 false 直接比较":"测试表达式中的布尔类型禁止与 true 或 false 直接比较","条件表达式禁止是永远为真（或永远为假）的":"条件表达式禁止是永远为真（或永远为假）的","在命名空间中，可以直接使用内部变量，不需要添加命名空间前缀":"在命名空间中，可以直接使用内部变量，不需要添加命名空间前缀","禁止范型的类型有默认值时，将范型设置为该默认值":"禁止范型的类型有默认值时，将范型设置为该默认值","禁止无用的类型断言":"禁止无用的类型断言","禁止将变量或属性的类型设置为 any":"禁止将变量或属性的类型设置为 any","禁止调用 any 类型的变量上的方法":"禁止调用 any 类型的变量上的方法","禁止获取 any 类型的变量中的属性":"禁止获取 any 类型的变量中的属性","禁止函数的返回值的类型是 any":"禁止函数的返回值的类型是 any","禁止无用的表达式":"禁止无用的表达式","禁止已定义的变量未使用":"禁止已定义的变量未使用","禁止在定义变量之前就使用它":"禁止在定义变量之前就使用它","禁止使用 require 来引入模块":"禁止使用 require 来引入模块","no-require-imports 规则已经约束了 require":"no-require-imports 规则已经约束了 require","使用 as const 替代 as 'bar'":"使用 as const 替代 as 'bar'","as const 是新语法，不是很常见":"as const 是新语法，不是很常见","使用 for 循环遍历数组时，如果索引仅用于获取成员，则必须使用 for of 循环替代 for 循环":"使用 for 循环遍历数组时，如果索引仅用于获取成员，则必须使用 for of 循环替代 for 循环","for of 循环更加易读":"for of 循环更加易读","使用函数类型别名替代包含函数调用声明的接口":"使用函数类型别名替代包含函数调用声明的接口","使用 includes 而不是 indexOf":"使用 includes 而不是 indexOf","禁止使用 module 来定义命名空间":"禁止使用 module 来定义命名空间","module 已成为 js 的关键字":"module 已成为 js 的关键字","使用 ?? 替代 ||":"使用 ?? 替代 ||","使用 optional chaining 替代 &&":"使用 optional chaining 替代 &&","私有变量如果没有在构造函数外被赋值，则必须设为 readonly":"私有变量如果没有在构造函数外被赋值，则必须设为 readonly","函数的参数必须设置为 readonly":"函数的参数必须设置为 readonly","使用 reduce 方法时，必须传入范型，而不是对第二个参数使用 as":"使用 reduce 方法时，必须传入范型，而不是对第二个参数使用 as","使用 RegExp#exec 而不是 String#match":"使用 RegExp#exec 而不是 String#match","使用 String#startsWith 而不是其他方式":"使用 String#startsWith 而不是其他方式","当需要忽略下一行的 ts 错误时，必须使用 @ts-expect-error 而不是 @ts-ignore":"当需要忽略下一行的 ts 错误时，必须使用 @ts-expect-error 而不是 @ts-ignore","使用 @ts-expect-error 可以避免对不会报错的代码设置了 @ts-ignore":"使用 @ts-expect-error 可以避免对不会报错的代码设置了 @ts-ignore","async 函数的返回值必须是 Promise":"async 函数的返回值必须是 Promise","使用 sort 时必须传入比较函数":"使用 sort 时必须传入比较函数","async 函数中必须存在 await 语句":"async 函数中必须存在 await 语句","使用加号时，两者必须同为数字或同为字符串":"使用加号时，两者必须同为数字或同为字符串","模版字符串中的变量类型必须是字符串":"模版字符串中的变量类型必须是字符串","async 函数必须返回 await":"async 函数必须返回 await","条件判断必须传入布尔值":"条件判断必须传入布尔值","使用联合类型作为 switch 的对象时，必须包含每一个类型的 case":"使用联合类型作为 switch 的对象时，必须包含每一个类型的 case","禁止使用三斜杠导入文件":"禁止使用三斜杠导入文件","三斜杠是已废弃的语法，但在类型声明文件中还是可以使用的":"三斜杠是已废弃的语法，但在类型声明文件中还是可以使用的","interface 和 type 定义时必须声明成员的类型":"interface 和 type 定义时必须声明成员的类型","方法调用时需要绑定到正确的 this 上":"方法调用时需要绑定到正确的 this 上","函数重载时，若能通过联合类型将两个函数的类型声明合为一个，则使用联合类型而不是两个函数声明":"函数重载时，若能通过联合类型将两个函数的类型声明合为一个，则使用联合类型而不是两个函数声明","在类型注释周围需要一致的间距":"在类型注释周围需要一致的间距"}