(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    640685,      13350]
NotebookOptionsPosition[    629183,      12961]
NotebookOutlinePosition[    629734,      12984]
CellTagsIndexPosition[    629644,      12979]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Mendelian Model Solution", "Title",
 CellChangeTimes->{
  3.697057174453452*^9, {3.702515048651016*^9, 3.7025150598318453`*^9}}],

Cell["\<\
Hello and welcome to the solution to our final project. As always, please try \
to solve the project yourself before watching this video.\
\>", "Text",
 CellChangeTimes->{{3.6970408139220037`*^9, 3.697040856256482*^9}, {
   3.697040889119132*^9, 3.6970410247021837`*^9}, 3.702522590686308*^9}],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.6970410293721733`*^9, 3.697041031562326*^9}}],

Cell["\<\
In this lecture, the second and last part of the final project, we will make \
use of our project template. If you didn\[CloseCurlyQuote]t use the project \
template, you might want to open it up and follow along.\
\>", "Text",
 CellChangeTimes->{{3.701975233339723*^9, 3.701975322159831*^9}, {
  3.702522601081985*^9, 3.702522612590118*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Constants", "Section",
 CellChangeTimes->{{3.697057430506605*^9, 3.6970574314574738`*^9}}],

Cell["As we did in part 1, let\[CloseCurlyQuote]s evaluate our constants:", \
"Text",
 CellChangeTimes->{{3.697057437632826*^9, 3.6970575250217648`*^9}, {
  3.697062911525661*^9, 3.697062911613408*^9}, {3.701975353182638*^9, 
  3.701975363550035*^9}, {3.702522676107349*^9, 3.702522679651782*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xmin", "=", "0"}], ";", 
  RowBox[{"xmax", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ymin", "=", "0"}], ";", 
  RowBox[{"ymax", "=", "50"}], ";"}]}], "Input",
 CellChangeTimes->{{3.697057533766706*^9, 3.697057548429675*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"latinGenes", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\"", ",", "\"\<D\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numberGenes", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<1\>\"", ",", "\"\<2\>\"", ",", "\"\<3\>\"", ",", "\"\<4\>\""}], 
    "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.696479190756711*^9, 3.696479387570715*^9}, {
   3.6964794818876123`*^9, 3.6964794835923433`*^9}, {3.6964795598301077`*^9, 
   3.69647956198064*^9}, {3.696487722384933*^9, 3.696487726564906*^9}, 
   3.697049057736676*^9, {3.697053547525403*^9, 3.697053550549444*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creatures", "Section",
 CellChangeTimes->{{3.697057562804502*^9, 3.697057564556756*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"bc1", "=", 
   RowBox[{"BlendingCreature", "[", 
    RowBox[{"0.1", ",", 
     RowBox[{"{", 
      RowBox[{"20", ",", "40"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc2", "=", 
   RowBox[{"BlendingCreature", "[", 
    RowBox[{"0.4", ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "40"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc3", "=", 
   RowBox[{"BlendingCreature", "[", 
    RowBox[{"0.7", ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "30"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc4", "=", 
   RowBox[{"BlendingCreature", "[", 
    RowBox[{"0.9", ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "20"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mc1", "=", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<A\>\"", ",", "\"\<1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"25", ",", "45"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mc2", "=", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<B\>\"", ",", "\"\<3\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"35", ",", "45"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mc3", "=", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<D\>\"", ",", "\"\<1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"45", ",", "35"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mc4", "=", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<C\>\"", ",", "\"\<4\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"45", ",", "25"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6970575977643967`*^9, 3.697057646626451*^9}, {
  3.702514479187821*^9, 3.702514481816733*^9}, {3.702514644325514*^9, 
  3.702514651073971*^9}, {3.702514704952127*^9, 3.702514773284748*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Accessors", "Section",
 CellChangeTimes->{{3.6970576834174433`*^9, 3.697057684528063*^9}}],

Cell[TextData[{
 "Since our ",
 StyleBox["BlendingCreature", "Code"],
 "s and ",
 StyleBox["MendelianCreature", "Code"],
 "s both have their ",
 StyleBox["Traits", "Code"],
 " and ",
 StyleBox["Location", "Code"],
 " in the same position, we can reuse the code by simply changing the pattern \
of ",
 StyleBox["Traits", "Code"],
 " and ",
 StyleBox["Location", "Code"],
 " to match either ",
 StyleBox["BlendingCreature", "Code"],
 "s or ",
 StyleBox["MendelianCreature", "Code"],
 "s:"
}], "Text",
 CellChangeTimes->{{3.702515508562971*^9, 3.7025156278012753`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Traits", "[", 
   RowBox[{"creature", ":", 
    RowBox[{"_BlendingCreature", "|", "_MendelianCreature"}]}], "]"}], ":=", 
  RowBox[{"creature", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6970577298712263`*^9, 3.6970577545981073`*^9}, {
   3.69705799969311*^9, 3.6970580065815563`*^9}, {3.6970580402934504`*^9, 
   3.697058071019301*^9}, {3.697059445547626*^9, 3.6970594477056923`*^9}, 
   3.69705967851015*^9, {3.697062157554139*^9, 3.6970621582441263`*^9}, {
   3.701975521264655*^9, 3.701975525232389*^9}, 3.702515030820552*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Location", "[", 
   RowBox[{"creature", ":", 
    RowBox[{"_BlendingCreature", "|", "_MendelianCreature"}]}], "]"}], ":=", 
  RowBox[{"creature", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.697058114476972*^9, 3.697058124649664*^9}, 
   3.6970594513734007`*^9, 3.697059676983111*^9, 3.697062161645197*^9, {
   3.701975638947995*^9, 3.7019756407799664`*^9}, 3.702515226368801*^9}],

Cell["Let\[CloseCurlyQuote]s test that out now:", "Text",
 CellChangeTimes->{{3.701975647635392*^9, 3.701975651371154*^9}}],

Cell[CellGroupData[{

Cell["Tests", "Subsection",
 CellChangeTimes->{{3.701974444642325*^9, 3.7019744451223516`*^9}}],

Cell[CellGroupData[{

Cell["Verify the accessors", "Subsubsection",
 CellChangeTimes->{{3.697062085363174*^9, 3.697062090083747*^9}, 
   3.697062930300584*^9, {3.701974309191289*^9, 3.701974314669613*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Traits", "[", "bc1", "]"}], "===", "0.1"}]], "Input",
 CellChangeTimes->{{3.697057836189814*^9, 3.6970578396831303`*^9}, {
   3.697057873267894*^9, 3.6970578744821568`*^9}, {3.701973695637179*^9, 
   3.7019736963736763`*^9}, 3.7025152176150007`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.701975595816244*^9, 3.7019778251702414`*^9, 3.701977891581171*^9, {
   3.7025156701317472`*^9, 3.702515680578701*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Traits", "[", "bc2", "]"}], "===", "0.4"}]], "Input",
 CellChangeTimes->{{3.6970581385796747`*^9, 3.6970581428086*^9}, {
   3.701973700110165*^9, 3.70197370053336*^9}, 3.702515218660254*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.701975596697674*^9, 3.701977825253138*^9, 3.7019778916643543`*^9, {
   3.702515670281486*^9, 3.702515680669856*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Location", "[", "bc3", "]"}], "===", 
  RowBox[{"{", 
   RowBox[{"40", ",", "30"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.697058145731196*^9, 3.697058152631872*^9}, {
   3.701973703437724*^9, 3.701973703853462*^9}, 3.702515219605391*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.701975643958744*^9, 3.701977825311413*^9, 3.701977891703533*^9, {
   3.702515670331456*^9, 3.702515680741585*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Location", "[", "bc4", "]"}], "===", 
  RowBox[{"{", 
   RowBox[{"40", ",", "20"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6970581551564198`*^9, 3.69705816083149*^9}, {
   3.7019737065574512`*^9, 3.701973707029462*^9}, 3.702515220561192*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.701975644935111*^9, 3.7019778253810463`*^9, 3.701977891776517*^9, {
   3.7025156704033623`*^9, 3.7025156808175173`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Traits", "[", "mc1", "]"}], "===", 
  RowBox[{"{", 
   RowBox[{"\"\<A\>\"", ",", "\"\<1\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.702515114155181*^9, 3.702515127254322*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.7025151281583757`*^9, {3.702515670469853*^9, 3.7025156808841953`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Traits", "[", "mc2", "]"}], "===", 
  RowBox[{"{", 
   RowBox[{"\"\<B\>\"", ",", "\"\<3\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.702515131233993*^9, 3.7025151448489113`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.702515145564885*^9, {3.702515670536511*^9, 3.7025156809513073`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Location", "[", "mc3", "]"}], "===", 
  RowBox[{"{", 
   RowBox[{"45", ",", "35"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.702515173489752*^9, 3.702515184831687*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.702515186329158*^9, {3.702515670604431*^9, 3.702515681001341*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Location", "[", "mc4", "]"}], "===", 
  RowBox[{"{", 
   RowBox[{"45", ",", "25"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.702515187173284*^9, 3.702515193145184*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.702515193694482*^9, {3.702515670671061*^9, 3.702515681066475*^9}}]
}, Open  ]],

Cell["Awesome.", "Text",
 CellChangeTimes->{{3.7019756684679403`*^9, 3.701975671786481*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evolution", "Section",
 CellChangeTimes->{{3.697058392088963*^9, 3.6970583946793756`*^9}}],

Cell[TextData[{
 "In part 1, we wrote the ",
 StyleBox["Procreate", "Code"],
 " function to evolve two ",
 StyleBox["BlendingCreature", "Code"],
 "s by blending their traits. Here is the implementation:"
}], "Text",
 CellChangeTimes->{{3.69705466651711*^9, 3.697054743192922*^9}, 
   3.7019735901228456`*^9, {3.7019757535832148`*^9, 3.70197577739847*^9}, {
   3.701975813813348*^9, 3.7019758183969193`*^9}, {3.701975916745048*^9, 
   3.701975923698369*^9}, {3.701976004279316*^9, 3.70197602071747*^9}, 
   3.7019760719578857`*^9, {3.701976145672494*^9, 3.701976149632585*^9}, 
   3.702520503900035*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Procreate", "[", 
   RowBox[{"mother_BlendingCreature", ",", "father_BlendingCreature", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{"ChildCount", "\[Rule]", "1"}], "}"}], "]"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BlendingCreature", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Traits", "[", "father", "]"}], ",", 
         RowBox[{"Traits", "[", "mother", "]"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"xmin", ",", "xmax"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"ymin", ",", "ymax"}], "}"}]}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"OptionValue", "[", "ChildCount", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.696480382820127*^9, 3.69648038355877*^9}, {
   3.696480431365302*^9, 3.696480434894802*^9}, {3.6964805311533947`*^9, 
   3.69648055572878*^9}, {3.696480607894912*^9, 3.696480609038704*^9}, {
   3.696481225264845*^9, 3.696481226074621*^9}, {3.6964817355603857`*^9, 
   3.696481749767474*^9}, {3.69648187445708*^9, 3.6964819789768476`*^9}, {
   3.696485266954054*^9, 3.696485283065517*^9}, {3.6964887775000343`*^9, 
   3.696488786842452*^9}, {3.6964888249483147`*^9, 3.6964888585200987`*^9}, {
   3.6970473806700697`*^9, 3.697047418961844*^9}, {3.697058216314651*^9, 
   3.6970582174268827`*^9}, {3.697059173701398*^9, 3.697059217674262*^9}, 
   3.697059267980551*^9, 3.6970594539104013`*^9, {3.697059668747794*^9, 
   3.697059671753937*^9}, 3.697062164349049*^9, {3.702515347170581*^9, 
   3.7025153625035143`*^9}}],

Cell[TextData[{
 "Now we need a ",
 StyleBox["Procreate", "Code"],
 " function that will evolve two ",
 StyleBox["MendelianCreature", "Code"],
 "s. In the Blending Model, we would take the average of the traits of the \
father and mother. In the Mendelian Model, we must pick between discrete \
genes from the father and mother."
}], "Text",
 CellChangeTimes->{{3.702520459222978*^9, 3.702520477672333*^9}, {
  3.702520528479488*^9, 3.702520542080076*^9}, {3.702520796646983*^9, 
  3.702520835659648*^9}}],

Cell[TextData[{
 "We can actually reuse the implementation of ",
 StyleBox["Procreate", "Code"],
 " we have for ",
 StyleBox["BlendingCreature", "Code"],
 "s. We simply need to replace the line that produces the ",
 StyleBox["Mean", "Code"],
 " of the ",
 StyleBox["Traits", "Code"],
 " with another function that picks ",
 StyleBox["Traits", "Code"],
 " at random from the ",
 StyleBox["father", "Code"],
 " and ",
 StyleBox["mother", "Code"],
 ". We can do that pretty easily with RandomChoice: "
}], "Text",
 CellChangeTimes->{{3.702520837583783*^9, 3.702520910607284*^9}, {
  3.702520942219584*^9, 3.7025210357639227`*^9}, {3.7025227668190317`*^9, 
  3.702522817014606*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "RandomChoice"}]], "Input",
 CellChangeTimes->{{3.702521051053687*^9, 3.7025210530550756`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"RandomChoice\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\) gives a \
pseudorandom choice of one of the \!\(\*SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\). \
\\n\!\(\*RowBox[{\\\"RandomChoice\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\) \
gives a list of \!\(\*StyleBox[\\\"n\\\", \\\"TI\\\"]\) pseudorandom choices. \
\\n\!\(\*RowBox[{\\\"RandomChoice\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\
\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\
\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}]}], \\\"]\\\"}]\) gives an \!\(\*SubscriptBox[StyleBox[\\\"n\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]\)\[Times]\!\(\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\)\[Times]\[Ellipsis] array of pseudorandom \
choices. \\n\!\(\*RowBox[{\\\"RandomChoice\\\", \\\"[\\\", RowBox[{RowBox[{\\\
\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"1\
\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\) gives a pseudorandom choice \
weighted by the \!\(\*SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\
\\\"i\\\", \\\"TI\\\"]]\). \\n\!\(\*RowBox[{\\\"RandomChoice\\\", \\\"[\\\", \
RowBox[{RowBox[{StyleBox[\\\"wlist\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"elist\\\", \\\"TI\\\"]}], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\) gives a list of \!\(\*StyleBox[\\\"n\\\", \\\"TI\
\\\"]\) weighted choices.\\n\!\(\*RowBox[{\\\"RandomChoice\\\", \\\"[\\\", \
RowBox[{RowBox[{StyleBox[\\\"wlist\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"elist\\\", \\\"TI\\\"]}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\) gives an \
\!\(\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]\)\[Times]\!\(\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\)\[Times]\[Ellipsis] array of weighted \
choices.\"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/RandomChoice"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.702522858229711*^9},
 CellTags->"Info243702497658-1757410"]
}, Open  ]],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s use the first form, and pass the ",
 StyleBox["Traits", "Code"],
 " of ",
 StyleBox["mc1", "Code"],
 " and ",
 StyleBox["mc2", "Code"],
 " as a test:"
}], "Text",
 CellChangeTimes->{{3.702521183071854*^9, 3.702521200171618*^9}, 
   3.702522826048112*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomChoice", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Traits", "[", "mc1", "]"}], ",", 
    RowBox[{"Traits", "[", "mc2", "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7025211082410383`*^9, 3.702521135900537*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"A\"\>", ",", "\<\"1\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.702521123043118*^9, 3.702521167843609*^9}, 
   3.7025228618053303`*^9}]
}, Open  ]],

Cell[TextData[{
 "Great. So now, we can reuse the implementation of ",
 StyleBox["Procreate", "Code"],
 " for ",
 StyleBox["BlendingCreature", "Code"],
 "s:"
}], "Text",
 CellChangeTimes->{{3.7025212030404377`*^9, 3.702521250448042*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Procreate", "[", 
   RowBox[{"father_MendelianCreature", ",", "mother_MendelianCreature", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{"ChildCount", "\[Rule]", "1"}], "}"}], "]"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MendelianCreature", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "And", " ", "we", " ", "replace", " ", "this", " ", "line", " ", "with",
        " ", "our", " ", "RandomChoice", " ", "using", " ", "father", " ", 
       "for", " ", "mc1", " ", "and", " ", "mother", " ", "for", " ", "mc2"}],
       " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"RandomChoice", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Traits", "[", "father", "]"}], ",", 
         RowBox[{"Traits", "[", "mother", "]"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"xmin", ",", "xmax"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"ymin", ",", "ymax"}], "}"}]}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], ",", 
    RowBox[{"OptionValue", "[", "ChildCount", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.702521268359544*^9, 3.7025213072843113`*^9}}],

Cell["Let\[CloseCurlyQuote]s test that out:", "Text",
 CellChangeTimes->{{3.701976204910245*^9, 3.701976207862329*^9}}],

Cell[CellGroupData[{

Cell["Tests", "Subsection",
 CellChangeTimes->{{3.701974482224745*^9, 3.701974482775489*^9}}],

Cell[CellGroupData[{

Cell["\<\
Verify that Procreate of bc1 and bc2 produces offspring with trait value 0.25\
\
\>", "Subsubsection",
 CellChangeTimes->{{3.697061984966942*^9, 3.6970620384531307`*^9}, 
   3.6970629347888412`*^9, {3.7025213335756817`*^9, 3.702521334957918*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"Procreate", "[", 
    RowBox[{"bc1", ",", "bc2"}], "]"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"BlendingCreature", "[", 
      RowBox[{"0.25", ",", 
       RowBox[{"{", 
        RowBox[{"x_", ",", "y_"}], "}"}]}], "]"}], "}"}], "/;", 
    RowBox[{
     RowBox[{"xmin", "\[LessEqual]", "x", "\[LessEqual]", "xmax"}], "&&", 
     RowBox[{"ymin", "\[LessEqual]", "y", "\[LessEqual]", "ymax"}]}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.697059230259359*^9, 3.697059247193615*^9}, {
   3.6970593010399017`*^9, 3.6970593370773897`*^9}, 3.697059431758791*^9, {
   3.697059529697315*^9, 3.697059568614009*^9}, {3.702521346894513*^9, 
   3.702521347681777*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.701976212375737*^9, 3.701977825489553*^9, 
  3.7019778919341*^9, 3.702521351302928*^9, 3.702522882013179*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Verify that Procreate of bc1 and bc2 with ChildCount \[Rule] 2 produces two \
BlendingCreature offspring\
\>", "Subsubsection",
 CellChangeTimes->{{3.697061984966942*^9, 3.697062067556243*^9}, 
   3.697062938588951*^9, {3.70252168170671*^9, 3.7025217055340242`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"Procreate", "[", 
    RowBox[{"bc1", ",", "bc2", ",", 
     RowBox[{"ChildCount", "\[Rule]", "2"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"offspring", ":", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"BlendingCreature", "[", 
        RowBox[{"0.25", ",", "_"}], "]"}], ".."}], "}"}]}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "offspring", "]"}], "\[Equal]", "2"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.69705935217303*^9, 3.697059424915639*^9}, {
  3.7025213528231783`*^9, 3.702521353700506*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.701976214161334*^9, 3.701977825545217*^9, 
  3.701977891993512*^9, 3.7025213557486973`*^9, 3.702522882110464*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Verify that Procreate of mc1 and mc3 produces offspring with trait value in \
{{A, 1}, {D, 1}}\
\>", "Subsubsection",
 CellChangeTimes->{{3.697061984966942*^9, 3.6970620384531307`*^9}, 
   3.6970629347888412`*^9, {3.702521368426958*^9, 3.702521416914728*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"Procreate", "[", 
    RowBox[{"mc1", ",", "mc3"}], "]"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"MendelianCreature", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", "|", "\"\<D\>\""}], ",", "\"\<1\>\""}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"x_", ",", "y_"}], "}"}]}], "]"}], "}"}], "/;", 
    RowBox[{
     RowBox[{"xmin", "\[LessEqual]", "x", "\[LessEqual]", "xmax"}], "&&", 
     RowBox[{"ymin", "\[LessEqual]", "y", "\[LessEqual]", "ymax"}]}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.697059230259359*^9, 3.697059247193615*^9}, {
   3.6970593010399017`*^9, 3.6970593370773897`*^9}, 3.697059431758791*^9, {
   3.697059529697315*^9, 3.697059568614009*^9}, {3.7025213591016912`*^9, 
   3.702521361575872*^9}, {3.7025214283013268`*^9, 3.702521523621935*^9}, {
   3.702521598414247*^9, 3.702521603251535*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.701976212375737*^9, 3.701977825489553*^9, 3.7019778919341*^9, {
   3.702521459539625*^9, 3.7025215285347*^9}, 3.702521612855789*^9, 
   3.7025228821992693`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Verify that Procreate of mc1 and mc2 produces offspring with trait value in \
{{A, 1}, {A, 3}, {B, 1}, {B, 3}}\
\>", "Subsubsection",
 CellChangeTimes->{{3.697061984966942*^9, 3.6970620384531307`*^9}, 
   3.6970629347888412`*^9, {3.702521368426958*^9, 3.702521416914728*^9}, {
   3.702521555044097*^9, 3.702521572828738*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"Procreate", "[", 
    RowBox[{"mc1", ",", "mc2"}], "]"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"MendelianCreature", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", "|", "\"\<B\>\""}], ",", 
         RowBox[{"\"\<1\>\"", "|", "\"\<3\>\""}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x_", ",", "y_"}], "}"}]}], "]"}], "}"}], "/;", 
    RowBox[{
     RowBox[{"xmin", "\[LessEqual]", "x", "\[LessEqual]", "xmax"}], "&&", 
     RowBox[{"ymin", "\[LessEqual]", "y", "\[LessEqual]", "ymax"}]}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.697059230259359*^9, 3.697059247193615*^9}, {
   3.6970593010399017`*^9, 3.6970593370773897`*^9}, 3.697059431758791*^9, {
   3.697059529697315*^9, 3.697059568614009*^9}, {3.7025213591016912`*^9, 
   3.702521361575872*^9}, {3.7025214283013268`*^9, 3.702521523621935*^9}, {
   3.702521575675088*^9, 3.702521609012775*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.701976212375737*^9, 3.701977825489553*^9, 3.7019778919341*^9, {
   3.702521459539625*^9, 3.7025215285347*^9}, {3.702521582598113*^9, 
   3.702521610104273*^9}, 3.702522882282336*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Verify that Procreate of mc1 and mc2 with ChildCount \[Rule] 2 produces two \
MendelianCreature offspring\
\>", "Subsubsection",
 CellChangeTimes->{{3.697061984966942*^9, 3.697062067556243*^9}, 
   3.697062938588951*^9, {3.702521690729203*^9, 3.702521699583022*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"Procreate", "[", 
    RowBox[{"mc1", ",", "mc2", ",", 
     RowBox[{"ChildCount", "\[Rule]", "2"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"offspring", ":", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MendelianCreature", "[", 
        RowBox[{"_", ",", "_"}], "]"}], ".."}], "}"}]}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "offspring", "]"}], "\[Equal]", "2"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.69705935217303*^9, 3.697059424915639*^9}, {
  3.702521631296432*^9, 3.702521668723871*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.701976214161334*^9, 3.701977825545217*^9, 3.701977891993512*^9, {
   3.7025216421029787`*^9, 3.702521669569755*^9}, 3.702522882369499*^9}]
}, Open  ]],

Cell["Awesome!", "Text",
 CellChangeTimes->{{3.701976215997431*^9, 3.701976217053425*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialization", "Section",
 CellChangeTimes->{{3.6970606457119904`*^9, 3.697060649783867*^9}}],

Cell[TextData[{
 "Here\[CloseCurlyQuote]s our function from part 1 that initialized a \
population of ",
 StyleBox["BlendingCreature", "Code"],
 "s:"
}], "Text",
 CellChangeTimes->{{3.697054319447968*^9, 3.69705437934177*^9}, {
  3.701976294946834*^9, 3.7019763198658743`*^9}, {3.7025229161493196`*^9, 
  3.7025229327770147`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"InitializeBlendingPopulation", "[", "size_Integer", "]"}], ":=", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BlendingCreature", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"N", "@", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"xmin", ",", "xmax"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"ymin", ",", "ymax"}], "}"}]}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "size"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.702521834033551*^9, 3.702521878065035*^9}}],

Cell["\<\
We can modify InitializeBlendingPopulation to initialize our Mendelian \
population:\
\>", "Text",
 CellChangeTimes->{{3.702522991154307*^9, 3.702523073863956*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"InitializeMendelianPopulation", "[", "size_Integer", "]"}], ":=", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MendelianCreature", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "We", " ", "just", " ", "need", " ", "to", " ", "modify", " ", "the", 
       " ", "RandomChoice", " ", "to", " ", "choose", " ", "between", " ", 
       "the", " ", "discrete", " ", "genes"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomChoice", "[", "latinGenes", "]"}], ",", 
        RowBox[{"RandomChoice", "[", "numberGenes", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"xmin", ",", "xmax"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"ymin", ",", "ymax"}], "}"}]}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "size"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.696479043218953*^9, 3.69647914592505*^9}, {
  3.6964798745471478`*^9, 3.69647995858217*^9}, {3.696481022023856*^9, 
  3.696481023512104*^9}, {3.696481501968294*^9, 3.696481526430341*^9}, {
  3.696481725025012*^9, 3.6964817544011097`*^9}, {3.69648872092585*^9, 
  3.696488733021345*^9}, {3.696488862904047*^9, 3.696488864912147*^9}, {
  3.697047253199658*^9, 3.697047266325412*^9}, {3.697049065277911*^9, 
  3.6970490777653303`*^9}, {3.7025223997863626`*^9, 3.7025224291383057`*^9}, {
  3.702522964999612*^9, 3.702522970352363*^9}, {3.702523075618643*^9, 
  3.702523102461589*^9}}],

Cell["Let\[CloseCurlyQuote]s test it out:", "Text",
 CellChangeTimes->{{3.701976531451095*^9, 3.7019765333375063`*^9}}],

Cell[CellGroupData[{

Cell["Tests", "Subsection",
 CellChangeTimes->{{3.7019746261468554`*^9, 3.7019746277699347`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Verify that InitializeBlendingPopulation returns 20 BlendingCreatures\
\>", "Subsubsection",
 CellChangeTimes->{{3.697061967351475*^9, 3.697061979527329*^9}, 
   3.6970629529163017`*^9, {3.7025231705128*^9, 3.702523172222229*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"InitializeBlendingPopulation", "[", "20", "]"}], ",", 
   RowBox[{
    RowBox[{"creatures", ":", 
     RowBox[{"{", 
      RowBox[{"_BlendingCreature", ".."}], "}"}]}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "creatures", "]"}], "\[Equal]", "20"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.697060544715961*^9, 3.69706059316936*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.701976538766612*^9, 3.7019778256717854`*^9, 
  3.7019778921477747`*^9, 3.70252315355617*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Verify that InitializeMendelianPopulation returns 20 MendelianCreatures\
\>", "Subsubsection",
 CellChangeTimes->{{3.697061967351475*^9, 3.697061979527329*^9}, 
   3.6970629529163017`*^9, {3.7025231705128*^9, 3.702523182393077*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"InitializeMendelianPopulation", "[", "20", "]"}], ",", 
   RowBox[{
    RowBox[{"creatures", ":", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MendelianCreature", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Alternatives", "@@", "latinGenes"}], ",", 
           RowBox[{"Alternatives", "@@", "numberGenes"}]}], "}"}], ",", "_"}],
         "]"}], ".."}], "}"}]}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "creatures", "]"}], "\[Equal]", "20"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.702523410659479*^9, 3.702523438218961*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.702523412900772*^9, 3.702523439148395*^9}}]
}, Open  ]],

Cell["Awesome!", "Text",
 CellChangeTimes->{{3.701976540225369*^9, 3.701976541241457*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation", "Section",
 CellChangeTimes->{{3.69706067488667*^9, 3.6970606769093*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["Evolve", "Code"],
 " function from part 1 is completely agnostic to the kind of creature it \
works on. We\[CloseCurlyQuote]ve written ",
 StyleBox["Procreate", "Code"],
 " to be able to handle both ",
 StyleBox["BlendingCreature", "Code"],
 "s and ",
 StyleBox["MendelianCreature", "Code"],
 "s. Therefore, our ",
 StyleBox["Evolve", "Code"],
 " function can simply be modified so that it will match ",
 StyleBox["MendelianCreature", "Code"],
 "s as well:"
}], "Text",
 CellChangeTimes->{{3.701977102094947*^9, 3.701977124381728*^9}, {
  3.702524114850978*^9, 3.702524202185872*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Evolve", "[", 
   RowBox[{"population", ":", 
    RowBox[{"{", 
     RowBox[{"__BlendingCreature", "|", "__MendelianCreature"}], "}"}]}], 
   "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Procreate", "[", 
      RowBox[{
       RowBox[{"Sequence", "@@", "#"}], ",", 
       RowBox[{"ChildCount", "\[Rule]", "2"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"RandomSample", "[", "population", "]"}], ",", "2"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.697060725748899*^9, 3.69706073125646*^9}, 
   3.6970621682366247`*^9, 3.701976671607972*^9, 3.702524223200386*^9, 
   3.702524260857656*^9}],

Cell[TextData[{
 "Here is our ",
 StyleBox["BlendingSimulate", "Code"],
 " function from part 1:"
}], "Text",
 CellChangeTimes->{{3.70252430265972*^9, 3.702524316193365*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BlendingSimulate", "[", 
   RowBox[{
   "seed_Integer", ",", "numberOfGenerations_Integer", ",", 
    "initialPopulationSize_Integer"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"BlockRandom", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SeedRandom", "[", "seed", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"BlendingSimulate", "[", 
      RowBox[{
      "seed", ",", "numberOfGenerations", ",", "initialPopulationSize"}], 
      "]"}], "=", 
     RowBox[{"NestList", "[", 
      RowBox[{"Evolve", ",", 
       RowBox[{
       "InitializeBlendingPopulation", "[", "initialPopulationSize", "]"}], 
       ",", 
       RowBox[{"numberOfGenerations", "-", "1"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6964841816199703`*^9, 3.696484238111355*^9}, {
   3.696484285470439*^9, 3.6964844600386477`*^9}, {3.696484523644968*^9, 
   3.696484523715393*^9}, {3.696488478351795*^9, 3.696488521019113*^9}, {
   3.697047899503047*^9, 3.697047910862351*^9}, 3.7019775621344557`*^9}],

Cell["We can reuse all of the code:", "Text",
 CellChangeTimes->{{3.70252432768004*^9, 3.702524340281706*^9}, {
  3.70252438661016*^9, 3.7025243880351267`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MendelianSimulate", "[", 
   RowBox[{
   "seed_Integer", ",", "numberOfGenerations_Integer", ",", 
    "initialPopulationSize_Integer"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"BlockRandom", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SeedRandom", "[", "seed", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"We", "'"}], "re", " ", "just", " ", "going", " ", "to", " ", 
      "change", " ", "BlendingSimulate", " ", "to", " ", 
      "MendelianSimulate"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MendelianSimulate", "[", 
      RowBox[{
      "seed", ",", "numberOfGenerations", ",", "initialPopulationSize"}], 
      "]"}], "=", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "And", " ", "InitializeBlendingPopulation", " ", "to", " ", 
       "InitializeMendelianPopulation"}], " ", "*)"}], 
     RowBox[{"NestList", "[", 
      RowBox[{"Evolve", ",", 
       RowBox[{
       "InitializeMendelianPopulation", "[", "initialPopulationSize", "]"}], 
       ",", 
       RowBox[{"numberOfGenerations", "-", "1"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.702524348179743*^9, {3.7025243800379963`*^9, 3.702524445760336*^9}}],

Cell[TextData[{
 "Looks like all the hard work was in part 1! Here, we get to reuse the \
caching mechanism we implemented in part 1 as well. Finally, we need to \
implement the main Simulate function. We can do this with a call to ",
 StyleBox["Switch", "Code"],
 ":"
}], "Text",
 CellChangeTimes->{{3.7025244677887487`*^9, 3.7025244904336967`*^9}, {
  3.702529481721257*^9, 3.7025295235138893`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Simulate", "[", 
   RowBox[{
   "seed_Integer", ",", "numberOfGenerations_Integer", ",", 
    "initialPopulationSize_Integer", ",", "method_String"}], "]"}], ":=", 
  RowBox[{"Switch", "[", 
   RowBox[{"method", ",", "\[IndentingNewLine]", "\"\<Blending\>\"", ",", 
    RowBox[{"BlendingSimulate", "[", 
     RowBox[{
     "seed", ",", "numberOfGenerations", ",", "initialPopulationSize"}], 
     "]"}], ",", "\[IndentingNewLine]", "\"\<Mendelian\>\"", ",", 
    RowBox[{"MendelianSimulate", "[", 
     RowBox[{
     "seed", ",", "numberOfGenerations", ",", "initialPopulationSize"}], 
     "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7025295062473516`*^9, 3.70252958479426*^9}}],

Cell[CellGroupData[{

Cell["Tests", "Subsection",
 CellChangeTimes->{{3.701974694216819*^9, 3.701974694807371*^9}}],

Cell[CellGroupData[{

Cell["\<\
Verify that Evolving a Blending population produces a new population of the \
same size\
\>", "Subsubsection",
 CellChangeTimes->{{3.697061643818967*^9, 3.697061670618466*^9}, 
   3.6970629572922077`*^9, {3.701974674993908*^9, 3.7019746753041267`*^9}, {
   3.702524500344366*^9, 3.702524514227106*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"initPop", "=", 
     RowBox[{"InitializeBlendingPopulation", "[", "20", "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nextGen", "=", 
       RowBox[{"Evolve", "[", "initPop", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"And", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MatchQ", "[", 
        RowBox[{"nextGen", ",", 
         RowBox[{
          RowBox[{"creatures", ":", 
           RowBox[{"{", 
            RowBox[{"_BlendingCreature", ".."}], "}"}]}], "/;", 
          RowBox[{
           RowBox[{"Length", "[", "creatures", "]"}], "\[Equal]", "20"}]}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"nextGen", "=!=", "initPop"}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.69706167636066*^9, 3.697061762071661*^9}, {
  3.697061824559229*^9, 3.697061955016506*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.701977826485512*^9, 3.701977989328347*^9, 
  3.702524530620816*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Verify that Evolving a Mendelian population produces a new population of the \
same size\
\>", "Subsubsection",
 CellChangeTimes->{{3.697061643818967*^9, 3.697061670618466*^9}, 
   3.6970629572922077`*^9, {3.701974674993908*^9, 3.7019746753041267`*^9}, {
   3.702524500344366*^9, 3.7025245123144417`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"initPop", "=", 
     RowBox[{"InitializeMendelianPopulation", "[", "20", "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nextGen", "=", 
       RowBox[{"Evolve", "[", "initPop", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"And", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MatchQ", "[", 
        RowBox[{"nextGen", ",", 
         RowBox[{
          RowBox[{"creatures", ":", 
           RowBox[{"{", 
            RowBox[{"_MendelianCreature", ".."}], "}"}]}], "/;", 
          RowBox[{
           RowBox[{"Length", "[", "creatures", "]"}], "\[Equal]", "20"}]}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"nextGen", "=!=", "initPop"}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.69706167636066*^9, 3.697061762071661*^9}, {
  3.697061824559229*^9, 3.697061955016506*^9}, {3.702524518266871*^9, 
  3.702524527817391*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.701977826485512*^9, 3.701977989328347*^9, 
  3.702524532639089*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Verify that the Blending simulation is repeatable for the same arguments\
\>", "Subsubsection",
 CellChangeTimes->{{3.697061595844596*^9, 3.6970616149326553`*^9}, 
   3.697062962547941*^9, {3.7025245427798843`*^9, 3.702524543533156*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BlendingSimulate", "[", 
   RowBox[{"0", ",", "20", ",", "200"}], "]"}], "===", 
  RowBox[{"BlendingSimulate", "[", 
   RowBox[{"0", ",", "20", ",", "200"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6970615078330307`*^9, 3.697061511032398*^9}, {
  3.697061563904456*^9, 3.697061587949218*^9}, {3.697063544825716*^9, 
  3.697063546247661*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.701977826580151*^9, 3.701977990771085*^9, 
  3.70252454581881*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Verify that the Mendelian simulation is repeatable for the same arguments\
\>", "Subsubsection",
 CellChangeTimes->{{3.697061595844596*^9, 3.6970616149326553`*^9}, 
   3.697062962547941*^9, {3.7025245427798843`*^9, 3.702524551295641*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MendelianSimulate", "[", 
   RowBox[{"0", ",", "20", ",", "200"}], "]"}], "===", 
  RowBox[{"MendelianSimulate", "[", 
   RowBox[{"0", ",", "20", ",", "200"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6970615078330307`*^9, 3.697061511032398*^9}, {
  3.697061563904456*^9, 3.697061587949218*^9}, {3.697063544825716*^9, 
  3.697063546247661*^9}, {3.702524553794237*^9, 3.70252455704676*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.701977826580151*^9, 3.701977990771085*^9, {3.70252454581881*^9, 
   3.702524557862829*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Verify that the Blending simulation produces different results for different \
seeds\
\>", "Subsubsection",
 CellChangeTimes->{{3.697061595844596*^9, 3.697061631435689*^9}, 
   3.697062966507677*^9, {3.702524568216722*^9, 3.702524570398356*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BlendingSimulate", "[", 
   RowBox[{"0", ",", "20", ",", "200"}], "]"}], "=!=", 
  RowBox[{"BlendingSimulate", "[", 
   RowBox[{"1", ",", "20", ",", "200"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6970615078330307`*^9, 3.697061511032398*^9}, {
   3.697061563904456*^9, 3.697061587949218*^9}, {3.6970616350593653`*^9, 
   3.697061637019559*^9}, 3.6970635496959*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.701977826661477*^9, 3.701977992209337*^9, 
  3.702524573045063*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Verify that the Mendelian simulation produces different results for different \
seeds\
\>", "Subsubsection",
 CellChangeTimes->{{3.697061595844596*^9, 3.697061631435689*^9}, 
   3.697062966507677*^9, {3.702524568216722*^9, 3.702524582222739*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MendelianSimulate", "[", 
   RowBox[{"0", ",", "20", ",", "200"}], "]"}], "=!=", 
  RowBox[{"MendelianSimulate", "[", 
   RowBox[{"1", ",", "20", ",", "200"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6970615078330307`*^9, 3.697061511032398*^9}, {
   3.697061563904456*^9, 3.697061587949218*^9}, {3.6970616350593653`*^9, 
   3.697061637019559*^9}, 3.6970635496959*^9, {3.702524585723411*^9, 
   3.702524586578298*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.701977826661477*^9, 3.701977992209337*^9, {3.702524573045063*^9, 
   3.702524587565474*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Verify that calling Simulate with the Blending parameter produces a \
BlendingCreature\
\>", "Subsubsection",
 CellChangeTimes->{{3.702529602276332*^9, 3.7025296208721113`*^9}, {
  3.702529689800742*^9, 3.7025296924227858`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"Simulate", "[", 
    RowBox[{"0", ",", "1", ",", "1", ",", "\"\<Blending\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", "BlendingCreature_", "}"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7025296237922297`*^9, 3.702529670249015*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.702529638953658*^9, 3.702529670486207*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Verify that calling Simulate with the Mendelian parameter produces a \
MendelianCreature\
\>", "Subsubsection",
 CellChangeTimes->{{3.702529602276332*^9, 3.7025296208721113`*^9}, {
  3.702529680914351*^9, 3.7025296987445*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"Simulate", "[", 
    RowBox[{"0", ",", "1", ",", "1", ",", "\"\<Mendelian\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", "MendelianCreature_", "}"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7025296237922297`*^9, 3.702529670249015*^9}, {
  3.702529702063465*^9, 3.702529708836801*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.702529638953658*^9, 3.702529670486207*^9}, 
   3.702529709887389*^9}]
}, Open  ]],

Cell["Awesome!", "Text",
 CellChangeTimes->{{3.7019779949547853`*^9, 3.701977996259053*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rendering", "Section",
 CellChangeTimes->{{3.697059732497171*^9, 3.697059735031404*^9}}],

Cell[TextData[{
 "Next, let\[CloseCurlyQuote]s evaluate the provided ",
 StyleBox["ColorBinarize", "Code"],
 " function:"
}], "Text",
 CellChangeTimes->{{3.697059793526235*^9, 3.697059812084386*^9}, {
  3.697060213406019*^9, 3.6970602157502604`*^9}, {3.697062892462349*^9, 
  3.697062892918498*^9}, {3.701978148957975*^9, 3.701978160635667*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ColorBinarize", "[", "color_RGBColor", "]"}], ":=", 
  RowBox[{
   RowBox[{"Round", "[", 
    RowBox[{"Mean", "[", 
     RowBox[{"List", "@@", "color"}], "]"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "\[Rule]", "White"}], ",", 
     RowBox[{"1", "\[Rule]", "Black"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.696487415373748*^9, 3.6964874375484858`*^9}, {
  3.696487585493565*^9, 3.696487594157699*^9}}],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s also evaluate our ",
 StyleBox["HeredityColor", "Code"],
 " for ",
 StyleBox["BlendingCreature", "Code"],
 "s:"
}], "Text",
 CellChangeTimes->{{3.7025260188522167`*^9, 3.7025260367492733`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HeredityColor", "[", "creature_BlendingCreature", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"traits", "=", 
      RowBox[{"Traits", "[", "creature", "]"}]}], "\[IndentingNewLine]", 
     "}"}], ",", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"traits", ",", "traits", ",", "traits"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.69705984354031*^9, 3.697059878874744*^9}, 
   3.69706217507614*^9, 3.702525371278969*^9}],

Cell[TextData[{
 "For ",
 StyleBox["MendelianCreature", "Code"],
 "s, we built our ",
 StyleBox["HeredityColor", "Code"],
 " as follows:"
}], "Text",
 CellChangeTimes->{{3.702526049315439*^9, 3.702526090355617*^9}, 
   3.702526135897232*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HeredityColor", "[", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"latinGene_", ",", "numberGene_"}], "}"}], ",", "_"}], "]"}], 
   "]"}], ":=", 
  RowBox[{"RGBColor", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"latinGenes", ",", "latinGene"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "/", 
     RowBox[{"Length", "[", "latinGenes", "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"numberGenes", ",", "numberGene"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "/", 
     RowBox[{"Length", "[", "numberGenes", "]"}]}], ",", 
    "\[IndentingNewLine]", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6964799997503853`*^9, 3.696480022347591*^9}, {
   3.696480104760857*^9, 3.696480105936528*^9}, {3.6964802093748817`*^9, 
   3.696480212900964*^9}, {3.696480862806539*^9, 3.696480863233189*^9}, {
   3.696481304653533*^9, 3.696481309325597*^9}, {3.696481700737328*^9, 
   3.696481707239698*^9}, {3.697046812357704*^9, 3.697046813677223*^9}, 
   3.6970582863521833`*^9, {3.697063125912866*^9, 3.697063187132203*^9}, {
   3.697063296930656*^9, 3.6970632985448227`*^9}, {3.70252610360935*^9, 
   3.702526117549399*^9}, {3.702526152322195*^9, 3.7025261616927767`*^9}, 
   3.702528767413176*^9}],

Cell[TextData[{
 "Evaluate ",
 StyleBox["CreatureName", "Code"],
 " for ",
 StyleBox["BlendingCreature", "Code"],
 "s:"
}], "Text",
 CellChangeTimes->{{3.702526192033947*^9, 3.7025262005157633`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CreatureName", "[", "creature_BlendingCreature", "]"}], ":=", 
  RowBox[{"Round", "[", 
   RowBox[{
    RowBox[{"Traits", "[", "creature", "]"}], ",", ".1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.697062322827454*^9, 3.697062335151455*^9}, 
   3.701978403084324*^9}],

Cell[TextData[{
 "And the ",
 StyleBox["CreatureName", "Code"],
 " for ",
 StyleBox["MendelianCreature", "Code"],
 "s is simply ",
 StyleBox["StringJoin", "Code"],
 " of the ",
 StyleBox["Traits", "Code"],
 ":"
}], "Text",
 CellChangeTimes->{{3.702526211451301*^9, 3.702526234176498*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CreatureName", "[", "creature_MendelianCreature", "]"}], ":=", 
  RowBox[{"StringJoin", "[", 
   RowBox[{"Traits", "[", "creature", "]"}], "]"}]}]], "Input"],

Cell[TextData[{
 "Now we have the ",
 StyleBox["Render", "Code"],
 " functions. It\[CloseCurlyQuote]s simple to modify them to work with ",
 StyleBox["MendelianCreature", "Code"],
 "s as well:"
}], "Text",
 CellChangeTimes->{{3.702526367500607*^9, 3.7025264032187843`*^9}, {
  3.702526547309927*^9, 3.702526551257719*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Render", "[", 
   RowBox[{"creature", ":", 
    RowBox[{"_BlendingCreature", "|", "_MendelianCreature"}]}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"color", "=", 
       RowBox[{"HeredityColor", "[", "creature", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"location", "=", 
       RowBox[{"Location", "[", "creature", "]"}]}]}], "\[IndentingNewLine]", 
     "}"}], ",", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "Black", "]"}], ",", "color", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{"location", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ColorBinarize", "[", "color", "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"CreatureName", "[", "creature", "]"}], ",", "location"}], 
       "]"}]}], "\[IndentingNewLine]", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.696489032555457*^9, 3.69648903389811*^9}, {
   3.696489145553155*^9, 3.6964891819890013`*^9}, {3.6970475570744257`*^9, 
   3.697047589225329*^9}, {3.6970477222228727`*^9, 3.697047724983316*^9}, {
   3.6970623447308693`*^9, 3.697062369534542*^9}, 3.7019784669151773`*^9, 
   3.702526435486259*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Render", "[", 
   RowBox[{"population", ":", 
    RowBox[{"{", 
     RowBox[{"___BlendingCreature", "|", "___MendelianCreature"}], "}"}]}], 
   "]"}], ":=", 
  RowBox[{"Render", "/@", "population"}]}]], "Input",
 CellChangeTimes->{
  3.6970625253079367`*^9, {3.6970625578511877`*^9, 3.6970625623518057`*^9}, 
   3.7019790016346292`*^9, {3.701979074937009*^9, 3.701979075439322*^9}, 
   3.702526562882559*^9}],

Cell[TextData[{
 "Evaluate our ",
 StyleBox["TraitHistogram", "Code"],
 " function for ",
 StyleBox["BlendingCreature", "Code"],
 "s:"
}], "Text",
 CellChangeTimes->{{3.702526807826943*^9, 3.702526823823387*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TraitHistogram", "[", 
   RowBox[{"population", ":", 
    RowBox[{"{", "___BlendingCreature", "}"}]}], "]"}], ":=", 
  RowBox[{"Histogram", "[", 
   RowBox[{
    RowBox[{"Traits", "/@", "population"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.1", ",", ".1"}], "}"}], ",", 
    RowBox[{"ChartStyle", "->", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"i", ",", "i", ",", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6970640981853313`*^9, 3.6970641013798857`*^9}, {
   3.697064139066393*^9, 3.697064163465513*^9}, {3.701979494414441*^9, 
   3.7019794948139553`*^9}, 3.702526672514024*^9}],

Cell["\<\
Now we need to build a histogram for MendelianCreatures. \
Let\[CloseCurlyQuote]s start by making a population that we can use to \
prototype:\
\>", "Text",
 CellChangeTimes->{{3.702526842060183*^9, 3.702526873211035*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"population", "=", 
  RowBox[{"InitializeMendelianPopulation", "[", "20", "]"}]}]], "Input",
 CellChangeTimes->{{3.7025269037325897`*^9, 3.702526905633791*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"D\"\>", ",", "\<\"2\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"47", ",", "50"}], "}"}]}], "]"}], ",", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"D\"\>", ",", "\<\"3\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"48", ",", "38"}], "}"}]}], "]"}], ",", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"C\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"45", ",", "18"}], "}"}]}], "]"}], ",", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"B\"\>", ",", "\<\"4\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"34", ",", "47"}], "}"}]}], "]"}], ",", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"D\"\>", ",", "\<\"2\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "40"}], "}"}]}], "]"}], ",", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"D\"\>", ",", "\<\"2\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"25", ",", "33"}], "}"}]}], "]"}], ",", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"A\"\>", ",", "\<\"3\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "41"}], "}"}]}], "]"}], ",", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"D\"\>", ",", "\<\"3\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "11"}], "}"}]}], "]"}], ",", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"D\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "48"}], "}"}]}], "]"}], ",", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"C\"\>", ",", "\<\"4\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"32", ",", "30"}], "}"}]}], "]"}], ",", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"A\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "16"}], "}"}]}], "]"}], ",", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"B\"\>", ",", "\<\"4\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"35", ",", "48"}], "}"}]}], "]"}], ",", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"C\"\>", ",", "\<\"3\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "44"}], "}"}]}], "]"}], ",", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"B\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "7"}], "}"}]}], "]"}], ",", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"A\"\>", ",", "\<\"3\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"29", ",", "34"}], "}"}]}], "]"}], ",", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"A\"\>", ",", "\<\"2\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "49"}], "}"}]}], "]"}], ",", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"A\"\>", ",", "\<\"3\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"22", ",", "35"}], "}"}]}], "]"}], ",", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"A\"\>", ",", "\<\"3\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "34"}], "}"}]}], "]"}], ",", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"B\"\>", ",", "\<\"4\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"19", ",", "42"}], "}"}]}], "]"}], ",", 
   RowBox[{"MendelianCreature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"C\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"43", ",", "10"}], "}"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.702526908031242*^9}]
}, Open  ]],

Cell[TextData[{
 "We want to extract all the individual genes and get a ",
 StyleBox["Tally", "Code"],
 " of them. So let\[CloseCurlyQuote]s map ",
 StyleBox["Traits", "Code"],
 " over the ",
 StyleBox["population", "Code"],
 ":"
}], "Text",
 CellChangeTimes->{{3.7025269687246227`*^9, 3.7025270375850477`*^9}, {
  3.702527215740934*^9, 3.702527266366028*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Traits", "/@", "population"}]], "Input",
 CellChangeTimes->{{3.70252724313441*^9, 3.702527273577043*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"D\"\>", ",", "\<\"2\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D\"\>", ",", "\<\"3\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"C\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"B\"\>", ",", "\<\"4\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D\"\>", ",", "\<\"2\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D\"\>", ",", "\<\"2\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"A\"\>", ",", "\<\"3\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D\"\>", ",", "\<\"3\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"C\"\>", ",", "\<\"4\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"A\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"B\"\>", ",", "\<\"4\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"C\"\>", ",", "\<\"3\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"B\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"A\"\>", ",", "\<\"3\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"A\"\>", ",", "\<\"2\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"A\"\>", ",", "\<\"3\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"A\"\>", ",", "\<\"3\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"B\"\>", ",", "\<\"4\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"C\"\>", ",", "\<\"1\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.70252727382784*^9}]
}, Open  ]],

Cell["\<\
Good. Now, in order to get an individual Tally of the genes, we need the \
letters and numbers to be in a flattened list:\
\>", "Text",
 CellChangeTimes->{{3.702527277796338*^9, 3.702527307180468*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"Traits", "/@", "population"}], "]"}]], "Input",
 CellChangeTimes->{{3.702527309818287*^9, 3.7025273118280067`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"D\"\>", ",", "\<\"2\"\>", ",", "\<\"D\"\>", ",", "\<\"3\"\>", 
   ",", "\<\"C\"\>", ",", "\<\"1\"\>", ",", "\<\"B\"\>", ",", "\<\"4\"\>", 
   ",", "\<\"D\"\>", ",", "\<\"2\"\>", ",", "\<\"D\"\>", ",", "\<\"2\"\>", 
   ",", "\<\"A\"\>", ",", "\<\"3\"\>", ",", "\<\"D\"\>", ",", "\<\"3\"\>", 
   ",", "\<\"D\"\>", ",", "\<\"1\"\>", ",", "\<\"C\"\>", ",", "\<\"4\"\>", 
   ",", "\<\"A\"\>", ",", "\<\"1\"\>", ",", "\<\"B\"\>", ",", "\<\"4\"\>", 
   ",", "\<\"C\"\>", ",", "\<\"3\"\>", ",", "\<\"B\"\>", ",", "\<\"1\"\>", 
   ",", "\<\"A\"\>", ",", "\<\"3\"\>", ",", "\<\"A\"\>", ",", "\<\"2\"\>", 
   ",", "\<\"A\"\>", ",", "\<\"3\"\>", ",", "\<\"A\"\>", ",", "\<\"3\"\>", 
   ",", "\<\"B\"\>", ",", "\<\"4\"\>", ",", "\<\"C\"\>", ",", "\<\"1\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.702527312371504*^9}]
}, Open  ]],

Cell["Now we can apply Tally:", "Text",
 CellChangeTimes->{{3.702527314493071*^9, 3.702527319769803*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tally", "@", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Traits", "/@", "population"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.702527322553007*^9, 3.702527324102319*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"D\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"3\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"C\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"1\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"B\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"4\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"A\"\>", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7025273245541687`*^9}]
}, Open  ]],

Cell["\<\
Awesome. Let\[CloseCurlyQuote]s sort this so that it appears in a \
deterministic order:\
\>", "Text",
 CellChangeTimes->{{3.702527328105589*^9, 3.7025273503360567`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "@", 
  RowBox[{"Tally", "@", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Traits", "/@", "population"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.702527351750637*^9, 3.702527353679924*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"1\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"3\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"4\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"A\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"B\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"C\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"D\"\>", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7025273540595703`*^9}]
}, Open  ]],

Cell["\<\
We\[CloseCurlyQuote]ll now use a BarChart to render this. The first argument \
to BarChart are the tallies. We then pass the label for the bars in an option \
called CharLabels. So let\[CloseCurlyQuote]s hold our Tally in a With:\
\>", "Text",
 CellChangeTimes->{{3.702527365040248*^9, 3.7025273750296993`*^9}, {
  3.702527413031906*^9, 3.702527485077725*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tally", "=", 
     RowBox[{"Sort", "@", 
      RowBox[{"Tally", "@", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Traits", "/@", "population"}], "]"}]}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{"tally", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"ChartLabels", "\[Rule]", 
      RowBox[{"tally", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "1"}], "]"}], "]"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.702527486954672*^9, 3.7025275214043217`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.38380952380952377`, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5421245421245421, 0.}, {1.4578754578754578`, 5.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{18.69021284984582, 
           67.05186746487254}, {-60.43006498412423, 123.79089556964139`}}],
         StatusArea[#, 5]& ,
         TagBoxNote->"5"],
        StyleBox["5", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.542124542124542, 0.}, {2.4578754578754576`, 4.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{70.818639689455, 
           119.18029430448172`}, {-23.710872873371116`, 123.79089556964139`}}],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.542124542124542, 0.}, {3.4578754578754576`, 7.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{122.94706652906419`, 
           171.3087211440909}, {-133.8684492056305, 123.7908955696414}}],
         StatusArea[#, 7]& ,
         TagBoxNote->"7"],
        StyleBox["7", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[7, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.542124542124542, 0.}, {4.457875457875458, 4.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{175.07549336867336`, 
           223.4371479837001}, {-23.710872873371116`, 123.79089556964139`}}],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.542124542124542, 0.}, {5.457875457875458, 6.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{227.20392020828254`, 
           275.5655748233093}, {-97.14925709487737, 123.79089556964139`}}],
         StatusArea[#, 6]& ,
         TagBoxNote->"6"],
        StyleBox["6", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.542124542124542, 0.}, {6.457875457875458, 4.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{279.33234704789174`, 
           327.6940016629185}, {-23.710872873371116`, 123.79089556964139`}}],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{6.542124542124542, 0.}, {7.457875457875458, 4.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{331.4607738875009, 
           379.82242850252766`}, {-23.710872873371116`, 123.79089556964139`}}],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{7.542124542124542, 0.}, {8.457875457875458, 6.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{383.5892007271101, 
           431.95085534213683`}, {-97.14925709487737, 123.79089556964139`}}],
         StatusArea[#, 6]& ,
         TagBoxNote->"6"],
        StyleBox["6", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.38380952380952377`, 0.}, {8.619356776556776, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5421245421245421, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5421245421245421, 0.}]}],
          LineBox[{{8.457875457875458, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {8.457875457875458, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {
           LineBox[{{1.4578754578754578`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4578754578754578`, 
              0.}]}], LineBox[{{1.542124542124542, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.542124542124542, 
              0.}]}], LineBox[{{2.4578754578754576`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.4578754578754576`, 
              0.}]}], LineBox[{{2.542124542124542, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.542124542124542, 
              0.}]}], LineBox[{{3.457875457875457, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.457875457875457, 
              0.}]}], LineBox[{{3.5421245421245415`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.5421245421245415`, 
              0.}]}], LineBox[{{4.457875457875458, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.457875457875458, 
              0.}]}], LineBox[{{4.542124542124542, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.542124542124542, 
              0.}]}], LineBox[{{5.457875457875458, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.457875457875458, 
              0.}]}], LineBox[{{5.542124542124542, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.542124542124542, 
              0.}]}], LineBox[{{6.457875457875458, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.457875457875458, 
              0.}]}], LineBox[{{6.542124542124542, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.542124542124542, 
              0.}]}], LineBox[{{7.457875457875458, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.457875457875458, 
              0.}]}], LineBox[{{7.542124542124542, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.542124542124542, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"1\"\>", Offset[{0., -2.}, {1., 0.}], 
           ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
          InsetBox["\<\"2\"\>", Offset[{0., -2.}, {2., 0.}], 
           ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
          InsetBox["\<\"3\"\>", Offset[{0., -2.}, {2.9999999999999996, 0.}], 
           ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
          InsetBox["\<\"4\"\>", Offset[{0., -2.}, {3.9999999999999996, 0.}], 
           ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
          InsetBox["\<\"A\"\>", Offset[{0., -2.}, {5., 0.}], 
           ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
          InsetBox["\<\"B\"\>", Offset[{0., -2.}, {6., 0.}], 
           ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
          InsetBox["\<\"C\"\>", Offset[{0., -2.}, {7., 0.}], 
           ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
          InsetBox["\<\"D\"\>", Offset[{0., -2.}, {8., 0.}], 
           ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}]}, 
         "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.38380952380952377`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"1\"", TraditionalForm], 0}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox["\"2\"", TraditionalForm], 0}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["\"3\"", TraditionalForm], 0}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox["\"4\"", TraditionalForm], 0}, {5., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {5., 
       FormBox["\"A\"", TraditionalForm], 0}, {6., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {6., 
       FormBox["\"B\"", TraditionalForm], 0}, {7., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {7., 
       FormBox["\"C\"", TraditionalForm], 0}, {8., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {8., 
       FormBox["\"D\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.702527511403054*^9, 3.7025275220258913`*^9}}]
}, Open  ]],

Cell["\<\
Awesome. Now let\[CloseCurlyQuote]s get that extra credit. We need to apply \
the appropriate color to each bar. Here, {A, B, C, D} contribute to the red \
RGB component and {1, 2, 3, 4} contribute to the green RGB component. Let\
\[CloseCurlyQuote]s write a helper function that will produce the correct \
color for a given gene:\
\>", "Text",
 CellChangeTimes->{{3.702527526354418*^9, 3.702527533835*^9}, {
  3.702527760759358*^9, 3.702527814827026*^9}, {3.702527851210446*^9, 
  3.702527939600911*^9}, {3.702528031648509*^9, 3.702528056927536*^9}, {
  3.702528127363575*^9, 3.7025281623298893`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GeneColor", "[", 
   RowBox[{"gene_", "/;", 
    RowBox[{"MemberQ", "[", 
     RowBox[{"latinGenes", ",", "gene"}], "]"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"RGBColor", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FirstPosition", "[", 
       RowBox[{"latinGenes", ",", "gene"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "/", 
     RowBox[{"Length", "[", "latinGenes", "]"}]}], ",", "0", ",", "0"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.702528163965909*^9, 3.7025282342741013`*^9}, {
  3.702528385643855*^9, 3.702528404204816*^9}, {3.70252843561563*^9, 
  3.7025284488786163`*^9}, {3.702528516189597*^9, 3.702528518246112*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GeneColor", "[", 
   RowBox[{"gene_", "/;", 
    RowBox[{"MemberQ", "[", 
     RowBox[{"numberGenes", ",", "gene"}], "]"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"RGBColor", "[", 
   RowBox[{"0", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"FirstPosition", "[", 
       RowBox[{"numberGenes", ",", "gene"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "/", 
     RowBox[{"Length", "[", "numberGenes", "]"}]}], ",", "0"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.702528450181484*^9, 3.702528482324893*^9}, {
  3.702528520014545*^9, 3.702528530857317*^9}}],

Cell["\<\
Now, we can generate the colors for ChartStyle by mapping GeneColor over the \
ChartLabels:\
\>", "Text",
 CellChangeTimes->{{3.702528562796719*^9, 3.7025286130608587`*^9}, {
  3.702529040066918*^9, 3.7025290435100727`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tally", "=", 
     RowBox[{"Sort", "@", 
      RowBox[{"Tally", "@", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Traits", "/@", "population"}], "]"}]}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{"tally", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"ChartLabels", "\[Rule]", 
      RowBox[{"tally", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", 
      RowBox[{"GeneColor", "/@", 
       RowBox[{"tally", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}]}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.702527486954672*^9, 3.7025275214043217`*^9}, {
  3.702528601327549*^9, 3.702528630802895*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.38380952380952377`, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
     Thickness[Small]}], 
     {RGBColor[0, 
       NCache[
        Rational[1, 4], 0.25], 0], EdgeForm[{Opacity[0.644], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5421245421245421, 0.}, {1.4578754578754578`, 5.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{18.69021284984582, 
           67.05186746487254}, {-60.43006498412423, 123.79089556964139`}}],
         StatusArea[#, 5]& ,
         TagBoxNote->"5"],
        StyleBox["5", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5, {}], "Tooltip"]& ]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 2], 0.5], 0], EdgeForm[{Opacity[0.644], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.542124542124542, 0.}, {2.4578754578754576`, 4.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{70.818639689455, 
           119.18029430448172`}, {-23.710872873371116`, 123.79089556964139`}}],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ]}, 
     {RGBColor[0, 
       NCache[
        Rational[3, 4], 0.75], 0], EdgeForm[{Opacity[0.644], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.542124542124542, 0.}, {3.4578754578754576`, 7.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{122.94706652906419`, 
           171.3087211440909}, {-133.8684492056305, 123.7908955696414}}],
         StatusArea[#, 7]& ,
         TagBoxNote->"7"],
        StyleBox["7", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[7, {}], "Tooltip"]& ]}, 
     {RGBColor[0, 1, 0], EdgeForm[{Opacity[0.644], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.542124542124542, 0.}, {4.457875457875458, 4.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{175.07549336867336`, 
           223.4371479837001}, {-23.710872873371116`, 123.79089556964139`}}],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ]}, 
     {RGBColor[
       NCache[
        Rational[1, 4], 0.25], 0, 0], EdgeForm[{Opacity[0.644], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.542124542124542, 0.}, {5.457875457875458, 6.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{227.20392020828254`, 
           275.5655748233093}, {-97.14925709487737, 123.79089556964139`}}],
         StatusArea[#, 6]& ,
         TagBoxNote->"6"],
        StyleBox["6", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6, {}], "Tooltip"]& ]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 0, 0], EdgeForm[{Opacity[0.644], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.542124542124542, 0.}, {6.457875457875458, 4.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{279.33234704789174`, 
           327.6940016629185}, {-23.710872873371116`, 123.79089556964139`}}],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ]}, 
     {RGBColor[
       NCache[
        Rational[3, 4], 0.75], 0, 0], EdgeForm[{Opacity[0.644], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{6.542124542124542, 0.}, {7.457875457875458, 4.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{331.4607738875009, 
           379.82242850252766`}, {-23.710872873371116`, 123.79089556964139`}}],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ]}, 
     {RGBColor[1, 0, 0], EdgeForm[{Opacity[0.644], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{7.542124542124542, 0.}, {8.457875457875458, 6.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{383.5892007271101, 
           431.95085534213683`}, {-97.14925709487737, 123.79089556964139`}}],
         StatusArea[#, 6]& ,
         TagBoxNote->"6"],
        StyleBox["6", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.38380952380952377`, 0.}, {8.619356776556776, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5421245421245421, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5421245421245421, 0.}]}],
          LineBox[{{8.457875457875458, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {8.457875457875458, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {
           LineBox[{{1.4578754578754578`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4578754578754578`, 
              0.}]}], LineBox[{{1.542124542124542, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.542124542124542, 
              0.}]}], LineBox[{{2.4578754578754576`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.4578754578754576`, 
              0.}]}], LineBox[{{2.542124542124542, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.542124542124542, 
              0.}]}], LineBox[{{3.457875457875457, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.457875457875457, 
              0.}]}], LineBox[{{3.5421245421245415`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.5421245421245415`, 
              0.}]}], LineBox[{{4.457875457875458, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.457875457875458, 
              0.}]}], LineBox[{{4.542124542124542, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.542124542124542, 
              0.}]}], LineBox[{{5.457875457875458, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.457875457875458, 
              0.}]}], LineBox[{{5.542124542124542, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.542124542124542, 
              0.}]}], LineBox[{{6.457875457875458, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.457875457875458, 
              0.}]}], LineBox[{{6.542124542124542, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.542124542124542, 
              0.}]}], LineBox[{{7.457875457875458, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.457875457875458, 
              0.}]}], LineBox[{{7.542124542124542, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.542124542124542, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"1\"\>", Offset[{0., -2.}, {1., 0.}], 
           ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
          InsetBox["\<\"2\"\>", Offset[{0., -2.}, {2., 0.}], 
           ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
          InsetBox["\<\"3\"\>", Offset[{0., -2.}, {2.9999999999999996, 0.}], 
           ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
          InsetBox["\<\"4\"\>", Offset[{0., -2.}, {3.9999999999999996, 0.}], 
           ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
          InsetBox["\<\"A\"\>", Offset[{0., -2.}, {5., 0.}], 
           ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
          InsetBox["\<\"B\"\>", Offset[{0., -2.}, {6., 0.}], 
           ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
          InsetBox["\<\"C\"\>", Offset[{0., -2.}, {7., 0.}], 
           ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
          InsetBox["\<\"D\"\>", Offset[{0., -2.}, {8., 0.}], 
           ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}]}, 
         "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.38380952380952377`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"1\"", TraditionalForm], 0}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox["\"2\"", TraditionalForm], 0}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["\"3\"", TraditionalForm], 0}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox["\"4\"", TraditionalForm], 0}, {5., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {5., 
       FormBox["\"A\"", TraditionalForm], 0}, {6., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {6., 
       FormBox["\"B\"", TraditionalForm], 0}, {7., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {7., 
       FormBox["\"C\"", TraditionalForm], 0}, {8., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {8., 
       FormBox["\"D\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.702528631772458*^9}]
}, Open  ]],

Cell["That\[CloseCurlyQuote]s our function! Let\[CloseCurlyQuote]s add the \
function definition:", "Text",
 CellChangeTimes->{{3.702529072174588*^9, 3.7025290905908937`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TraitHistogram", "[", 
   RowBox[{"population", ":", 
    RowBox[{"{", "___MendelianCreature", "}"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tally", "=", 
      RowBox[{"Sort", "@", 
       RowBox[{"Tally", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Traits", "/@", "population"}], "]"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"BarChart", "[", 
     RowBox[{
      RowBox[{"tally", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"ChartLabels", "\[Rule]", 
       RowBox[{"tally", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ",", 
      RowBox[{"ChartStyle", "\[Rule]", 
       RowBox[{"GeneColor", "/@", 
        RowBox[{"tally", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}]}]}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.702529064144932*^9, 3.702529095307291*^9}}],

Cell["Great! Let\[CloseCurlyQuote]s run our tests!", "Text",
 CellChangeTimes->{{3.701979316437392*^9, 3.7019793186775913`*^9}, {
  3.702528639712376*^9, 3.70252864070252*^9}}],

Cell[CellGroupData[{

Cell["Tests", "Subsection",
 CellChangeTimes->{{3.7019745477341843`*^9, 3.7019745481890173`*^9}}],

Cell[CellGroupData[{

Cell["Verify that HeredityColor of bc1 is GrayLevel of 0.1", "Subsubsection",
 CellChangeTimes->{{3.697061984966942*^9, 3.697062010429854*^9}, 
   3.697062940660616*^9, 3.7025266130881977`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ColorConvert", "[", 
   RowBox[{
    RowBox[{"HeredityColor", "[", "bc1", "]"}], ",", "\"\<RGB\>\""}], "]"}], "===", 
  RowBox[{"RGBColor", "[", 
   RowBox[{"0.1", ",", "0.1", ",", "0.1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.697059961487466*^9, 3.6970600463983727`*^9}, {
   3.697060091387376*^9, 3.6970601493851852`*^9}, {3.701973717029397*^9, 
   3.7019737177487097`*^9}, 3.702526601085349*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.701979270165616*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verify that HeredityColor of bc2 is GrayLevel of 0.4", "Subsubsection",
 CellChangeTimes->{{3.697061984966942*^9, 3.697061997006812*^9}, 
   3.6970629489803534`*^9, 3.702526614707738*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ColorConvert", "[", 
   RowBox[{
    RowBox[{"HeredityColor", "[", "bc2", "]"}], ",", "\"\<RGB\>\""}], "]"}], "===", 
  RowBox[{"RGBColor", "[", 
   RowBox[{"0.4", ",", "0.4", ",", "0.4"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.697059961487466*^9, 3.6970600463983727`*^9}, {
   3.697060091387376*^9, 3.6970601801516933`*^9}, {3.701973723869001*^9, 
   3.7019737243567467`*^9}, 3.702526602321698*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.701979272014646*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verify that HeredityColor of mc1", "Subsubsection",
 CellChangeTimes->{{3.697061984966942*^9, 3.697062010429854*^9}, 
   3.697062940660616*^9, 3.7025266130881977`*^9, 3.70252865645464*^9, 
   3.702528904909636*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ColorConvert", "[", 
   RowBox[{
    RowBox[{"HeredityColor", "[", "mc1", "]"}], ",", "\"\<RGB\>\""}], "]"}], "===", 
  RowBox[{"RGBColor", "[", 
   RowBox[{"0.25", ",", "0.25", ",", "0."}], "]"}]}]], "Input",
 CellChangeTimes->{{3.697059961487466*^9, 3.6970600463983727`*^9}, {
   3.697060091387376*^9, 3.6970601493851852`*^9}, {3.701973717029397*^9, 
   3.7019737177487097`*^9}, 3.702526601085349*^9, 3.702528659052808*^9, {
   3.702528847019539*^9, 3.702528864647512*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.701979270165616*^9, {3.702528851483477*^9, 3.702528864925295*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verify that HeredityColor of mc2", "Subsubsection",
 CellChangeTimes->{{3.697061984966942*^9, 3.697061997006812*^9}, 
   3.6970629489803534`*^9, 3.702526614707738*^9, 3.702528657971178*^9, 
   3.702528909173333*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ColorConvert", "[", 
   RowBox[{
    RowBox[{"HeredityColor", "[", "mc2", "]"}], ",", "\"\<RGB\>\""}], "]"}], "===", 
  RowBox[{"RGBColor", "[", 
   RowBox[{".5", ",", ".75", ",", "0."}], "]"}]}]], "Input",
 CellChangeTimes->{{3.697059961487466*^9, 3.6970600463983727`*^9}, {
   3.697060091387376*^9, 3.6970601801516933`*^9}, {3.701973723869001*^9, 
   3.7019737243567467`*^9}, 3.702526602321698*^9, 3.7025286606375637`*^9, {
   3.702528877889221*^9, 3.702528897968375*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.701979272014646*^9, {3.702528887194666*^9, 3.702528898243486*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verify that rendering a Blending creature returns a list", \
"Subsubsection",
 CellChangeTimes->{{3.6970629700991983`*^9, 3.6970629906507673`*^9}, {
  3.702528918150305*^9, 3.702528919995511*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"Render", "[", "bc1", "]"}], ",", "_List"}], "]"}]], "Input",
 CellChangeTimes->{{3.697062647065681*^9, 3.697062647271583*^9}, {
   3.69706359212691*^9, 3.697063602981882*^9}, 3.702526603930291*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7019792735862503`*^9, 3.701979283506172*^9}, 
   3.702528928066268*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verify that rendering a Mendelian creature returns a list", \
"Subsubsection",
 CellChangeTimes->{{3.6970629700991983`*^9, 3.6970629906507673`*^9}, {
  3.702528918150305*^9, 3.702528931269656*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"Render", "[", "mc1", "]"}], ",", "_List"}], "]"}]], "Input",
 CellChangeTimes->{{3.697062647065681*^9, 3.697062647271583*^9}, {
   3.69706359212691*^9, 3.697063602981882*^9}, 3.702526603930291*^9, {
   3.7025289375581083`*^9, 3.702528937636067*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7019792735862503`*^9, 3.701979283506172*^9}, {
  3.702528928066268*^9, 3.702528938029447*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verify that rendering a Blending population returns a list", \
"Subsubsection",
 CellChangeTimes->{{3.6970629700991983`*^9, 3.6970629906507673`*^9}, {
  3.6970639272837267`*^9, 3.697063928202074*^9}, {3.702528941348535*^9, 
  3.702528942203074*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"Render", "[", 
    RowBox[{"InitializeBlendingPopulation", "[", "20", "]"}], "]"}], ",", 
   "_List"}], "]"}]], "Input",
 CellChangeTimes->{{3.697063935526126*^9, 3.697063951193268*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.701979285503437*^9, 3.702528943999113*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verify that rendering a Mendelian population returns a list", \
"Subsubsection",
 CellChangeTimes->{{3.6970629700991983`*^9, 3.6970629906507673`*^9}, {
  3.6970639272837267`*^9, 3.697063928202074*^9}, {3.702528941348535*^9, 
  3.7025289524293833`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"Render", "[", 
    RowBox[{"InitializeMendelianPopulation", "[", "20", "]"}], "]"}], ",", 
   "_List"}], "]"}]], "Input",
 CellChangeTimes->{{3.697063935526126*^9, 3.697063951193268*^9}, {
  3.702528956153466*^9, 3.702528956863502*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.701979285503437*^9, {3.702528943999113*^9, 3.702528957511347*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Verify that we can render a column of graphics for a Blending simulation\
\>", "Subsubsection",
 CellChangeTimes->{{3.6970642303844213`*^9, 3.697064253622072*^9}, {
  3.7025289725106163`*^9, 3.702528977415978*^9}}],

Cell["\<\
This is not an automated test. Eyeball your render and make sure it looks \
like our render:\
\>", "Text",
 CellChangeTimes->{{3.7019747965968637`*^9, 3.7019748321942873`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TraitHistogram", "[", 
      RowBox[{
       RowBox[{"BlendingSimulate", "[", 
        RowBox[{"0", ",", "20", ",", "200"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"Render", "[", 
        RowBox[{
         RowBox[{"BlendingSimulate", "[", 
          RowBox[{"0", ",", "20", ",", "200"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ymin", ",", "ymax"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", "20"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", " ", "Center"}], "]"}]], "Input",
 CellChangeTimes->{{3.6970642591756763`*^9, 3.697064341164143*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.609], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.609], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0., 0., 0.], 
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{0., 0}, {0.1, 62}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{21.388660928742993`, 
               39.97348333212024}, {-30.758020922796312`, 
               49.57878718771335}}]},
            StatusArea[#, 62]& ,
            TagBoxNote->"62"],
           StyleBox["62", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[62, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0.5, 0.5, 0.5], 
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5, 0}, {0.6000000000000001, 92}, 
                "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{111.1877729456292, 
               129.77259534900645`}, {-69.32825065368809, 
               49.578787187713345`}}]},
            StatusArea[#, 92]& ,
            TagBoxNote->"92"],
           StyleBox["92", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[92, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1., 1., 1.], 
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{1., 0}, {1.1, 46}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{200.98688496251543`, 
               219.57170736589268`}, {-10.187231732987364`, 
               49.57878718771335}}]},
            StatusArea[#, 46]& ,
            TagBoxNote->"46"],
           StyleBox["46", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[46, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.022000000000000002`, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{0., 1.1}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{13, 9}], 
        {GrayLevel[1], InsetBox["0.`", {13, 9}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{27, 33}], 
        {GrayLevel[1], InsetBox["0.`", {27, 33}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{38, 12}], 
        {GrayLevel[1], InsetBox["0.`", {38, 12}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{21, 16}], 
        {GrayLevel[1], InsetBox["0.`", {21, 16}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{5, 31}], 
        {GrayLevel[1], InsetBox["0.`", {5, 31}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{31, 4}], 
        {GrayLevel[1], InsetBox["0.`", {31, 4}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{20, 28}], 
        {GrayLevel[1], InsetBox["0.`", {20, 28}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{24, 23}], 
        {GrayLevel[1], InsetBox["0.`", {24, 23}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{33, 40}], 
        {GrayLevel[1], InsetBox["0.`", {33, 40}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{7, 8}], 
        {GrayLevel[1], InsetBox["0.`", {7, 8}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{30, 50}], 
        {GrayLevel[1], InsetBox["0.`", {30, 50}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{32, 19}], 
        {GrayLevel[1], InsetBox["0.`", {32, 19}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{34, 37}], 
        {GrayLevel[1], InsetBox["0.5`", {34, 37}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{37, 18}], 
        {GrayLevel[1], InsetBox["0.5`", {37, 18}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{18, 26}], 
        {GrayLevel[0], InsetBox["1.`", {18, 26}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{28, 41}], 
        {GrayLevel[0], InsetBox["1.`", {28, 41}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{33, 28}], 
        {GrayLevel[0], InsetBox["1.`", {33, 28}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{23, 50}], 
        {GrayLevel[0], InsetBox["1.`", {23, 50}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{42, 18}], 
        {GrayLevel[1], InsetBox["0.5`", {42, 18}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{36, 4}], 
        {GrayLevel[1], InsetBox["0.5`", {36, 4}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{11, 50}], 
        {GrayLevel[0], InsetBox["1.`", {11, 50}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{5, 45}], 
        {GrayLevel[0], InsetBox["1.`", {5, 45}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{7, 39}], 
        {GrayLevel[1], InsetBox["0.5`", {7, 39}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{15, 23}], 
        {GrayLevel[1], InsetBox["0.5`", {15, 23}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{7, 45}], 
        {GrayLevel[1], InsetBox["0.5`", {7, 45}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{28, 2}], 
        {GrayLevel[1], InsetBox["0.5`", {28, 2}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{43, 43}], 
        {GrayLevel[1], InsetBox["0.`", {43, 43}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{16, 8}], 
        {GrayLevel[1], InsetBox["0.`", {16, 8}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{49, 10}], 
        {GrayLevel[0], InsetBox["1.`", {49, 10}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{4, 17}], 
        {GrayLevel[0], InsetBox["1.`", {4, 17}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{9, 40}], 
        {GrayLevel[1], InsetBox["0.5`", {9, 40}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{3, 18}], 
        {GrayLevel[1], InsetBox["0.5`", {3, 18}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{4, 35}], 
        {GrayLevel[1], InsetBox["0.`", {4, 35}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{2, 45}], 
        {GrayLevel[1], InsetBox["0.`", {2, 45}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{9, 42}], 
        {GrayLevel[0], InsetBox["1.`", {9, 42}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{14, 50}], 
        {GrayLevel[0], InsetBox["1.`", {14, 50}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{27, 29}], 
        {GrayLevel[1], InsetBox["0.5`", {27, 29}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{0, 45}], 
        {GrayLevel[1], InsetBox["0.5`", {0, 45}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{14, 24}], 
        {GrayLevel[0], InsetBox["1.`", {14, 24}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{28, 44}], 
        {GrayLevel[0], InsetBox["1.`", {28, 44}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{7, 8}], 
        {GrayLevel[1], InsetBox["0.5`", {7, 8}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{29, 18}], 
        {GrayLevel[1], InsetBox["0.5`", {29, 18}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{29, 37}], 
        {GrayLevel[1], InsetBox["0.5`", {29, 37}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{17, 12}], 
        {GrayLevel[1], InsetBox["0.5`", {17, 12}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{29, 50}], 
        {GrayLevel[1], InsetBox["0.`", {29, 50}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{7, 0}], 
        {GrayLevel[1], InsetBox["0.`", {7, 0}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{38, 19}], 
        {GrayLevel[1], InsetBox["0.5`", {38, 19}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{3, 12}], 
        {GrayLevel[1], InsetBox["0.5`", {3, 12}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{41, 26}], 
        {GrayLevel[1], InsetBox["0.`", {41, 26}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{2, 11}], 
        {GrayLevel[1], InsetBox["0.`", {2, 11}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{40, 50}], 
        {GrayLevel[1], InsetBox["0.`", {40, 50}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{3, 21}], 
        {GrayLevel[1], InsetBox["0.`", {3, 21}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{15, 5}], 
        {GrayLevel[1], InsetBox["0.5`", {15, 5}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{0, 41}], 
        {GrayLevel[1], InsetBox["0.5`", {0, 41}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{40, 4}], 
        {GrayLevel[1], InsetBox["0.`", {40, 4}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{19, 45}], 
        {GrayLevel[1], InsetBox["0.`", {19, 45}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{4, 31}], 
        {GrayLevel[1], InsetBox["0.5`", {4, 31}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{0, 26}], 
        {GrayLevel[1], InsetBox["0.5`", {0, 26}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{19, 22}], 
        {GrayLevel[1], InsetBox["0.5`", {19, 22}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{31, 30}], 
        {GrayLevel[1], InsetBox["0.5`", {31, 30}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{5, 24}], 
        {GrayLevel[1], InsetBox["0.5`", {5, 24}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{2, 22}], 
        {GrayLevel[1], InsetBox["0.5`", {2, 22}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{8, 14}], 
        {GrayLevel[0], InsetBox["1.`", {8, 14}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{20, 31}], 
        {GrayLevel[0], InsetBox["1.`", {20, 31}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{29, 28}], 
        {GrayLevel[1], InsetBox["0.5`", {29, 28}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{44, 50}], 
        {GrayLevel[1], InsetBox["0.5`", {44, 50}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{10, 50}], 
        {GrayLevel[0], InsetBox["1.`", {10, 50}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{21, 36}], 
        {GrayLevel[0], InsetBox["1.`", {21, 36}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{32, 20}], 
        {GrayLevel[0], InsetBox["1.`", {32, 20}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{27, 49}], 
        {GrayLevel[0], InsetBox["1.`", {27, 49}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{1, 17}], 
        {GrayLevel[1], InsetBox["0.5`", {1, 17}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{3, 20}], 
        {GrayLevel[1], InsetBox["0.5`", {3, 20}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{5, 37}], 
        {GrayLevel[1], InsetBox["0.5`", {5, 37}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{26, 43}], 
        {GrayLevel[1], InsetBox["0.5`", {26, 43}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{47, 1}], 
        {GrayLevel[1], InsetBox["0.5`", {47, 1}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{0, 4}], 
        {GrayLevel[1], InsetBox["0.5`", {0, 4}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{50, 27}], 
        {GrayLevel[1], InsetBox["0.`", {50, 27}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{8, 22}], 
        {GrayLevel[1], InsetBox["0.`", {8, 22}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{19, 4}], 
        {GrayLevel[1], InsetBox["0.5`", {19, 4}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{25, 31}], 
        {GrayLevel[1], InsetBox["0.5`", {25, 31}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{29, 36}], 
        {GrayLevel[1], InsetBox["0.`", {29, 36}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{38, 17}], 
        {GrayLevel[1], InsetBox["0.`", {38, 17}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{8, 33}], 
        {GrayLevel[0], InsetBox["1.`", {8, 33}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{13, 23}], 
        {GrayLevel[0], InsetBox["1.`", {13, 23}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{13, 16}], 
        {GrayLevel[1], InsetBox["0.`", {13, 16}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{22, 3}], 
        {GrayLevel[1], InsetBox["0.`", {22, 3}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{12, 30}], 
        {GrayLevel[1], InsetBox["0.`", {12, 30}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{41, 41}], 
        {GrayLevel[1], InsetBox["0.`", {41, 41}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{20, 5}], 
        {GrayLevel[1], InsetBox["0.5`", {20, 5}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{50, 5}], 
        {GrayLevel[1], InsetBox["0.5`", {50, 5}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{44, 36}], 
        {GrayLevel[1], InsetBox["0.`", {44, 36}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{15, 35}], 
        {GrayLevel[1], InsetBox["0.`", {15, 35}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{5, 30}], 
        {GrayLevel[1], InsetBox["0.5`", {5, 30}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{11, 40}], 
        {GrayLevel[1], InsetBox["0.5`", {11, 40}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{34, 32}], 
        {GrayLevel[0], InsetBox["1.`", {34, 32}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{33, 8}], 
        {GrayLevel[0], InsetBox["1.`", {33, 8}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{10, 26}], 
        {GrayLevel[1], InsetBox["0.5`", {10, 26}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{12, 45}], 
        {GrayLevel[1], InsetBox["0.5`", {12, 45}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{21, 36}], 
        {GrayLevel[1], InsetBox["0.`", {21, 36}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{23, 9}], 
        {GrayLevel[1], InsetBox["0.`", {23, 9}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{3, 47}], 
        {GrayLevel[1], InsetBox["0.`", {3, 47}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{44, 23}], 
        {GrayLevel[1], InsetBox["0.`", {44, 23}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{32, 27}], 
        {GrayLevel[1], InsetBox["0.5`", {32, 27}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{27, 15}], 
        {GrayLevel[1], InsetBox["0.5`", {27, 15}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{38, 22}], 
        {GrayLevel[1], InsetBox["0.`", {38, 22}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{14, 39}], 
        {GrayLevel[1], InsetBox["0.`", {14, 39}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{38, 35}], 
        {GrayLevel[1], InsetBox["0.`", {38, 35}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{25, 9}], 
        {GrayLevel[1], InsetBox["0.`", {25, 9}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{43, 13}], 
        {GrayLevel[1], InsetBox["0.5`", {43, 13}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{37, 19}], 
        {GrayLevel[1], InsetBox["0.5`", {37, 19}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{13, 40}], 
        {GrayLevel[1], InsetBox["0.`", {13, 40}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{30, 49}], 
        {GrayLevel[1], InsetBox["0.`", {30, 49}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{48, 8}], 
        {GrayLevel[1], InsetBox["0.`", {48, 8}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{4, 50}], 
        {GrayLevel[1], InsetBox["0.`", {4, 50}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{12, 17}], 
        {GrayLevel[1], InsetBox["0.5`", {12, 17}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{21, 48}], 
        {GrayLevel[1], InsetBox["0.5`", {21, 48}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{5, 17}], 
        {GrayLevel[1], InsetBox["0.`", {5, 17}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{40, 4}], 
        {GrayLevel[1], InsetBox["0.`", {40, 4}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{37, 6}], 
        {GrayLevel[1], InsetBox["0.`", {37, 6}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{31, 46}], 
        {GrayLevel[1], InsetBox["0.`", {31, 46}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{29, 47}], 
        {GrayLevel[1], InsetBox["0.5`", {29, 47}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{31, 36}], 
        {GrayLevel[1], InsetBox["0.5`", {31, 36}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{12, 8}], 
        {GrayLevel[1], InsetBox["0.`", {12, 8}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{9, 29}], 
        {GrayLevel[1], InsetBox["0.`", {9, 29}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{28, 45}], 
        {GrayLevel[1], InsetBox["0.5`", {28, 45}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{48, 3}], 
        {GrayLevel[1], InsetBox["0.5`", {48, 3}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{24, 25}], 
        {GrayLevel[1], InsetBox["0.`", {24, 25}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{19, 50}], 
        {GrayLevel[1], InsetBox["0.`", {19, 50}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{23, 5}], 
        {GrayLevel[1], InsetBox["0.5`", {23, 5}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{33, 15}], 
        {GrayLevel[1], InsetBox["0.5`", {33, 15}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{22, 29}], 
        {GrayLevel[0], InsetBox["1.`", {22, 29}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{31, 16}], 
        {GrayLevel[0], InsetBox["1.`", {31, 16}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{6, 1}], 
        {GrayLevel[1], InsetBox["0.`", {6, 1}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{17, 10}], 
        {GrayLevel[1], InsetBox["0.`", {17, 10}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{17, 42}], 
        {GrayLevel[1], InsetBox["0.5`", {17, 42}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{17, 2}], 
        {GrayLevel[1], InsetBox["0.5`", {17, 2}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{31, 13}], 
        {GrayLevel[1], InsetBox["0.5`", {31, 13}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{19, 12}], 
        {GrayLevel[1], InsetBox["0.5`", {19, 12}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{23, 29}], 
        {GrayLevel[1], InsetBox["0.5`", {23, 29}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{10, 4}], 
        {GrayLevel[1], InsetBox["0.5`", {10, 4}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{4, 41}], 
        {GrayLevel[1], InsetBox["0.`", {4, 41}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{42, 29}], 
        {GrayLevel[1], InsetBox["0.`", {42, 29}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{37, 25}], 
        {GrayLevel[0], InsetBox["1.`", {37, 25}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{36, 16}], 
        {GrayLevel[0], InsetBox["1.`", {36, 16}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{30, 27}], 
        {GrayLevel[1], InsetBox["0.`", {30, 27}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{46, 22}], 
        {GrayLevel[1], InsetBox["0.`", {46, 22}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{38, 45}], 
        {GrayLevel[1], InsetBox["0.5`", {38, 45}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{45, 0}], 
        {GrayLevel[1], InsetBox["0.5`", {45, 0}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{47, 15}], 
        {GrayLevel[0], InsetBox["1.`", {47, 15}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{5, 23}], 
        {GrayLevel[0], InsetBox["1.`", {5, 23}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{10, 33}], 
        {GrayLevel[0], InsetBox["1.`", {10, 33}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{46, 13}], 
        {GrayLevel[0], InsetBox["1.`", {46, 13}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{40, 13}], 
        {GrayLevel[1], InsetBox["0.5`", {40, 13}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{0, 29}], 
        {GrayLevel[1], InsetBox["0.5`", {0, 29}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{42, 44}], 
        {GrayLevel[0], InsetBox["1.`", {42, 44}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{9, 27}], 
        {GrayLevel[0], InsetBox["1.`", {9, 27}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{38, 9}], 
        {GrayLevel[1], InsetBox["0.5`", {38, 9}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{46, 34}], 
        {GrayLevel[1], InsetBox["0.5`", {46, 34}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{18, 35}], 
        {GrayLevel[1], InsetBox["0.5`", {18, 35}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{45, 1}], 
        {GrayLevel[1], InsetBox["0.5`", {45, 1}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{49, 16}], 
        {GrayLevel[1], InsetBox["0.5`", {49, 16}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{43, 41}], 
        {GrayLevel[1], InsetBox["0.5`", {43, 41}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{12, 47}], 
        {GrayLevel[1], InsetBox["0.5`", {12, 47}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{33, 18}], 
        {GrayLevel[1], InsetBox["0.5`", {33, 18}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{26, 13}], 
        {GrayLevel[0], InsetBox["1.`", {26, 13}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{16, 33}], 
        {GrayLevel[0], InsetBox["1.`", {16, 33}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{50, 6}], 
        {GrayLevel[1], InsetBox["0.5`", {50, 6}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{48, 22}], 
        {GrayLevel[1], InsetBox["0.5`", {48, 22}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{37, 34}], 
        {GrayLevel[1], InsetBox["0.5`", {37, 34}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{10, 39}], 
        {GrayLevel[1], InsetBox["0.5`", {10, 39}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{1, 22}], 
        {GrayLevel[1], InsetBox["0.5`", {1, 22}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{14, 38}], 
        {GrayLevel[1], InsetBox["0.5`", {14, 38}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{22, 23}], 
        {GrayLevel[0], InsetBox["1.`", {22, 23}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{12, 46}], 
        {GrayLevel[0], InsetBox["1.`", {12, 46}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{16, 12}], 
        {GrayLevel[0], InsetBox["1.`", {16, 12}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{28, 44}], 
        {GrayLevel[0], InsetBox["1.`", {28, 44}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{42, 19}], 
        {GrayLevel[1], InsetBox["0.5`", {42, 19}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{7, 32}], 
        {GrayLevel[1], InsetBox["0.5`", {7, 32}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{0, 32}], 
        {GrayLevel[0], InsetBox["1.`", {0, 32}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{27, 5}], 
        {GrayLevel[0], InsetBox["1.`", {27, 5}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{1, 17}], 
        {GrayLevel[1], InsetBox["0.5`", {1, 17}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{25, 36}], 
        {GrayLevel[1], InsetBox["0.5`", {25, 36}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{14, 3}], 
        {GrayLevel[0], InsetBox["1.`", {14, 3}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{26, 11}], 
        {GrayLevel[0], InsetBox["1.`", {26, 11}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{17, 2}], 
        {GrayLevel[0], InsetBox["1.`", {17, 2}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{13, 16}], 
        {GrayLevel[0], InsetBox["1.`", {13, 16}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{25, 43}], 
        {GrayLevel[0], InsetBox["1.`", {25, 43}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{8, 35}], 
        {GrayLevel[0], InsetBox["1.`", {8, 35}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{23, 30}], 
        {GrayLevel[1], InsetBox["0.5`", {23, 30}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{23, 16}], 
        {GrayLevel[1], InsetBox["0.5`", {23, 16}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{22, 7}], 
        {GrayLevel[1], InsetBox["0.5`", {22, 7}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{49, 49}], 
        {GrayLevel[1], InsetBox["0.5`", {49, 49}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{46, 39}], 
        {GrayLevel[1], InsetBox["0.5`", {46, 39}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{32, 27}], 
        {GrayLevel[1], InsetBox["0.5`", {32, 27}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{36, 46}], 
        {GrayLevel[1], InsetBox["0.5`", {36, 46}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{27, 34}], 
        {GrayLevel[1], InsetBox["0.5`", {27, 34}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{11, 4}], 
        {GrayLevel[1], InsetBox["0.`", {11, 4}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{20, 30}], 
        {GrayLevel[1], InsetBox["0.`", {20, 30}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{0, 20}], 
        {GrayLevel[1], InsetBox["0.5`", {0, 20}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{45, 6}], 
        {GrayLevel[1], InsetBox["0.5`", {45, 6}]}}},
      ImagePadding->20,
      ImageSize->Large,
      PlotRange->{{0, 50}, {0, 50}},
      ImageCache->GraphicsData["CompressedBitmap", "\<\
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
4+vprPNXiKuFEzfyOINN/vjnWpZbwJSjqnNENDmauWgVXBsq/ra1lSLOwvIQ
vnV0t5Z/YizhOINFbpN8LbK54OEw37LcuUy5Jl0O1NX6zs2qoblwL1wbTyqO
utkfI1+ziiJsaw8bYbgcIcS8xlCZxit/Xsa9nu9I3/r16/0h57jTalmfbaxo
PTXcPChQKVfBAMrU4iKBd0bEPepgTEdy8qqfV3nezY9s0s3wAeI6+5pjTzbn
+L8opns5hfPWUzidIx2q5fINSl1PETL5J5VnXlLw6RDT2bwd9OdWhMHBNudF
9jN5gPMv/94PxO3rlX66uqoqQj+9OIeWLUKrb1VLIY3jNrq95htyu15qn0D1
yyj+Cqm8wJOpFg5Hdjs/N3vl4RXUbYICb8GCBaV6cwraMC+yv61sf/+3R+PI
C12+lg2sGm688Tbxle98X+x98RsSvoKyEP39pz/9ibjtmhX+EGlpz/8/uO+G
hs4P/V1Oz8zU9Oho9Bwb9IJxCRuCponZBgJXdxVoL6TIco88Ylf2J5HdyMa9
XalR61kDCNhvWltbySTPJjTCvMg+tQb6BFjLypXXima9EQBtIA/AEMBPpBX2
R/AXeqx3WPZj/S1r8IYrfzY3N4uWlhb5s7FR+vvI383x7Gempkeee8N9HBv0
pMY0J5WMGy5fptP4J3IEVwryMuuxGi1DaWs98jef7kfvqqrnx4//nVjd1ibJ
g0NYi2taYJriy2uLFi2WZWDXbI2WYR0j28e3XqoW3qlq14udXVtj9k2cYpWO
IB6YZpX05MYgcNSAFrU12rwgMMnyYkC0ZFsjnv+jPxezZk6Xkz509Z07d66Y
OnUqAEsN5LFV1PrYis+dPw8r5sgNTZdKxA2X/GyPbDBz32qcGRTeQuvOHL3d
1d1+Cu2hbAZwpKpo9Awo9Io0hB4Hos5bVjolXKksSmh8Mjj4lQoNHpgAFfBv
pqHIUVOHpufwO5QN7sjZ91nNhjraXQkiQ/s33HADxbPhkffKV4iUB5U3VFNH
q6FU6PHmUutlqFem0P6NkU1l72mMjodUQ9Oo17l3cQueAKqbJZxO9jJwuDh0
VSlEaiQlixYtkvttKAIxPNq6das/qOVKyojPa/zP4ZVX5KngIOYT5TsweDm4
9uKSpArKqXphatdp8jdtb3B80DMYDltva6RaQzg529ra/PEp12pGfK62aHik
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
0+I7f/iH4m/+dIf45rZtoji0X8EGCqPhWFHnQOI5kSRaxi/tGxbHz54VJ8b3
yolnQd5vO5D3meCcqjQEny7Aw3+KpDo+omfp/O1XcBxFiM6eECP93f69P0zx
he9Cm/8QHKS8AXC3YC27Y6iKC5zpY2Qo7x4fldDsriEJ9HCEXVS5po4GWV4B
7NktctLLcYRZBKoclleRCbHLu8j3DwyIgcFBbz70cIRdVLmmNNc5nCZH0Hej
LmcCIl6OJCs+NKTS/4VoOjbib4wcTe+vYFshrueAwiKHTUDZcCQJwbiMiL92
9/SpKSXxV0VDsa+bI+Hi/KrWadttwXLbWIgvW5ZbblnuWJDMJLE3OQx22LK+
5ZblNJm2mkYuNiwHig5b1nepZTmdpNxNHc5FMk6DOb7s1HqbU2mdZdzNNISL
1p0zRLfbicArnErrFN4qXHv2se7zA7J2p6J4RaqvdX5slTUh/yBCix3KRt8X
88ON9qTgw6oU337XgS86qNDdDp+kCYCWxsg3GlPKBqD5zw48uNqh7HdT9FkH
QXss1bJM55KwOGbl5ARjyGPiu6mo1sEUEbq12/TdXJiiFST54QGy9AtOZOoY
pphP2k4EcPM8RH1uBW7nAQY4hfy1TUA8w7IcqvYrcDmWdX3Hki4dfpqaAsQJ
3bbmRdSSIe9rqSz9bUvCbgj213QXsrXGCduzZHhrDAynZcz6hxhyuDvZNMty
C/QSskuvHBgQyyTCtkl6bUO8n6sptkugHaDYMv9v1nlzp8bVl9jfPmkCdsmR
bzEkZZDK913IZjs1pskKuqWjDT0wHKZgyYilmgaxBxM+WY5aVst//11cP3LN
youDVuGktNGhEyvunY1ab9g3YLeDHW0q2dF0qHl/8KhThKTrm0xfKpRgF0ev
kiljo0O0VtajWI1Hrb/Llfvp1XKx3X0nGOoHFRjHdyEXLo5jdjlXg7dajBkY
jnhcMlZPY4/C53dVRjp1ZbdjUPp7YirGebjoMzu8I/gB0VinjIbAo2rhosUe
+eeLc0PRyjFgAPXuVHHG7C7hvx/J5sxTzsatzJxSpWKEzBDEUAX/8VqdP38+
ytvyb6a2Iqp6aJEDMJr1JIyyeikF3i65Mf7B7aVz9baHvyKee+YBsazAuzHK
PTahVc33Y1d9rtldo8/e/LKgVuvlEgGoyG/BPMZjEdkZsrQAaZDshza6tS0w
g9zoU6bM3A7dR5Z94SXh6sH4C77KCAu+70UOTkVytFYiHymIgdWaKSEYCacY
rOC8bE28unX5MrgKQ0lSQ1wVoMvbJmoaxIj33NZ18edMXZxRb38kx3PLwlqB
dKN4R6vS4xxCy5C4bdu2yZM2BwMXqNarXvOhDJir0zygJvbyBNEuQ7t+f1vY
P5FzT/w5Uw1nqf9dhuUVSLGab1rRegpkyD8UH0QhceXKldIuvPRdZuY0UC1U
jzwKw5E1ZA0GnWNqqXMMuiSyPok/j6wj6GDzQiSrc8igyiFyyTKJ1lP4TM0D
gnk26DrBVDrYTirjHK86v2oKp+JYUxcy9ICb4q3n5576LHggsi6Ix5hvOfez
FyJZl2FiVFtAuIop16jLtbW1yVAi4W/hmffOL8fVRz0Tl5JDBz0Tf86U4zwY
X7DsRwgHL4fN6+k4ywGj/EfcY+vWrWLq1KllcDs8894VqJYJp6z39wJmmH8e
GmYowUW/dUT6bRU5OBB0N2jS5cBjEHaO8LfwDByYUJWEm6t2qj6f2XSwl6YA
sy9Ykq31N276OuyrnXlRjVi//lOyExG1wqv169ej4VEUCtzS0iJvCxiTkqYc
pXGB8QSeIFS6pitNpPNzU/9Wa/LKodjpriZMpMX5pRanBlv88R/HobkFGzi3
xMHopKAkI6YWr4LS7y9C3daytnWdXETSRCrqdFYOKGiU39pmJza2+vaP/kZ8
SlMCgk6Aklk+JYuXKEpua79KfPXbL6WCehsbG6UOS4nB8G987k6Sk7KZv87+
kjDGJSsoqZkL19mfarS0fYZLHEYX9yBlkZDM5gavJdmZiv3/7V17jF7Vcd/s
28t6sZ3gB+DwtMn6saY2L2MIbAIk0MKCjQMYYzvQGGMIMW1ouhAIcROHpVbT
Lw/i9LW1WqsplIeVUvcP0kZWAsvDLbErrZBQZahcLAttJf+RVWqq02/uOXO/
uffOvWfmPj4bkpXA2rvnnjMz53HPzPxmpi+w6fzHL/7JXFq/KaNZE043MJ1B
DgAo0oimqylTeszqu+q0/MtoUXszsBVdTNn1HjENJ5yiaVaz5xXTcD4RZdEa
orcoxp3RpKXi4FlF0iX2k3e1Bsy5CjbRrpLPz9BH0XOByQDoB0se8AX3AAiq
g9/h+aOPfhsN6lp7+vTp0zHoU1FaszN4B9wLMbafJ9LVJjMdIBIrWu1zdYFZ
7iuwujQrxEFBi6U01FU5RMh9RdhCPJFhlp0PpBIDP3fMasssUty2Pkc1FWTR
go+rVFPYU2i52Au6Mr+htFLhwtQbYTkATWwHx57LBlmZnyB5LdTXT3yeSNmf
959Kr2jlxpXCGetWrQOrIjtEX9lFBzFoqSJM6x133BHrtlxXQ0OJ01c9fJYI
1F/MJC4ouk60I98onJxO1ZRbg1FYOqesSoEYV1gRAPiGG27ArJItVbgp0HiD
q0RbtPBZIqasCkj9RExFCyXeKJyaNtIua6qtsTQEzeYv/Bc1fCLLVWKlFyxY
UCzhZHeafwMtmZh+XVqGEBeEryoZSqdIyUMaypo1E9SbkTWzm6MLIX91v6jt
vtTQ447Q5l5WnsqEFR9Neb7Sgs84vnw1APtj/De+Sv4xhlJl3BWpoAg/vvly
09vLTIe2NCAlEUP1k8N30eFFJHJuI25JPUtow/KbmPifltrsF/Z3YxqvtnxI
GwoKLakJYd0TlW3Rmn+4w3HrSPxYvt3N+TS50wIjxWlFXMziQ0vffkLY302p
vLaHvDp5cSUO7WAVhRHkK4uHnPs+rNIPcDo6IPpBf5bQjNWwMTs4rXjdL+zv
RkYGXBlFPJh6e3tLiZeITekHsaZe9MaOxZFkN3FdJXcOH8RpA8/HWHv33Xfr
tMKzLltqaXCHCS9dk/stpqi2z0Gj2wKbCoppgXDMlbExG5uoyhKFkfnXBX3E
Vt4JEH1RVt24BW5RyYwGXarWHBqRM1zsJvzB6/BbYwkOmpYBsgSPHTG7ayPm
6bFDoVUe3ony4x9zFSPTPCUU8eyHXQdnYWMFZQexNJaDPojl7uhqPN4BJXkL
tFkb2fSE8RN0d7DwRLINOgcJPIe/x2HPdrnkNaSmgKZTjLb9boFK3AKPEXmB
q6SxtNvo0g4vgNAmKh8pVTczM6Mpfgj2UXCkRu2w1UTvxBbwiV0oLuqLsn70
qYEWCVYE9DnBkQeKG7jR4F/0lcHfoV29vVOQ8/miqB9L6wPrLzDuo0R+sAl9
CxjaxGWVh+bPMfOmLUoIZ3LUglReuJL3DD7Bq7xxR3Fe/9lUxYGoARf0FzrU
v0pktHz5ctXRu0RB5a2pB6+8cCB/+FYTRBVbuR+86nHpF1i/X+5W0tp/gX2Y
0IoXUwwJnTgSRFCa8dGhxFKiF9I/ZfiVVv2jBxleLpsRSxVbIid25bh0ldrv
fvscae1XqR+K0Qmqcqc7o4yZMCNA39oRM7KxBdVmFCHVkmsMu5Lifk0olJdh
NDtBS8el2deynGo3k3ZZ9rVhQhvazXD7Tx7aZ7YOIvjObn8UG7Wp1Rj+JBX9
8KijtrMq463czHOG6BO3bhxn7s5ynq0k7bJM3jjx1JSNpg+4le2CDd4yUt/y
4QanFu7vMFyJavglDNu5/ZOp8Vcxh8OJUTqOcwv5vGM4lz7X0DAhB10+aDgy
k0fM+LjNhIDpOagb6LsMK1n1+TivDzoLi4dmuamr0s2a5ROL+7rS/H/Dwgn8
fip9uV2UVUERfC4taYG8PxSeU98X0qd00FeJ4cnyK2VWysuRGmyY0Jf1nf+B
kA8l4KU5kDm4XOI5NTk+agLg6dHGp3VfDVTYwK7H+mKyCuVVlFXsISIY/937
h0LB5IKrVY+JRX0Q5+jo/h2BXZXO0aG9u8zI6F640bPOiutJf01MIvYQEY5f
Zf5zoXBywU+PF14ebfHc7OFXhBqErifvNith2MNENnqj3F+qZFMKEP14RfLQ
WBO0UWdNLLVRX0/erSKDmCbwql3RluYR18bm7Cwg67R4GmgDFkxYGTQej86x
LeJWWdgijZdDg28Z+7uitGM2qqlXO4NWx+jVbjBNaYBdOdchrBGwV8DQabUI
4e+4ltx6+AbzVbUf/Q5zbHLCTBwDT+VoYv5kX9LqUoKtkpzP3eH5fPnll4eS
gahV2dF6QHWM3x+VaNJQ2WGOjm0NJLl1eCi8U6I1wHd/rCKRFi2UknIZWbRo
UXCerFu3bgp/m/iFI9Z3R/liVD5UcUH5mGMTZk/NBerH5ONTairKQUWL5aTc
q0EesLBWr16NIopdjP/d0eu7brsL9Ddd86QJrM0c3DMcGKbHiGh86nB5SZui
KjWtd8TpgsA95CTBZDNUn9tH3s3SDzdHRUINJV0hmcfMwfFxOKtCM7DPeJIv
31HU2ILscxYFaAfbBhLPIPvUKvAaeTfLyuDY3+aal2WYW+npD3b9kiVL2DRB
SLrPtnVPlPSy7MM3kdnkTGYwO5AiqoeZsVdiKwGI5uDxzgf3Lc/61vo0kEXO
pLVixYowG1kPs9fGXDsf+tz5Eh73H1u5XXHIRprpCa4ZkDwv9JZ6oMUvk/60
yXXcTI04BqpwRCNaUQLSPbq/Fp7O6K3CD/uOB+82mgw58IF+OTZ2wwieP8ON
XSctTwT/5NVw15C39TorbhgJ6PTYoTFTG9llDk6iRjHFzJkz22y69SY1ePMl
Mm6JCWXcItwe/JNPLVxH3tWq7wjXkuEcp5hly5YFtGiRg13ufUlF7B+7xU/V
GGjTyJqsz6PixPwnjgyJhnSnoi1iiaRouyuuuCLYFXTv+pBrHW6aAcG4cOHC
CIIRTljQU/Bjh1YBaAcIRhvjw+usMKXwBal/s8PncLbXd2yrk7Y28YeTdrCf
bicrzA/naqwwLTyqzZ0qBw4cMGefHeQeDMZLOZPgT9AEmtZfeVpyovWGb8NW
QZ3wj154y6RkmshYiRHZaHFK8C0CVPW2Xa+HwUQ+bBAmxN2+fXu4NGKfOVxV
9SZ/7x6zH8UpQev+/n5z8oxTzE/2/ECcEoFjXo3K6Q4/i3CKMRAZTl1F9h94
4IFAR4APNaOLwZ/qTf7OPWavQN1h646OdnMdst6I8ueC/DcynOvwKT30gpSF
E0EoCbknBcPCzAN/8asoPKv/zZmPuCtrZ9Cuvd2agki8OheuTud4retSDMjo
oJfZ4L+fHnrfrfGe1Nht+IF9D0utPi9UkYJH9T+1/I17llQl2qkqAbHXHFJl
E8OUBpmAmgVicjLhA8nUuHBKwe6M61rwrP63kLs0nWzx4sVm8fw5LHCDztcd
nn6iul0y3hdjtDnFCr5DOxnRxdu5K1WaThihU6Y+dyZiZ0Fu9S8Aah7wMYBH
8NtfM0sWFS049l35lVDLYDTuYIh1qbuJM3B0UWUveB9uSsB+XEOCZ3BLGnXP
0jQpVPSQTsYwEoyz3m2CQkYq1EngCufTc7KCEevvh4xxDvXg2BloMSP7JkI9
KKk3NfprXNJZY1lAzgbHaSFDJkIR4LyARyZDK+FC4eAdPGv+yj3jvNUggFpM
AEktpy28yFlrc6pBNSDHFrGu2B6O1xS4yMPCaQiIvyFDG2hLBcI5gKlA0MEA
N1lkvjXT4K5xaWkiIM6oqF9NBd7VirY2F22zfFoY4gzKH6wm31qANtAWfvs9
BVcID+H8y8l10xVcPWBVc/5T5/Mq4iovEgpGS0hr7QNFUikWqch9UwF+r1ZM
s8b9jtMPR8vSpUtVx9CWArJANBnn404uxY5AC4ZxKe126ReE3uhCZmkRbb2h
rxg4ZWmht69X8fl5NxX08y1RxOln+/5C9J7heuSc6WChPXIEDIzHwtsP50z/
sl0gOgydNNiflgn3m8l1oLLzVa1/W0jxBteOXkqVYT9wH9Wl08f66JwL3xwd
C55t3DEaJAeEeeRc+A/aedThVaV5Q2iRc793RwfiHFC1vlZI8XrXjmpE0nAe
1JZ0hSUQZ87iDMBjvHc0zG1SI5NIcQZuEqXYbWlOoGmkXZZfsV047iJhu88I
6UO112nY5CRNDcGh2re0zAnOEAdzMEf2gs/PbB2bYGEObmakQQfSPFq0pnyW
s1oK/l8gbHe1kD6cGWqjkZitwG5zn5AWWj8+bho7enDcHJw4lhgDoRZ/EJ2W
slLH4Qb0wR+4ikjcuAuE7a4W0ofT0tfXFySciNMHz+p/cyeYPHzIx+9XrLjT
swMm8iTOYYyHJ5HXowa9Tjq5tHsu9ohLGcm1+3SsHRDEgTBudycOtoM6TqFh
2DIGj1y39wpHx9Xt2+Ex0SajixIllpAHanLG15OGyPbwOMvIo3de6ujRdp9y
7XzgEGv17gj7g2JScBo3PkAd1K6JY4SluXx0oHB9HzYbi1VqfsDe3t4Q7TA4
tLa+PYJ0OyxopIeMGzW7tgef/xkzZiA9RUKl5mexl6O/QdKfNv2hxWt0U1oC
78vq1auD2Y640rrjFuOgKSGFqwFaJLngXCd82X12OLp6mpSKsCFtcGwMmT1v
ETDl0XGLE6m3G6rtN3C/HB1i0TdTYlTr0ETt1CoOpFUcVTY/Rm0TAtkGY0OC
CEtI93gbwwmGB8NRN3VqnxlYsiSuDi8ZWIxeg1aGWK7icbgGbTbEBrXlpEP8
uKNOpsM/FN0rTUieCNKK1sHpMVt2Hwy6HNuxxQxtGTXgezZv7Qp4Gqj/vn98
rxkeZHMk9hDK9VAxC5+Ipm+pNLxvXpagqxv2SjJs2Vkq1zAsYW6E77xwILik
Qj8rVlyWZlMEozw0gab/+mdf4zjYlDpKdbkcP+7IzGcZfTi6tarOBAmBXVhH
BXM2YS7B+l4KcxhtfBr22oSpDfLpxnoIvZKsiHPnzo2lx6ou6nJeqixnsGP+
b/3+sed7w7Fslb9jvv7dH5oXf/SEA9k8Rsflhr2SDFs0seaaDBZISsegKDJA
ZKaePD3od1b9vAaHAaAK4d9Zs+dYh0pvb9Bu8+ZvIjiTY+Fjbh7LdkB2p7JT
XYbKM4P/5/OTPRLdlGVntwRlBz9ujU1osYKT+2rhJhysATbb5p7jwJU9hD4J
1hTEE43mKSdCdl6qnGZE+rer9XIz3U3FzNhqhd/hea9brV8aeQ7H5Ya9kgxb
RmLQNalscEknp5ondr9ZX+Gvmq+sTWa5tWUAHw1FmgXnnUFWqtY7WsQr26ni
N1+SzbMVp8TXfJ/C0hNy8l9DC1zdXxsKV86Q24i0Lk/a11CSqJL7GlYUo5z+
MbRDHj78hlnuUDJwwXK3lpb0y9ctZnT4y7oPYL6UpukfwepSa6LHVOYsLuaY
bj8O/D0V3WPNSB1KVbn41+7o2EjmJvPpcBLPfFJ3qy6gPF1xazff+tt/NjNP
+ahZvGhRhn2A6zVdL8uXcJXTxZqRlBT9Yj53vQ4E0HacuIltpSpTrDasIG7r
2HwK4YSvHR03WDeOCzngzIUi/EPCUlhF/gBrHuymEgz6BJMxfJ3vvNNrVSbd
cZa/vKlo08195VarBCng5vBhIHTIitYmcvB0dENUnHoWXDUYA1gbmwjW/2gA
KdhiwIgLKVkHyAHoc934cSQJt05FySLmu51JvSzEx0YDcdDFRl7n/Dt50/Gu
IX01I4UthchkQUsWknZRbEgyeqJZtLvVX3n63YTHOAxAHhg245O0e8DYDHAx
TJxDOROak/Az49lQdjKQ89xw8DuEFMBqjLnr4RH8qd4EQQAFkw9jGBc3Z+Xl
7cXF7UPnpKN9ktFLlSUZ/ofoai4lyXACRtLttCqwhg6P1EytttWsHWBD0zh0
STpkKRVxUkbCFsxPD93CQQMhQfU7CS5RDI6DP9WbcDgVRS7l27MmoHA+YlyS
PmQSZtGVFPqshlK3Hk90SFi84CsX1QjsXCWkb51w3L7YuNATh4aaH2vXwDcl
I019Yz4TnZITFTxJM0BjiBFGccLviAX9tJC+9cJxcUp8aKp0dFZnJKqZjMcN
52bjRAcZ02roWQmnrxLSt0E4bh8ZV1LwlN6C55F38+GUkhH4PnptwdcPIPA/
Kwm2NmYXlMqrhTzdpaLy5BiVqB4p4EG4eqi94NxYt1IgT+3HYCl5H9waRgnk
aVXxbbO/fADjgrLydksjoWmA1NVCnr6gonIaobKMkqTUaMuZliXQlm313//z
nQNm13Y9tKVVxb2tQ1xlVOLUuANG5FfsIwQ1O3QxK2M5F7BOMxpfkyWKhC/q
bgmd09LoDJaBQJhdhJ88NUqpfy/dNVkdKqSt0GzaMsclhH73ap39GF+vxAfQ
gO9mBotn5XPnlj3N5/5ZMq4WDmFDDE7LQ3OwA/Lw2kF4zVvnlMJQ0tE05cEy
OgrMrU3KlyNhxlRJ2/hp15Jy3PWphy+egt53YF+nGOdLQdtpIpHAT74Dq41w
k7eyqfzIrgay0KWQ6gt2bV7iyPTd7jDYv0io/WvuKy27I7WSEfPWEvXdCpvh
/P65FfTFrrlPO0M1vUgsPAqa1XQ645pOwE79te7wcpLu+uVc5pwqV5Xj1CaU
dVg+eWB1kZj0V8lYUTtER8SD5uwloadVUvDSZzup0gvnRHmhG1ZqzKPGwazg
cWowfIWMETUEdkT8NM4A2II3g8z6kX7bYPmOqZejMpPapKmN2xfZ3eLs3rjs
krbl9ogjod4Wv/tclcYWv1W7PNeDE88FsUGADM7EvtYdUzL3UDyXfMMg3xEx
yLtJqf8tOSHp3pmowX4syojPMH2Ho1jmikVGkmbsjtCMnd/zGbV1O0aWkbNF
m/H9drcl8mEsaK75rJjcxnXchiE/WdvWgn5SahF2J34oFBnWIWoxfiUqlDJz
vWPYLwfQEob9ks9dPBt9nmjQnS8eAGAd3lZ+eeh1tACEXw4yYtBZubiqV6PS
LjkVPM0GHYeRrrv3j80pM2eaJUsGktbVJebkdBjpS6m9TpdHFW57zgZKvnfA
7KxtNzv3HAggLaCQoq+DjBn8lAv3fC0qec4QpU0JTxOTc6UBDx9+03wyxMhf
JsDIrzHPPs5i5F/yDOWNh3vyRfPer/6n/qVv3PNtGLANgODGRCtuMzDtr0dn
J2kT0aeQv5301cToot8N/i9TO29LJVEWYGVDWCy8nqPFelebHyH0b/69VhsL
Ike5nPfKvTaDDYF5c/L/zM9+9EQsOPMa89Vv1w+ln/2jeeZ735CEwdxZQAq3
ZOxZUdTO9ufM4fffN++Nvxisgtqun1oPjdV1OHI7FYtPE4j5hu+zxW3P7ET+
6d+q6sIsNhQ6o1bnpDhSnuNXUYrN+++ZPU8+FiodcYqD1udEpZ/MTdFltv4E
bBIHA0MIvZrtr0ufM1OsifVVVY0/mhrb/42+OSdVIY4RcxccHguA0k/tCiCG
HGGBGM6NCpYqBKFzamPgvDFv7R4O3iWlC1jDBa3MkECxl4v3Xu9kK7t5ripI
2HNBlo5D5qkn63pKXQP+i50767O+jSOMypbTGjESace+CUN/Du7ZyuJsMVd/
M6oK0qT7WWrTqpw0WUNqjKZ39oTHFkcTJ09qTkC3/9CWraZWq5nhjYMsKHRt
7N2yShGizHz690rh+GhseWzbdrvUAmOLpaG2/TGOhIBBazQUG6TWu3Y++4e0
3Sphu4DW+VFafSaODUIRx41saYnopPUOKa1SO/PnSbusLYRy9eV1WynsL6DV
mj7FDgZ7W5eeoUhxWZnHVqlGD/izKHKxp2qjG0H2/Y27W5qAQ7tZRWAwsLVb
tix3b8rUU2t7z3v1ow6/ZoGobi5EcdC1NYy2rAj+yacG3kfe1SpAdzmpNROo
g7UgtBXMtby1Ksb5paKtTfOvYmOLou0X3JRUCRKhy00LHtIUq28tsKyPFpj6
M+wUBTvseAAblpODQY9LxFSjsmNzotAhNJeRVLMRB5eQD4wfXYxBN77v6nuq
z9bpjByaARBA3mWAfYyW8d2ZjpBe/beW0xjem+XVv5jMZlYUynTSLutm+y5p
l3UTPZXwjE7man3xyKkv+olGSWXpG/9N2mXpB3MYTqtxpyOHvpA75NCn/R1y
7XzaGuXwPOE7FxNJcEUKMWH91JjEgEoOG/AOI1lOq5vN0OqbQaSVq1ZIax4g
lMXn/v8vZr1zWt0sQismb/ftK6TVFwVGU0loPfxvM2eUzkcfPYMon1ZzkZ6c
qOOVFRIVzzjTMB2lu/hJPmnWxX8w1mclTvnoR40KdIETqOwzvNyNUFYwEM0s
pfHie5IOv026rc7fHr0lzSRCtciRvHe+Sx31eSJXaD68os75t0lfzfKYOyna
8lIyJeYziraaMnVnKtpqPIH285pPcdIod7rKi9FIEEzJQ8cZHByEczUEpGrR
BJqqkYsVbc8nfFYBAXBL8loybVpd2Qo/d2lPpQngdEKp1npwUQEuT1ZM2rQC
NOrqOEbPR1TtOf7a29sRs67FVmwpILb+AufBABFFkwASbjvYU1dqBLmCfBCV
5Y1h9mR2mdmSQVLfXqpi6NxCY53hpq1I9EsbT29v6umcDSa5X8X+PMJ+/tDc
ZsJA3LK9xjX3Wacud+LIsHkNDAygzWsKeUxMYTP9nZDW5wtJO1vVaxm1MNsY
yvrcOtPCZu4TcnkO4VKepKAJsBenPEmzY6xwfMgMiFP4xx9TdTIgJO1MVa9l
1ONsTaVMDxO6T8jlWYRLeRKVJmB83EKS5tuh/uosS2wP82yG8N1FQlrmCvvT
VQjtpNay4MfRYUmQo53oGZPFxsdJuyyjGS6KZiCV3KqQ5sSSWq17mGfThO8u
ENIiLc2oK1DaFckoGIiYocMH3Nos5GEuaSfJbVYBEGt2dAX4rPCIKfJZ9XuY
Z9OE7y4Q0nKasD9pfVQumeDZblyIfsPZvVdIH668surLOs8Glu/0OSGWkXZZ
Tg2uMm+f8N14Fdc0WmYL+0vf1B10UwedQvv5zFj3CGmaw2wqzknTT2gSuNak
1VURGOrz4/Qwz6YK3z1PSMscYX/Siq2tzLjnMONuFtJ3qmvn81H1E/oE/t4i
JVKXknezXFs9zLNe4bvzC9A3SziGrphqq5Ci0xiKNjHvSp18s8m7ZTj5FhCu
xZCIimqN/lasW12N1y6qOwdt9tWgEFGgF4eln6h+3cuMhxeiyfFRa3082rhD
0v44N2W86mtJYpnJkJkmFjO532apqO1jSdRVQW0ryNCljUOMMnQ3021Rd+6s
WJ9NcOcuJLIUI6lw61RRcXQp6Vtf87XTzJ4TmjnNob27zMjoXvAE4zqiVtCT
mKFCXWL/joAVunVId6xDmmLsyhbLLIbWNLGYY0fM7tqIeXrsEEtnsdKn7SVx
eQrD5Sam7xJc+rNJt81y6Rdz48+NbrQyipMuJX1Jar9edHESGUC9YScx/XG7
h/OkzSuRr1lKvigdRaqNdubkAS9Eba0fCT8cUxi+NjH950VjzCZ9NQuNsZjI
NifGG5d/WaVCl5L+JJVXBz/VQDXgFqBIh5OY/rK2AH13Xsm8zVLyRmnRlPvs
LoHu1vpF/ML5H8WDPcHLJmaMvHkoZpO+qkB4LFHI7qzosi6r4iY92SV1TDUn
exwjkf9kz8fbLCVvlBYuAYaWls6ubvPIXVdFlqr0lNYCQbJO6YoAGbdFV2RZ
pSq5S7yk6Ce5vIcr03djRz/isckJM2ErLCZWqOyWno9X7mYu4ZXSxGX20NLU
UX/v8Q2XRlaq7G6tB3ykX6irA2HElmoZhSI5W42owGbUHtHDPOPMMrhSj45t
DRjZOjxk0DzDQSc4U0xeVjn7Sw5WLyhI0lMPXxe+18OQyVlV8iZZ4awpFeE6
1kTXZhlFHDmLtL/YpbUGT5uhs1aHUIxjE2ZPbW3jY0UWps+SnZdPzrIt5RPp
uaAwPb3myRuiq9Jn686boYazfVcEEnGrknNh5Si3yHm4MqtPwmVsubnpTp3j
Cw11B/cMG7SN9zLvcs6wHFxxvjIPV5SKC4tRcdu1yyKLzudN06bu4TxtVYFP
YqstZ+VEzs2dXjGykab452/IXd8higiQZ+PjcGsMjxWfO1zBCucl97GCQ18k
H/pUZmjOaS5NU8Q50ktCp9jsXB9qdMolTH9nMf3dJxxXijpZGxXthxH6dQnT
35lMf18UjiuFaznRfpixlpcy/Z3B9He/cFwpONKmlvv1w0NfxvR6OtPrA8LR
dThlm6Xs1y+c4ZNMr6cyvf6+cHRdmMF6K/XfxD4VGOtK2VjwX3t7ewoJD6oI
LhatZFO6/Sb+08vlJwqMexWRUPXF+YYLcFkkXNPmwv5QR7cvUrT9bEW8PaJo
q4k0t6kubYqH4Gf/B+1By0f+H2rLYQs=\
\>"]]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.7019792953449783`*^9, 3.702528980468354*^9}]
}, Open  ]],

Cell["Which should look something like:", "Text",
 CellChangeTimes->{{3.697064293420527*^9, 3.697064299340609*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.609], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.609], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0., 0., 0.], 
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{0., 0}, {0.1, 62}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{21.388660928742993`, 
               39.97348333212024}, {-30.758020922796312`, 
               49.57878718771335}}]},
            StatusArea[#, 62]& ,
            TagBoxNote->"62"],
           StyleBox["62", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[62, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[0.5, 0.5, 0.5], 
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5, 0}, {0.6000000000000001, 92}, 
                "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{111.1877729456292, 
               129.77259534900645`}, {-69.32825065368809, 
               49.578787187713345`}}]},
            StatusArea[#, 92]& ,
            TagBoxNote->"92"],
           StyleBox["92", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[92, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            {RGBColor[1., 1., 1.], 
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{1., 0}, {1.1, 46}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{200.98688496251543`, 
               219.57170736589268`}, {-10.187231732987364`, 
               49.57878718771335}}]},
            StatusArea[#, 46]& ,
            TagBoxNote->"46"],
           StyleBox["46", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[46, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.022000000000000002`, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{0., 1.1}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{13, 9}], 
        {GrayLevel[1], InsetBox["0.`", {13, 9}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{27, 33}], 
        {GrayLevel[1], InsetBox["0.`", {27, 33}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{38, 12}], 
        {GrayLevel[1], InsetBox["0.`", {38, 12}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{21, 16}], 
        {GrayLevel[1], InsetBox["0.`", {21, 16}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{5, 31}], 
        {GrayLevel[1], InsetBox["0.`", {5, 31}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{31, 4}], 
        {GrayLevel[1], InsetBox["0.`", {31, 4}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{20, 28}], 
        {GrayLevel[1], InsetBox["0.`", {20, 28}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{24, 23}], 
        {GrayLevel[1], InsetBox["0.`", {24, 23}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{33, 40}], 
        {GrayLevel[1], InsetBox["0.`", {33, 40}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{7, 8}], 
        {GrayLevel[1], InsetBox["0.`", {7, 8}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{30, 50}], 
        {GrayLevel[1], InsetBox["0.`", {30, 50}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{32, 19}], 
        {GrayLevel[1], InsetBox["0.`", {32, 19}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{34, 37}], 
        {GrayLevel[1], InsetBox["0.5`", {34, 37}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{37, 18}], 
        {GrayLevel[1], InsetBox["0.5`", {37, 18}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{18, 26}], 
        {GrayLevel[0], InsetBox["1.`", {18, 26}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{28, 41}], 
        {GrayLevel[0], InsetBox["1.`", {28, 41}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{33, 28}], 
        {GrayLevel[0], InsetBox["1.`", {33, 28}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{23, 50}], 
        {GrayLevel[0], InsetBox["1.`", {23, 50}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{42, 18}], 
        {GrayLevel[1], InsetBox["0.5`", {42, 18}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{36, 4}], 
        {GrayLevel[1], InsetBox["0.5`", {36, 4}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{11, 50}], 
        {GrayLevel[0], InsetBox["1.`", {11, 50}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{5, 45}], 
        {GrayLevel[0], InsetBox["1.`", {5, 45}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{7, 39}], 
        {GrayLevel[1], InsetBox["0.5`", {7, 39}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{15, 23}], 
        {GrayLevel[1], InsetBox["0.5`", {15, 23}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{7, 45}], 
        {GrayLevel[1], InsetBox["0.5`", {7, 45}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{28, 2}], 
        {GrayLevel[1], InsetBox["0.5`", {28, 2}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{43, 43}], 
        {GrayLevel[1], InsetBox["0.`", {43, 43}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{16, 8}], 
        {GrayLevel[1], InsetBox["0.`", {16, 8}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{49, 10}], 
        {GrayLevel[0], InsetBox["1.`", {49, 10}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{4, 17}], 
        {GrayLevel[0], InsetBox["1.`", {4, 17}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{9, 40}], 
        {GrayLevel[1], InsetBox["0.5`", {9, 40}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{3, 18}], 
        {GrayLevel[1], InsetBox["0.5`", {3, 18}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{4, 35}], 
        {GrayLevel[1], InsetBox["0.`", {4, 35}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{2, 45}], 
        {GrayLevel[1], InsetBox["0.`", {2, 45}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{9, 42}], 
        {GrayLevel[0], InsetBox["1.`", {9, 42}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{14, 50}], 
        {GrayLevel[0], InsetBox["1.`", {14, 50}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{27, 29}], 
        {GrayLevel[1], InsetBox["0.5`", {27, 29}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{0, 45}], 
        {GrayLevel[1], InsetBox["0.5`", {0, 45}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{14, 24}], 
        {GrayLevel[0], InsetBox["1.`", {14, 24}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{28, 44}], 
        {GrayLevel[0], InsetBox["1.`", {28, 44}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{7, 8}], 
        {GrayLevel[1], InsetBox["0.5`", {7, 8}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{29, 18}], 
        {GrayLevel[1], InsetBox["0.5`", {29, 18}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{29, 37}], 
        {GrayLevel[1], InsetBox["0.5`", {29, 37}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{17, 12}], 
        {GrayLevel[1], InsetBox["0.5`", {17, 12}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{29, 50}], 
        {GrayLevel[1], InsetBox["0.`", {29, 50}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{7, 0}], 
        {GrayLevel[1], InsetBox["0.`", {7, 0}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{38, 19}], 
        {GrayLevel[1], InsetBox["0.5`", {38, 19}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{3, 12}], 
        {GrayLevel[1], InsetBox["0.5`", {3, 12}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{41, 26}], 
        {GrayLevel[1], InsetBox["0.`", {41, 26}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{2, 11}], 
        {GrayLevel[1], InsetBox["0.`", {2, 11}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{40, 50}], 
        {GrayLevel[1], InsetBox["0.`", {40, 50}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{3, 21}], 
        {GrayLevel[1], InsetBox["0.`", {3, 21}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{15, 5}], 
        {GrayLevel[1], InsetBox["0.5`", {15, 5}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{0, 41}], 
        {GrayLevel[1], InsetBox["0.5`", {0, 41}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{40, 4}], 
        {GrayLevel[1], InsetBox["0.`", {40, 4}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{19, 45}], 
        {GrayLevel[1], InsetBox["0.`", {19, 45}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{4, 31}], 
        {GrayLevel[1], InsetBox["0.5`", {4, 31}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{0, 26}], 
        {GrayLevel[1], InsetBox["0.5`", {0, 26}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{19, 22}], 
        {GrayLevel[1], InsetBox["0.5`", {19, 22}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{31, 30}], 
        {GrayLevel[1], InsetBox["0.5`", {31, 30}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{5, 24}], 
        {GrayLevel[1], InsetBox["0.5`", {5, 24}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{2, 22}], 
        {GrayLevel[1], InsetBox["0.5`", {2, 22}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{8, 14}], 
        {GrayLevel[0], InsetBox["1.`", {8, 14}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{20, 31}], 
        {GrayLevel[0], InsetBox["1.`", {20, 31}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{29, 28}], 
        {GrayLevel[1], InsetBox["0.5`", {29, 28}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{44, 50}], 
        {GrayLevel[1], InsetBox["0.5`", {44, 50}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{10, 50}], 
        {GrayLevel[0], InsetBox["1.`", {10, 50}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{21, 36}], 
        {GrayLevel[0], InsetBox["1.`", {21, 36}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{32, 20}], 
        {GrayLevel[0], InsetBox["1.`", {32, 20}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{27, 49}], 
        {GrayLevel[0], InsetBox["1.`", {27, 49}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{1, 17}], 
        {GrayLevel[1], InsetBox["0.5`", {1, 17}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{3, 20}], 
        {GrayLevel[1], InsetBox["0.5`", {3, 20}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{5, 37}], 
        {GrayLevel[1], InsetBox["0.5`", {5, 37}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{26, 43}], 
        {GrayLevel[1], InsetBox["0.5`", {26, 43}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{47, 1}], 
        {GrayLevel[1], InsetBox["0.5`", {47, 1}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{0, 4}], 
        {GrayLevel[1], InsetBox["0.5`", {0, 4}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{50, 27}], 
        {GrayLevel[1], InsetBox["0.`", {50, 27}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{8, 22}], 
        {GrayLevel[1], InsetBox["0.`", {8, 22}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{19, 4}], 
        {GrayLevel[1], InsetBox["0.5`", {19, 4}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{25, 31}], 
        {GrayLevel[1], InsetBox["0.5`", {25, 31}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{29, 36}], 
        {GrayLevel[1], InsetBox["0.`", {29, 36}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{38, 17}], 
        {GrayLevel[1], InsetBox["0.`", {38, 17}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{8, 33}], 
        {GrayLevel[0], InsetBox["1.`", {8, 33}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{13, 23}], 
        {GrayLevel[0], InsetBox["1.`", {13, 23}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{13, 16}], 
        {GrayLevel[1], InsetBox["0.`", {13, 16}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{22, 3}], 
        {GrayLevel[1], InsetBox["0.`", {22, 3}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{12, 30}], 
        {GrayLevel[1], InsetBox["0.`", {12, 30}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{41, 41}], 
        {GrayLevel[1], InsetBox["0.`", {41, 41}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{20, 5}], 
        {GrayLevel[1], InsetBox["0.5`", {20, 5}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{50, 5}], 
        {GrayLevel[1], InsetBox["0.5`", {50, 5}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{44, 36}], 
        {GrayLevel[1], InsetBox["0.`", {44, 36}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{15, 35}], 
        {GrayLevel[1], InsetBox["0.`", {15, 35}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{5, 30}], 
        {GrayLevel[1], InsetBox["0.5`", {5, 30}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{11, 40}], 
        {GrayLevel[1], InsetBox["0.5`", {11, 40}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{34, 32}], 
        {GrayLevel[0], InsetBox["1.`", {34, 32}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{33, 8}], 
        {GrayLevel[0], InsetBox["1.`", {33, 8}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{10, 26}], 
        {GrayLevel[1], InsetBox["0.5`", {10, 26}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{12, 45}], 
        {GrayLevel[1], InsetBox["0.5`", {12, 45}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{21, 36}], 
        {GrayLevel[1], InsetBox["0.`", {21, 36}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{23, 9}], 
        {GrayLevel[1], InsetBox["0.`", {23, 9}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{3, 47}], 
        {GrayLevel[1], InsetBox["0.`", {3, 47}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{44, 23}], 
        {GrayLevel[1], InsetBox["0.`", {44, 23}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{32, 27}], 
        {GrayLevel[1], InsetBox["0.5`", {32, 27}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{27, 15}], 
        {GrayLevel[1], InsetBox["0.5`", {27, 15}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{38, 22}], 
        {GrayLevel[1], InsetBox["0.`", {38, 22}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{14, 39}], 
        {GrayLevel[1], InsetBox["0.`", {14, 39}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{38, 35}], 
        {GrayLevel[1], InsetBox["0.`", {38, 35}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{25, 9}], 
        {GrayLevel[1], InsetBox["0.`", {25, 9}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{43, 13}], 
        {GrayLevel[1], InsetBox["0.5`", {43, 13}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{37, 19}], 
        {GrayLevel[1], InsetBox["0.5`", {37, 19}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{13, 40}], 
        {GrayLevel[1], InsetBox["0.`", {13, 40}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{30, 49}], 
        {GrayLevel[1], InsetBox["0.`", {30, 49}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{48, 8}], 
        {GrayLevel[1], InsetBox["0.`", {48, 8}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{4, 50}], 
        {GrayLevel[1], InsetBox["0.`", {4, 50}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{12, 17}], 
        {GrayLevel[1], InsetBox["0.5`", {12, 17}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{21, 48}], 
        {GrayLevel[1], InsetBox["0.5`", {21, 48}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{5, 17}], 
        {GrayLevel[1], InsetBox["0.`", {5, 17}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{40, 4}], 
        {GrayLevel[1], InsetBox["0.`", {40, 4}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{37, 6}], 
        {GrayLevel[1], InsetBox["0.`", {37, 6}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{31, 46}], 
        {GrayLevel[1], InsetBox["0.`", {31, 46}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{29, 47}], 
        {GrayLevel[1], InsetBox["0.5`", {29, 47}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{31, 36}], 
        {GrayLevel[1], InsetBox["0.5`", {31, 36}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{12, 8}], 
        {GrayLevel[1], InsetBox["0.`", {12, 8}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{9, 29}], 
        {GrayLevel[1], InsetBox["0.`", {9, 29}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{28, 45}], 
        {GrayLevel[1], InsetBox["0.5`", {28, 45}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{48, 3}], 
        {GrayLevel[1], InsetBox["0.5`", {48, 3}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{24, 25}], 
        {GrayLevel[1], InsetBox["0.`", {24, 25}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{19, 50}], 
        {GrayLevel[1], InsetBox["0.`", {19, 50}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{23, 5}], 
        {GrayLevel[1], InsetBox["0.5`", {23, 5}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{33, 15}], 
        {GrayLevel[1], InsetBox["0.5`", {33, 15}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{22, 29}], 
        {GrayLevel[0], InsetBox["1.`", {22, 29}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{31, 16}], 
        {GrayLevel[0], InsetBox["1.`", {31, 16}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{6, 1}], 
        {GrayLevel[1], InsetBox["0.`", {6, 1}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{17, 10}], 
        {GrayLevel[1], InsetBox["0.`", {17, 10}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{17, 42}], 
        {GrayLevel[1], InsetBox["0.5`", {17, 42}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{17, 2}], 
        {GrayLevel[1], InsetBox["0.5`", {17, 2}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{31, 13}], 
        {GrayLevel[1], InsetBox["0.5`", {31, 13}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{19, 12}], 
        {GrayLevel[1], InsetBox["0.5`", {19, 12}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{23, 29}], 
        {GrayLevel[1], InsetBox["0.5`", {23, 29}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{10, 4}], 
        {GrayLevel[1], InsetBox["0.5`", {10, 4}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{4, 41}], 
        {GrayLevel[1], InsetBox["0.`", {4, 41}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{42, 29}], 
        {GrayLevel[1], InsetBox["0.`", {42, 29}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{37, 25}], 
        {GrayLevel[0], InsetBox["1.`", {37, 25}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{36, 16}], 
        {GrayLevel[0], InsetBox["1.`", {36, 16}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{30, 27}], 
        {GrayLevel[1], InsetBox["0.`", {30, 27}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{46, 22}], 
        {GrayLevel[1], InsetBox["0.`", {46, 22}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{38, 45}], 
        {GrayLevel[1], InsetBox["0.5`", {38, 45}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{45, 0}], 
        {GrayLevel[1], InsetBox["0.5`", {45, 0}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{47, 15}], 
        {GrayLevel[0], InsetBox["1.`", {47, 15}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{5, 23}], 
        {GrayLevel[0], InsetBox["1.`", {5, 23}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{10, 33}], 
        {GrayLevel[0], InsetBox["1.`", {10, 33}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{46, 13}], 
        {GrayLevel[0], InsetBox["1.`", {46, 13}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{40, 13}], 
        {GrayLevel[1], InsetBox["0.5`", {40, 13}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{0, 29}], 
        {GrayLevel[1], InsetBox["0.5`", {0, 29}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{42, 44}], 
        {GrayLevel[0], InsetBox["1.`", {42, 44}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{9, 27}], 
        {GrayLevel[0], InsetBox["1.`", {9, 27}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{38, 9}], 
        {GrayLevel[1], InsetBox["0.5`", {38, 9}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{46, 34}], 
        {GrayLevel[1], InsetBox["0.5`", {46, 34}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{18, 35}], 
        {GrayLevel[1], InsetBox["0.5`", {18, 35}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{45, 1}], 
        {GrayLevel[1], InsetBox["0.5`", {45, 1}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{49, 16}], 
        {GrayLevel[1], InsetBox["0.5`", {49, 16}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{43, 41}], 
        {GrayLevel[1], InsetBox["0.5`", {43, 41}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{12, 47}], 
        {GrayLevel[1], InsetBox["0.5`", {12, 47}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{33, 18}], 
        {GrayLevel[1], InsetBox["0.5`", {33, 18}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{26, 13}], 
        {GrayLevel[0], InsetBox["1.`", {26, 13}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{16, 33}], 
        {GrayLevel[0], InsetBox["1.`", {16, 33}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{50, 6}], 
        {GrayLevel[1], InsetBox["0.5`", {50, 6}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{48, 22}], 
        {GrayLevel[1], InsetBox["0.5`", {48, 22}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{37, 34}], 
        {GrayLevel[1], InsetBox["0.5`", {37, 34}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{10, 39}], 
        {GrayLevel[1], InsetBox["0.5`", {10, 39}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{1, 22}], 
        {GrayLevel[1], InsetBox["0.5`", {1, 22}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{14, 38}], 
        {GrayLevel[1], InsetBox["0.5`", {14, 38}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{22, 23}], 
        {GrayLevel[0], InsetBox["1.`", {22, 23}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{12, 46}], 
        {GrayLevel[0], InsetBox["1.`", {12, 46}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{16, 12}], 
        {GrayLevel[0], InsetBox["1.`", {16, 12}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{28, 44}], 
        {GrayLevel[0], InsetBox["1.`", {28, 44}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{42, 19}], 
        {GrayLevel[1], InsetBox["0.5`", {42, 19}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{7, 32}], 
        {GrayLevel[1], InsetBox["0.5`", {7, 32}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{0, 32}], 
        {GrayLevel[0], InsetBox["1.`", {0, 32}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{27, 5}], 
        {GrayLevel[0], InsetBox["1.`", {27, 5}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{1, 17}], 
        {GrayLevel[1], InsetBox["0.5`", {1, 17}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{25, 36}], 
        {GrayLevel[1], InsetBox["0.5`", {25, 36}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{14, 3}], 
        {GrayLevel[0], InsetBox["1.`", {14, 3}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{26, 11}], 
        {GrayLevel[0], InsetBox["1.`", {26, 11}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{17, 2}], 
        {GrayLevel[0], InsetBox["1.`", {17, 2}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{13, 16}], 
        {GrayLevel[0], InsetBox["1.`", {13, 16}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{25, 43}], 
        {GrayLevel[0], InsetBox["1.`", {25, 43}]}}, 
       {RGBColor[1., 1., 1.], EdgeForm[GrayLevel[0]], DiskBox[{8, 35}], 
        {GrayLevel[0], InsetBox["1.`", {8, 35}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{23, 30}], 
        {GrayLevel[1], InsetBox["0.5`", {23, 30}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{23, 16}], 
        {GrayLevel[1], InsetBox["0.5`", {23, 16}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{22, 7}], 
        {GrayLevel[1], InsetBox["0.5`", {22, 7}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{49, 49}], 
        {GrayLevel[1], InsetBox["0.5`", {49, 49}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{46, 39}], 
        {GrayLevel[1], InsetBox["0.5`", {46, 39}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{32, 27}], 
        {GrayLevel[1], InsetBox["0.5`", {32, 27}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{36, 46}], 
        {GrayLevel[1], InsetBox["0.5`", {36, 46}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{27, 34}], 
        {GrayLevel[1], InsetBox["0.5`", {27, 34}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{11, 4}], 
        {GrayLevel[1], InsetBox["0.`", {11, 4}]}}, 
       {RGBColor[0., 0., 0.], EdgeForm[GrayLevel[0]], DiskBox[{20, 30}], 
        {GrayLevel[1], InsetBox["0.`", {20, 30}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{0, 20}], 
        {GrayLevel[1], InsetBox["0.5`", {0, 20}]}}, 
       {RGBColor[0.5, 0.5, 0.5], EdgeForm[GrayLevel[0]], DiskBox[{45, 6}], 
        {GrayLevel[1], InsetBox["0.5`", {45, 6}]}}},
      ImagePadding->20,
      ImageSize->Large,
      PlotRange->{{0, 50}, {0, 50}},
      ImageCache->GraphicsData["CompressedBitmap", "\<\
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
4+vprPNXiKuFEzfyOINN/vjnWpZbwJSjqnNENDmauWgVXBsq/ra1lSLOwvIQ
vnV0t5Z/YizhOINFbpN8LbK54OEw37LcuUy5Jl0O1NX6zs2qoblwL1wbTyqO
utkfI1+ziiJsaw8bYbgcIcS8xlCZxit/Xsa9nu9I3/r16/0h57jTalmfbaxo
PTXcPChQKVfBAMrU4iKBd0bEPepgTEdy8qqfV3nezY9s0s3wAeI6+5pjTzbn
+L8opns5hfPWUzidIx2q5fINSl1PETL5J5VnXlLw6RDT2bwd9OdWhMHBNudF
9jN5gPMv/94PxO3rlX66uqoqQj+9OIeWLUKrb1VLIY3jNrq95htyu15qn0D1
yyj+Cqm8wJOpFg5Hdjs/N3vl4RXUbYICb8GCBaV6cwraMC+yv61sf/+3R+PI
C12+lg2sGm688Tbxle98X+x98RsSvoKyEP39pz/9ibjtmhX+EGlpz/8/uO+G
hs4P/V1Oz8zU9Oho9Bwb9IJxCRuCponZBgJXdxVoL6TIco88Ylf2J5HdyMa9
XalR61kDCNhvWltbySTPJjTCvMg+tQb6BFjLypXXima9EQBtIA/AEMBPpBX2
R/AXeqx3WPZj/S1r8IYrfzY3N4uWlhb5s7FR+vvI383x7Gempkeee8N9HBv0
pMY0J5WMGy5fptP4J3IEVwryMuuxGi1DaWs98jef7kfvqqrnx4//nVjd1ibJ
g0NYi2taYJriy2uLFi2WZWDXbI2WYR0j28e3XqoW3qlq14udXVtj9k2cYpWO
IB6YZpX05MYgcNSAFrU12rwgMMnyYkC0ZFsjnv+jPxezZk6Xkz509Z07d66Y
OnUqAEsN5LFV1PrYis+dPw8r5sgNTZdKxA2X/GyPbDBz32qcGRTeQuvOHL3d
1d1+Cu2hbAZwpKpo9Awo9Io0hB4Hos5bVjolXKksSmh8Mjj4lQoNHpgAFfBv
pqHIUVOHpufwO5QN7sjZ91nNhjraXQkiQ/s33HADxbPhkffKV4iUB5U3VFNH
q6FU6PHmUutlqFem0P6NkU1l72mMjodUQ9Oo17l3cQueAKqbJZxO9jJwuDh0
VSlEaiQlixYtkvttKAIxPNq6das/qOVKyojPa/zP4ZVX5KngIOYT5TsweDm4
9uKSpArKqXphatdp8jdtb3B80DMYDltva6RaQzg529ra/PEp12pGfK62aHik
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
0+I7f/iH4m/+dIf45rZtoji0X8EGCqPhWFHnQOI5kSRaxi/tGxbHz54VJ8b3
yolnQd5vO5D3meCcqjQEny7Aw3+KpDo+omfp/O1XcBxFiM6eECP93f69P0zx
he9Cm/8QHKS8AXC3YC27Y6iKC5zpY2Qo7x4fldDsriEJ9HCEXVS5po4GWV4B
7NktctLLcYRZBKoclleRCbHLu8j3DwyIgcFBbz70cIRdVLmmNNc5nCZH0Hej
LmcCIl6OJCs+NKTS/4VoOjbib4wcTe+vYFshrueAwiKHTUDZcCQJwbiMiL92
9/SpKSXxV0VDsa+bI+Hi/KrWadttwXLbWIgvW5ZbblnuWJDMJLE3OQx22LK+
5ZblNJm2mkYuNiwHig5b1nepZTmdpNxNHc5FMk6DOb7s1HqbU2mdZdzNNISL
1p0zRLfbicArnErrFN4qXHv2se7zA7J2p6J4RaqvdX5slTUh/yBCix3KRt8X
88ON9qTgw6oU337XgS86qNDdDp+kCYCWxsg3GlPKBqD5zw48uNqh7HdT9FkH
QXss1bJM55KwOGbl5ARjyGPiu6mo1sEUEbq12/TdXJiiFST54QGy9AtOZOoY
pphP2k4EcPM8RH1uBW7nAQY4hfy1TUA8w7IcqvYrcDmWdX3Hki4dfpqaAsQJ
3bbmRdSSIe9rqSz9bUvCbgj213QXsrXGCduzZHhrDAynZcz6hxhyuDvZNMty
C/QSskuvHBgQyyTCtkl6bUO8n6sptkugHaDYMv9v1nlzp8bVl9jfPmkCdsmR
bzEkZZDK913IZjs1pskKuqWjDT0wHKZgyYilmgaxBxM+WY5aVst//11cP3LN
youDVuGktNGhEyvunY1ab9g3YLeDHW0q2dF0qHl/8KhThKTrm0xfKpRgF0ev
kiljo0O0VtajWI1Hrb/Llfvp1XKx3X0nGOoHFRjHdyEXLo5jdjlXg7dajBkY
jnhcMlZPY4/C53dVRjp1ZbdjUPp7YirGebjoMzu8I/gB0VinjIbAo2rhosUe
+eeLc0PRyjFgAPXuVHHG7C7hvx/J5sxTzsatzJxSpWKEzBDEUAX/8VqdP38+
ytvyb6a2Iqp6aJEDMJr1JIyyeikF3i65Mf7B7aVz9baHvyKee+YBsazAuzHK
PTahVc33Y1d9rtldo8/e/LKgVuvlEgGoyG/BPMZjEdkZsrQAaZDshza6tS0w
g9zoU6bM3A7dR5Z94SXh6sH4C77KCAu+70UOTkVytFYiHymIgdWaKSEYCacY
rOC8bE28unX5MrgKQ0lSQ1wVoMvbJmoaxIj33NZ18edMXZxRb38kx3PLwlqB
dKN4R6vS4xxCy5C4bdu2yZM2BwMXqNarXvOhDJir0zygJvbyBNEuQ7t+f1vY
P5FzT/w5Uw1nqf9dhuUVSLGab1rRegpkyD8UH0QhceXKldIuvPRdZuY0UC1U
jzwKw5E1ZA0GnWNqqXMMuiSyPok/j6wj6GDzQiSrc8igyiFyyTKJ1lP4TM0D
gnk26DrBVDrYTirjHK86v2oKp+JYUxcy9ICb4q3n5576LHggsi6Ix5hvOfez
FyJZl2FiVFtAuIop16jLtbW1yVAi4W/hmffOL8fVRz0Tl5JDBz0Tf86U4zwY
X7DsRwgHL4fN6+k4ywGj/EfcY+vWrWLq1KllcDs8894VqJYJp6z39wJmmH8e
GmYowUW/dUT6bRU5OBB0N2jS5cBjEHaO8LfwDByYUJWEm6t2qj6f2XSwl6YA
sy9Ykq31N276OuyrnXlRjVi//lOyExG1wqv169ej4VEUCtzS0iJvCxiTkqYc
pXGB8QSeIFS6pitNpPNzU/9Wa/LKodjpriZMpMX5pRanBlv88R/HobkFGzi3
xMHopKAkI6YWr4LS7y9C3daytnWdXETSRCrqdFYOKGiU39pmJza2+vaP/kZ8
SlMCgk6Aklk+JYuXKEpua79KfPXbL6WCehsbG6UOS4nB8G987k6Sk7KZv87+
kjDGJSsoqZkL19mfarS0fYZLHEYX9yBlkZDM5gavJdmZiv3/7V17jF7Vcd/s
28t6sZ3gB+DwtMn6saY2L2MIbAIk0MKCjQMYYzvQGGMIMW1ouhAIcROHpVbT
Lw/i9LW1WqsplIeVUvcP0kZWAsvDLbErrZBQZahcLAttJf+RVWqq02/uOXO/
uffOvWfmPj4bkpXA2rvnnjMz53HPzPxmpi+w6fzHL/7JXFq/KaNZE043MJ1B
DgAo0oimqylTeszqu+q0/MtoUXszsBVdTNn1HjENJ5yiaVaz5xXTcD4RZdEa
orcoxp3RpKXi4FlF0iX2k3e1Bsy5CjbRrpLPz9BH0XOByQDoB0se8AX3AAiq
g9/h+aOPfhsN6lp7+vTp0zHoU1FaszN4B9wLMbafJ9LVJjMdIBIrWu1zdYFZ
7iuwujQrxEFBi6U01FU5RMh9RdhCPJFhlp0PpBIDP3fMasssUty2Pkc1FWTR
go+rVFPYU2i52Au6Mr+htFLhwtQbYTkATWwHx57LBlmZnyB5LdTXT3yeSNmf
959Kr2jlxpXCGetWrQOrIjtEX9lFBzFoqSJM6x133BHrtlxXQ0OJ01c9fJYI
1F/MJC4ouk60I98onJxO1ZRbg1FYOqesSoEYV1gRAPiGG27ArJItVbgp0HiD
q0RbtPBZIqasCkj9RExFCyXeKJyaNtIua6qtsTQEzeYv/Bc1fCLLVWKlFyxY
UCzhZHeafwMtmZh+XVqGEBeEryoZSqdIyUMaypo1E9SbkTWzm6MLIX91v6jt
vtTQ447Q5l5WnsqEFR9Neb7Sgs84vnw1APtj/De+Sv4xhlJl3BWpoAg/vvly
09vLTIe2NCAlEUP1k8N30eFFJHJuI25JPUtow/KbmPifltrsF/Z3YxqvtnxI
GwoKLakJYd0TlW3Rmn+4w3HrSPxYvt3N+TS50wIjxWlFXMziQ0vffkLY302p
vLaHvDp5cSUO7WAVhRHkK4uHnPs+rNIPcDo6IPpBf5bQjNWwMTs4rXjdL+zv
RkYGXBlFPJh6e3tLiZeITekHsaZe9MaOxZFkN3FdJXcOH8RpA8/HWHv33Xfr
tMKzLltqaXCHCS9dk/stpqi2z0Gj2wKbCoppgXDMlbExG5uoyhKFkfnXBX3E
Vt4JEH1RVt24BW5RyYwGXarWHBqRM1zsJvzB6/BbYwkOmpYBsgSPHTG7ayPm
6bFDoVUe3ony4x9zFSPTPCUU8eyHXQdnYWMFZQexNJaDPojl7uhqPN4BJXkL
tFkb2fSE8RN0d7DwRLINOgcJPIe/x2HPdrnkNaSmgKZTjLb9boFK3AKPEXmB
q6SxtNvo0g4vgNAmKh8pVTczM6Mpfgj2UXCkRu2w1UTvxBbwiV0oLuqLsn70
qYEWCVYE9DnBkQeKG7jR4F/0lcHfoV29vVOQ8/miqB9L6wPrLzDuo0R+sAl9
CxjaxGWVh+bPMfOmLUoIZ3LUglReuJL3DD7Bq7xxR3Fe/9lUxYGoARf0FzrU
v0pktHz5ctXRu0RB5a2pB6+8cCB/+FYTRBVbuR+86nHpF1i/X+5W0tp/gX2Y
0IoXUwwJnTgSRFCa8dGhxFKiF9I/ZfiVVv2jBxleLpsRSxVbIid25bh0ldrv
fvscae1XqR+K0Qmqcqc7o4yZMCNA39oRM7KxBdVmFCHVkmsMu5Lifk0olJdh
NDtBS8el2deynGo3k3ZZ9rVhQhvazXD7Tx7aZ7YOIvjObn8UG7Wp1Rj+JBX9
8KijtrMq463czHOG6BO3bhxn7s5ynq0k7bJM3jjx1JSNpg+4le2CDd4yUt/y
4QanFu7vMFyJavglDNu5/ZOp8Vcxh8OJUTqOcwv5vGM4lz7X0DAhB10+aDgy
k0fM+LjNhIDpOagb6LsMK1n1+TivDzoLi4dmuamr0s2a5ROL+7rS/H/Dwgn8
fip9uV2UVUERfC4taYG8PxSeU98X0qd00FeJ4cnyK2VWysuRGmyY0Jf1nf+B
kA8l4KU5kDm4XOI5NTk+agLg6dHGp3VfDVTYwK7H+mKyCuVVlFXsISIY/937
h0LB5IKrVY+JRX0Q5+jo/h2BXZXO0aG9u8zI6F640bPOiutJf01MIvYQEY5f
Zf5zoXBywU+PF14ebfHc7OFXhBqErifvNith2MNENnqj3F+qZFMKEP14RfLQ
WBO0UWdNLLVRX0/erSKDmCbwql3RluYR18bm7Cwg67R4GmgDFkxYGTQej86x
LeJWWdgijZdDg28Z+7uitGM2qqlXO4NWx+jVbjBNaYBdOdchrBGwV8DQabUI
4e+4ltx6+AbzVbUf/Q5zbHLCTBwDT+VoYv5kX9LqUoKtkpzP3eH5fPnll4eS
gahV2dF6QHWM3x+VaNJQ2WGOjm0NJLl1eCi8U6I1wHd/rCKRFi2UknIZWbRo
UXCerFu3bgp/m/iFI9Z3R/liVD5UcUH5mGMTZk/NBerH5ONTairKQUWL5aTc
q0EesLBWr16NIopdjP/d0eu7brsL9Ddd86QJrM0c3DMcGKbHiGh86nB5SZui
KjWtd8TpgsA95CTBZDNUn9tH3s3SDzdHRUINJV0hmcfMwfFxOKtCM7DPeJIv
31HU2ILscxYFaAfbBhLPIPvUKvAaeTfLyuDY3+aal2WYW+npD3b9kiVL2DRB
SLrPtnVPlPSy7MM3kdnkTGYwO5AiqoeZsVdiKwGI5uDxzgf3Lc/61vo0kEXO
pLVixYowG1kPs9fGXDsf+tz5Eh73H1u5XXHIRprpCa4ZkDwv9JZ6oMUvk/60
yXXcTI04BqpwRCNaUQLSPbq/Fp7O6K3CD/uOB+82mgw58IF+OTZ2wwieP8ON
XSctTwT/5NVw15C39TorbhgJ6PTYoTFTG9llDk6iRjHFzJkz22y69SY1ePMl
Mm6JCWXcItwe/JNPLVxH3tWq7wjXkuEcp5hly5YFtGiRg13ufUlF7B+7xU/V
GGjTyJqsz6PixPwnjgyJhnSnoi1iiaRouyuuuCLYFXTv+pBrHW6aAcG4cOHC
CIIRTljQU/Bjh1YBaAcIRhvjw+usMKXwBal/s8PncLbXd2yrk7Y28YeTdrCf
bicrzA/naqwwLTyqzZ0qBw4cMGefHeQeDMZLOZPgT9AEmtZfeVpyovWGb8NW
QZ3wj154y6RkmshYiRHZaHFK8C0CVPW2Xa+HwUQ+bBAmxN2+fXu4NGKfOVxV
9SZ/7x6zH8UpQev+/n5z8oxTzE/2/ECcEoFjXo3K6Q4/i3CKMRAZTl1F9h94
4IFAR4APNaOLwZ/qTf7OPWavQN1h646OdnMdst6I8ueC/DcynOvwKT30gpSF
E0EoCbknBcPCzAN/8asoPKv/zZmPuCtrZ9Cuvd2agki8OheuTud4retSDMjo
oJfZ4L+fHnrfrfGe1Nht+IF9D0utPi9UkYJH9T+1/I17llQl2qkqAbHXHFJl
E8OUBpmAmgVicjLhA8nUuHBKwe6M61rwrP63kLs0nWzx4sVm8fw5LHCDztcd
nn6iul0y3hdjtDnFCr5DOxnRxdu5K1WaThihU6Y+dyZiZ0Fu9S8Aah7wMYBH
8NtfM0sWFS049l35lVDLYDTuYIh1qbuJM3B0UWUveB9uSsB+XEOCZ3BLGnXP
0jQpVPSQTsYwEoyz3m2CQkYq1EngCufTc7KCEevvh4xxDvXg2BloMSP7JkI9
KKk3NfprXNJZY1lAzgbHaSFDJkIR4LyARyZDK+FC4eAdPGv+yj3jvNUggFpM
AEktpy28yFlrc6pBNSDHFrGu2B6O1xS4yMPCaQiIvyFDG2hLBcI5gKlA0MEA
N1lkvjXT4K5xaWkiIM6oqF9NBd7VirY2F22zfFoY4gzKH6wm31qANtAWfvs9
BVcID+H8y8l10xVcPWBVc/5T5/Mq4iovEgpGS0hr7QNFUikWqch9UwF+r1ZM
s8b9jtMPR8vSpUtVx9CWArJANBnn404uxY5AC4ZxKe126ReE3uhCZmkRbb2h
rxg4ZWmht69X8fl5NxX08y1RxOln+/5C9J7heuSc6WChPXIEDIzHwtsP50z/
sl0gOgydNNiflgn3m8l1oLLzVa1/W0jxBteOXkqVYT9wH9Wl08f66JwL3xwd
C55t3DEaJAeEeeRc+A/aedThVaV5Q2iRc793RwfiHFC1vlZI8XrXjmpE0nAe
1JZ0hSUQZ87iDMBjvHc0zG1SI5NIcQZuEqXYbWlOoGmkXZZfsV047iJhu88I
6UO112nY5CRNDcGh2re0zAnOEAdzMEf2gs/PbB2bYGEObmakQQfSPFq0pnyW
s1oK/l8gbHe1kD6cGWqjkZitwG5zn5AWWj8+bho7enDcHJw4lhgDoRZ/EJ2W
slLH4Qb0wR+4ikjcuAuE7a4W0ofT0tfXFySciNMHz+p/cyeYPHzIx+9XrLjT
swMm8iTOYYyHJ5HXowa9Tjq5tHsu9ohLGcm1+3SsHRDEgTBudycOtoM6TqFh
2DIGj1y39wpHx9Xt2+Ex0SajixIllpAHanLG15OGyPbwOMvIo3de6ujRdp9y
7XzgEGv17gj7g2JScBo3PkAd1K6JY4SluXx0oHB9HzYbi1VqfsDe3t4Q7TA4
tLa+PYJ0OyxopIeMGzW7tgef/xkzZiA9RUKl5mexl6O/QdKfNv2hxWt0U1oC
78vq1auD2Y640rrjFuOgKSGFqwFaJLngXCd82X12OLp6mpSKsCFtcGwMmT1v
ETDl0XGLE6m3G6rtN3C/HB1i0TdTYlTr0ETt1CoOpFUcVTY/Rm0TAtkGY0OC
CEtI93gbwwmGB8NRN3VqnxlYsiSuDi8ZWIxeg1aGWK7icbgGbTbEBrXlpEP8
uKNOpsM/FN0rTUieCNKK1sHpMVt2Hwy6HNuxxQxtGTXgezZv7Qp4Gqj/vn98
rxkeZHMk9hDK9VAxC5+Ipm+pNLxvXpagqxv2SjJs2Vkq1zAsYW6E77xwILik
Qj8rVlyWZlMEozw0gab/+mdf4zjYlDpKdbkcP+7IzGcZfTi6tarOBAmBXVhH
BXM2YS7B+l4KcxhtfBr22oSpDfLpxnoIvZKsiHPnzo2lx6ou6nJeqixnsGP+
b/3+sed7w7Fslb9jvv7dH5oXf/SEA9k8Rsflhr2SDFs0seaaDBZISsegKDJA
ZKaePD3od1b9vAaHAaAK4d9Zs+dYh0pvb9Bu8+ZvIjiTY+Fjbh7LdkB2p7JT
XYbKM4P/5/OTPRLdlGVntwRlBz9ujU1osYKT+2rhJhysATbb5p7jwJU9hD4J
1hTEE43mKSdCdl6qnGZE+rer9XIz3U3FzNhqhd/hea9brV8aeQ7H5Ya9kgxb
RmLQNalscEknp5ondr9ZX+Gvmq+sTWa5tWUAHw1FmgXnnUFWqtY7WsQr26ni
N1+SzbMVp8TXfJ/C0hNy8l9DC1zdXxsKV86Q24i0Lk/a11CSqJL7GlYUo5z+
MbRDHj78hlnuUDJwwXK3lpb0y9ctZnT4y7oPYL6UpukfwepSa6LHVOYsLuaY
bj8O/D0V3WPNSB1KVbn41+7o2EjmJvPpcBLPfFJ3qy6gPF1xazff+tt/NjNP
+ahZvGhRhn2A6zVdL8uXcJXTxZqRlBT9Yj53vQ4E0HacuIltpSpTrDasIG7r
2HwK4YSvHR03WDeOCzngzIUi/EPCUlhF/gBrHuymEgz6BJMxfJ3vvNNrVSbd
cZa/vKlo08195VarBCng5vBhIHTIitYmcvB0dENUnHoWXDUYA1gbmwjW/2gA
KdhiwIgLKVkHyAHoc934cSQJt05FySLmu51JvSzEx0YDcdDFRl7n/Dt50/Gu
IX01I4UthchkQUsWknZRbEgyeqJZtLvVX3n63YTHOAxAHhg245O0e8DYDHAx
TJxDOROak/Az49lQdjKQ89xw8DuEFMBqjLnr4RH8qd4EQQAFkw9jGBc3Z+Xl
7cXF7UPnpKN9ktFLlSUZ/ofoai4lyXACRtLttCqwhg6P1EytttWsHWBD0zh0
STpkKRVxUkbCFsxPD93CQQMhQfU7CS5RDI6DP9WbcDgVRS7l27MmoHA+YlyS
PmQSZtGVFPqshlK3Hk90SFi84CsX1QjsXCWkb51w3L7YuNATh4aaH2vXwDcl
I019Yz4TnZITFTxJM0BjiBFGccLviAX9tJC+9cJxcUp8aKp0dFZnJKqZjMcN
52bjRAcZ02roWQmnrxLSt0E4bh8ZV1LwlN6C55F38+GUkhH4PnptwdcPIPA/
Kwm2NmYXlMqrhTzdpaLy5BiVqB4p4EG4eqi94NxYt1IgT+3HYCl5H9waRgnk
aVXxbbO/fADjgrLydksjoWmA1NVCnr6gonIaobKMkqTUaMuZliXQlm313//z
nQNm13Y9tKVVxb2tQ1xlVOLUuANG5FfsIwQ1O3QxK2M5F7BOMxpfkyWKhC/q
bgmd09LoDJaBQJhdhJ88NUqpfy/dNVkdKqSt0GzaMsclhH73ap39GF+vxAfQ
gO9mBotn5XPnlj3N5/5ZMq4WDmFDDE7LQ3OwA/Lw2kF4zVvnlMJQ0tE05cEy
OgrMrU3KlyNhxlRJ2/hp15Jy3PWphy+egt53YF+nGOdLQdtpIpHAT74Dq41w
k7eyqfzIrgay0KWQ6gt2bV7iyPTd7jDYv0io/WvuKy27I7WSEfPWEvXdCpvh
/P65FfTFrrlPO0M1vUgsPAqa1XQ645pOwE79te7wcpLu+uVc5pwqV5Xj1CaU
dVg+eWB1kZj0V8lYUTtER8SD5uwloadVUvDSZzup0gvnRHmhG1ZqzKPGwazg
cWowfIWMETUEdkT8NM4A2II3g8z6kX7bYPmOqZejMpPapKmN2xfZ3eLs3rjs
krbl9ogjod4Wv/tclcYWv1W7PNeDE88FsUGADM7EvtYdUzL3UDyXfMMg3xEx
yLtJqf8tOSHp3pmowX4syojPMH2Ho1jmikVGkmbsjtCMnd/zGbV1O0aWkbNF
m/H9drcl8mEsaK75rJjcxnXchiE/WdvWgn5SahF2J34oFBnWIWoxfiUqlDJz
vWPYLwfQEob9ks9dPBt9nmjQnS8eAGAd3lZ+eeh1tACEXw4yYtBZubiqV6PS
LjkVPM0GHYeRrrv3j80pM2eaJUsGktbVJebkdBjpS6m9TpdHFW57zgZKvnfA
7KxtNzv3HAggLaCQoq+DjBn8lAv3fC0qec4QpU0JTxOTc6UBDx9+03wyxMhf
JsDIrzHPPs5i5F/yDOWNh3vyRfPer/6n/qVv3PNtGLANgODGRCtuMzDtr0dn
J2kT0aeQv5301cToot8N/i9TO29LJVEWYGVDWCy8nqPFelebHyH0b/69VhsL
Ike5nPfKvTaDDYF5c/L/zM9+9EQsOPMa89Vv1w+ln/2jeeZ735CEwdxZQAq3
ZOxZUdTO9ufM4fffN++Nvxisgtqun1oPjdV1OHI7FYtPE4j5hu+zxW3P7ET+
6d+q6sIsNhQ6o1bnpDhSnuNXUYrN+++ZPU8+FiodcYqD1udEpZ/MTdFltv4E
bBIHA0MIvZrtr0ufM1OsifVVVY0/mhrb/42+OSdVIY4RcxccHguA0k/tCiCG
HGGBGM6NCpYqBKFzamPgvDFv7R4O3iWlC1jDBa3MkECxl4v3Xu9kK7t5ripI
2HNBlo5D5qkn63pKXQP+i50767O+jSOMypbTGjESace+CUN/Du7ZyuJsMVd/
M6oK0qT7WWrTqpw0WUNqjKZ39oTHFkcTJ09qTkC3/9CWraZWq5nhjYMsKHRt
7N2yShGizHz690rh+GhseWzbdrvUAmOLpaG2/TGOhIBBazQUG6TWu3Y++4e0
3Sphu4DW+VFafSaODUIRx41saYnopPUOKa1SO/PnSbusLYRy9eV1WynsL6DV
mj7FDgZ7W5eeoUhxWZnHVqlGD/izKHKxp2qjG0H2/Y27W5qAQ7tZRWAwsLVb
tix3b8rUU2t7z3v1ow6/ZoGobi5EcdC1NYy2rAj+yacG3kfe1SpAdzmpNROo
g7UgtBXMtby1Ksb5paKtTfOvYmOLou0X3JRUCRKhy00LHtIUq28tsKyPFpj6
M+wUBTvseAAblpODQY9LxFSjsmNzotAhNJeRVLMRB5eQD4wfXYxBN77v6nuq
z9bpjByaARBA3mWAfYyW8d2ZjpBe/beW0xjem+XVv5jMZlYUynTSLutm+y5p
l3UTPZXwjE7man3xyKkv+olGSWXpG/9N2mXpB3MYTqtxpyOHvpA75NCn/R1y
7XzaGuXwPOE7FxNJcEUKMWH91JjEgEoOG/AOI1lOq5vN0OqbQaSVq1ZIax4g
lMXn/v8vZr1zWt0sQismb/ftK6TVFwVGU0loPfxvM2eUzkcfPYMon1ZzkZ6c
qOOVFRIVzzjTMB2lu/hJPmnWxX8w1mclTvnoR40KdIETqOwzvNyNUFYwEM0s
pfHie5IOv026rc7fHr0lzSRCtciRvHe+Sx31eSJXaD68os75t0lfzfKYOyna
8lIyJeYziraaMnVnKtpqPIH285pPcdIod7rKi9FIEEzJQ8cZHByEczUEpGrR
BJqqkYsVbc8nfFYBAXBL8loybVpd2Qo/d2lPpQngdEKp1npwUQEuT1ZM2rQC
NOrqOEbPR1TtOf7a29sRs67FVmwpILb+AufBABFFkwASbjvYU1dqBLmCfBCV
5Y1h9mR2mdmSQVLfXqpi6NxCY53hpq1I9EsbT29v6umcDSa5X8X+PMJ+/tDc
ZsJA3LK9xjX3Wacud+LIsHkNDAygzWsKeUxMYTP9nZDW5wtJO1vVaxm1MNsY
yvrcOtPCZu4TcnkO4VKepKAJsBenPEmzY6xwfMgMiFP4xx9TdTIgJO1MVa9l
1ONsTaVMDxO6T8jlWYRLeRKVJmB83EKS5tuh/uosS2wP82yG8N1FQlrmCvvT
VQjtpNay4MfRYUmQo53oGZPFxsdJuyyjGS6KZiCV3KqQ5sSSWq17mGfThO8u
ENIiLc2oK1DaFckoGIiYocMH3Nos5GEuaSfJbVYBEGt2dAX4rPCIKfJZ9XuY
Z9OE7y4Q0nKasD9pfVQumeDZblyIfsPZvVdIH668surLOs8Glu/0OSGWkXZZ
Tg2uMm+f8N14Fdc0WmYL+0vf1B10UwedQvv5zFj3CGmaw2wqzknTT2gSuNak
1VURGOrz4/Qwz6YK3z1PSMscYX/Siq2tzLjnMONuFtJ3qmvn81H1E/oE/t4i
JVKXknezXFs9zLNe4bvzC9A3SziGrphqq5Ci0xiKNjHvSp18s8m7ZTj5FhCu
xZCIimqN/lasW12N1y6qOwdt9tWgEFGgF4eln6h+3cuMhxeiyfFRa3082rhD
0v44N2W86mtJYpnJkJkmFjO532apqO1jSdRVQW0ryNCljUOMMnQ3021Rd+6s
WJ9NcOcuJLIUI6lw61RRcXQp6Vtf87XTzJ4TmjnNob27zMjoXvAE4zqiVtCT
mKFCXWL/joAVunVId6xDmmLsyhbLLIbWNLGYY0fM7tqIeXrsEEtnsdKn7SVx
eQrD5Sam7xJc+rNJt81y6Rdz48+NbrQyipMuJX1Jar9edHESGUC9YScx/XG7
h/OkzSuRr1lKvigdRaqNdubkAS9Eba0fCT8cUxi+NjH950VjzCZ9NQuNsZjI
NifGG5d/WaVCl5L+JJVXBz/VQDXgFqBIh5OY/rK2AH13Xsm8zVLyRmnRlPvs
LoHu1vpF/ML5H8WDPcHLJmaMvHkoZpO+qkB4LFHI7qzosi6r4iY92SV1TDUn
exwjkf9kz8fbLCVvlBYuAYaWls6ubvPIXVdFlqr0lNYCQbJO6YoAGbdFV2RZ
pSq5S7yk6Ce5vIcr03djRz/isckJM2ErLCZWqOyWno9X7mYu4ZXSxGX20NLU
UX/v8Q2XRlaq7G6tB3ykX6irA2HElmoZhSI5W42owGbUHtHDPOPMMrhSj45t
DRjZOjxk0DzDQSc4U0xeVjn7Sw5WLyhI0lMPXxe+18OQyVlV8iZZ4awpFeE6
1kTXZhlFHDmLtL/YpbUGT5uhs1aHUIxjE2ZPbW3jY0UWps+SnZdPzrIt5RPp
uaAwPb3myRuiq9Jn686boYazfVcEEnGrknNh5Si3yHm4MqtPwmVsubnpTp3j
Cw11B/cMG7SN9zLvcs6wHFxxvjIPV5SKC4tRcdu1yyKLzudN06bu4TxtVYFP
YqstZ+VEzs2dXjGykab452/IXd8higiQZ+PjcGsMjxWfO1zBCucl97GCQ18k
H/pUZmjOaS5NU8Q50ktCp9jsXB9qdMolTH9nMf3dJxxXijpZGxXthxH6dQnT
35lMf18UjiuFaznRfpixlpcy/Z3B9He/cFwpONKmlvv1w0NfxvR6OtPrA8LR
dThlm6Xs1y+c4ZNMr6cyvf6+cHRdmMF6K/XfxD4VGOtK2VjwX3t7ewoJD6oI
LhatZFO6/Sb+08vlJwqMexWRUPXF+YYLcFkkXNPmwv5QR7cvUrT9bEW8PaJo
q4k0t6kubYqH4Gf/B+1By0f+H2rLYQs=\
\>"]]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.697064342921144*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Verify that we can render a column of graphics for a Mendelian simulation\
\>", "Subsubsection",
 CellChangeTimes->{{3.6970642303844213`*^9, 3.697064253622072*^9}, {
  3.7025289725106163`*^9, 3.702529005282124*^9}}],

Cell["\<\
This is not an automated test. Eyeball your render and make sure it looks \
like our render:\
\>", "Text",
 CellChangeTimes->{{3.7019747965968637`*^9, 3.7019748321942873`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TraitHistogram", "[", 
      RowBox[{
       RowBox[{"MendelianSimulate", "[", 
        RowBox[{"0", ",", "20", ",", "200"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"Render", "[", 
        RowBox[{
         RowBox[{"MendelianSimulate", "[", 
          RowBox[{"0", ",", "20", ",", "200"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ymin", ",", "ymax"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", "20"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", " ", "Center"}], "]"}]], "Input",
 CellChangeTimes->{{3.6970642591756763`*^9, 3.697064341164143*^9}, {
  3.70252901157227*^9, 3.702529016680994*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {Opacity[0], PointBox[{0.38380952380952377`, 0.}]}, {{}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
         Thickness[Small]}], 
         {RGBColor[0, 
           NCache[
            Rational[1, 4], 0.25], 0], EdgeForm[{Opacity[0.644], Thickness[
          Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5421245421245421, 0.}, {1.4578754578754578`, 
                46.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{21.32140650377798, 
               44.41231640531651}, {-33.52760091319298, 51.40701017966577}}],
             StatusArea[#, 46]& ,
             TagBoxNote->"46"],
            StyleBox["46", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[46, {}], "Tooltip"]& ]}, 
         {RGBColor[0, 
           NCache[
            Rational[1, 2], 0.5], 0], EdgeForm[{Opacity[0.644], Thickness[
          Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.542124542124542, 0.}, {2.4578754578754576`, 
                53.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{45.85418011625806, 
               68.94509001779659}, {-46.35732434036712, 51.40701017966577}}],
             StatusArea[#, 53]& ,
             TagBoxNote->"53"],
            StyleBox["53", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[53, {}], "Tooltip"]& ]}, 
         {RGBColor[0, 
           NCache[
            Rational[3, 4], 0.75], 0], EdgeForm[{Opacity[0.644], Thickness[
          Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.542124542124542, 0.}, {3.4578754578754576`, 
                60.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{70.38695372873813, 
               93.47786363027666}, {-59.18704776754128, 51.40701017966577}}],
             StatusArea[#, 60]& ,
             TagBoxNote->"60"],
            StyleBox["60", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[60, {}], "Tooltip"]& ]}, 
         {RGBColor[0, 1, 0], EdgeForm[{Opacity[0.644], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.542124542124542, 0.}, {4.457875457875458, 41.},
                 "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{94.91972734121822, 
               118.01063724275676`}, {-24.363512750925715`, 
               51.40701017966577}}],
             StatusArea[#, 41]& ,
             TagBoxNote->"41"],
            StyleBox["41", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[41, {}], "Tooltip"]& ]}, 
         {RGBColor[
           NCache[
            Rational[1, 4], 0.25], 0, 0], EdgeForm[{Opacity[0.644], Thickness[
          Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.542124542124542, 0.}, {5.457875457875458, 44.},
                 "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{119.45250095369829`, 
               142.54341085523683`}, {-29.861965648286066`, 
               51.40701017966577}}],
             StatusArea[#, 44]& ,
             TagBoxNote->"44"],
            StyleBox["44", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[44, {}], "Tooltip"]& ]}, 
         {RGBColor[
           NCache[
            Rational[1, 2], 0.5], 0, 0], EdgeForm[{Opacity[0.644], Thickness[
          Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.542124542124542, 0.}, {6.457875457875458, 51.},
                 "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{143.98527456617836`, 
               167.0761844677169}, {-42.691689075460225`, 51.40701017966577}}],
             StatusArea[#, 51]& ,
             TagBoxNote->"51"],
            StyleBox["51", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[51, {}], "Tooltip"]& ]}, 
         {RGBColor[
           NCache[
            Rational[3, 4], 0.75], 0, 0], EdgeForm[{Opacity[0.644], Thickness[
          Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.542124542124542, 0.}, {7.457875457875458, 66.},
                 "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{168.51804817865843`, 
               191.60895808019697`}, {-70.18395356226199, 
               51.407010179665775`}}],
             StatusArea[#, 66]& ,
             TagBoxNote->"66"],
            StyleBox["66", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[66, {}], "Tooltip"]& ]}, 
         {RGBColor[1, 0, 0], EdgeForm[{Opacity[0.644], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.542124542124542, 0.}, {8.457875457875458, 39.},
                 "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{193.0508217911385, 
               216.14173169267707`}, {-20.697877486018818`, 
               51.40701017966577}}],
             StatusArea[#, 39]& ,
             TagBoxNote->"39"],
            StyleBox["39", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[39, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
       StyleBox[
        StyleBox[{
          {Thickness[Tiny], 
           LineBox[{{0.38380952380952377`, 0.}, {8.619356776556776, 0.}}], 
           StyleBox[{}, "GraphicsLabel",
            StripOnInput->False]}, 
          StyleBox[{
            {Thickness[Tiny], 
             LineBox[{{0.5421245421245421, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {0.5421245421245421, 
                0.}]}], 
             LineBox[{{8.457875457875458, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {8.457875457875458, 
                0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {
               LineBox[{{1.4578754578754578`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {1.4578754578754578`, 
                  0.}]}], 
               LineBox[{{1.542124542124542, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {1.542124542124542, 
                  0.}]}], 
               LineBox[{{2.4578754578754576`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {2.4578754578754576`, 
                  0.}]}], 
               LineBox[{{2.542124542124542, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {2.542124542124542, 
                  0.}]}], 
               LineBox[{{3.457875457875457, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {3.457875457875457, 
                  0.}]}], 
               LineBox[{{3.5421245421245415`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {3.5421245421245415`, 
                  0.}]}], 
               LineBox[{{4.457875457875458, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {4.457875457875458, 
                  0.}]}], 
               LineBox[{{4.542124542124542, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {4.542124542124542, 
                  0.}]}], 
               LineBox[{{5.457875457875458, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {5.457875457875458, 
                  0.}]}], 
               LineBox[{{5.542124542124542, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {5.542124542124542, 
                  0.}]}], 
               LineBox[{{6.457875457875458, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {6.457875457875458, 
                  0.}]}], 
               LineBox[{{6.542124542124542, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {6.542124542124542, 
                  0.}]}], 
               LineBox[{{7.457875457875458, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {7.457875457875458, 
                  0.}]}], 
               LineBox[{{7.542124542124542, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {7.542124542124542, 
                  0.}]}]}, {}}}, 
            StyleBox[
             {Thickness[Tiny], 
              InsetBox["\<\"1\"\>", Offset[{0., -2.}, {1., 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"2\"\>", Offset[{0., -2.}, {2., 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"3\"\>", 
               Offset[{0., -2.}, {2.9999999999999996, 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"4\"\>", 
               Offset[{0., -2.}, {3.9999999999999996, 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"A\"\>", Offset[{0., -2.}, {5., 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"B\"\>", Offset[{0., -2.}, {6., 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"C\"\>", Offset[{0., -2.}, {7., 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"D\"\>", Offset[{0., -2.}, {8., 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}]}, 
             "GraphicsLabel",
             StripOnInput->False]}, "GraphicsTicks",
           StripOnInput->False]},
         Antialiasing->False], "GraphicsAxes",
        StripOnInput->False]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, True},
      AxesLabel->{None, None},
      AxesOrigin->{0.38380952380952377`, 0.},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {{{1., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
           FormBox["\"1\"", TraditionalForm], 0}, {1.9999999999999998`, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {
          1.9999999999999998`, 
           FormBox["\"2\"", TraditionalForm], 0}, {3., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
           FormBox["\"3\"", TraditionalForm], 0}, {4., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
           FormBox["\"4\"", TraditionalForm], 0}, {5., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {5., 
           FormBox["\"A\"", TraditionalForm], 0}, {6., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {6., 
           FormBox["\"B\"", TraditionalForm], 0}, {7., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {7., 
           FormBox["\"C\"", TraditionalForm], 0}, {8., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {8., 
           FormBox["\"D\"", TraditionalForm], 0}}, {{1., 
           FormBox[
            InterpretationBox[
             StyleBox[
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {
          1.9999999999999998`, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {5., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {6., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {7., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {8., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}}}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{All, All}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{None, Automatic}]},
    {
     GraphicsBox[{
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{13, 9}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {13, 9}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{27, 33}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {27, 33}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{38, 12}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {38, 12}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{21, 16}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {21, 16}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{5, 31}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {5, 31}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{31, 4}], 
        {GrayLevel[1], InsetBox["\<\"D2\"\>", {31, 4}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{20, 28}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {20, 28}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{24, 23}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {24, 23}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{33, 40}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {33, 40}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{7, 8}], 
        {GrayLevel[1], InsetBox["\<\"A4\"\>", {7, 8}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{30, 50}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {30, 50}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{32, 19}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {32, 19}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{34, 37}], 
        {GrayLevel[1], InsetBox["\<\"D2\"\>", {34, 37}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{37, 18}], 
        {GrayLevel[0], InsetBox["\<\"C4\"\>", {37, 18}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{18, 26}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {18, 26}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{28, 41}], 
        {GrayLevel[0], InsetBox["\<\"D3\"\>", {28, 41}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{33, 28}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {33, 28}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{23, 50}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {23, 50}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{42, 18}], 
        {GrayLevel[1], InsetBox["\<\"B1\"\>", {42, 18}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{36, 4}], 
        {GrayLevel[1], InsetBox["\<\"B1\"\>", {36, 4}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{11, 50}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {11, 50}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{5, 45}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {5, 45}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{7, 39}], 
        {GrayLevel[1], InsetBox["\<\"D2\"\>", {7, 39}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{15, 23}], 
        {GrayLevel[1], InsetBox["\<\"D2\"\>", {15, 23}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{7, 45}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {7, 45}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{28, 2}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {28, 2}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{43, 43}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {43, 43}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{16, 8}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {16, 8}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{49, 10}], 
        {GrayLevel[0], InsetBox["\<\"C4\"\>", {49, 10}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{4, 17}], 
        {GrayLevel[0], InsetBox["\<\"C4\"\>", {4, 17}]}}, 
       {RGBColor[1, 1, 0], EdgeForm[GrayLevel[0]], DiskBox[{9, 40}], 
        {GrayLevel[0], InsetBox["\<\"D4\"\>", {9, 40}]}}, 
       {RGBColor[1, 1, 0], EdgeForm[GrayLevel[0]], DiskBox[{3, 18}], 
        {GrayLevel[0], InsetBox["\<\"D4\"\>", {3, 18}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{4, 35}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {4, 35}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{2, 45}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {2, 45}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{9, 42}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {9, 42}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{14, 50}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {14, 50}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{27, 29}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {27, 29}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{0, 45}], 
        {GrayLevel[0], InsetBox["\<\"D3\"\>", {0, 45}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{14, 24}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {14, 24}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{28, 44}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {28, 44}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{7, 8}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {7, 8}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{29, 18}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {29, 18}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{29, 37}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {29, 37}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{17, 12}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {17, 12}]}}, 
       {RGBColor[1, 1, 0], EdgeForm[GrayLevel[0]], DiskBox[{29, 50}], 
        {GrayLevel[0], InsetBox["\<\"D4\"\>", {29, 50}]}}, 
       {RGBColor[1, 1, 0], EdgeForm[GrayLevel[0]], DiskBox[{7, 0}], 
        {GrayLevel[0], InsetBox["\<\"D4\"\>", {7, 0}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{38, 19}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {38, 19}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{3, 12}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {3, 12}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{41, 26}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {41, 26}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{2, 11}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {2, 11}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{40, 50}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {40, 50}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{3, 21}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {3, 21}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{15, 5}], 
        {GrayLevel[0], InsetBox["\<\"D3\"\>", {15, 5}]}}, 
       {RGBColor[1, 1, 0], EdgeForm[GrayLevel[0]], DiskBox[{0, 41}], 
        {GrayLevel[0], InsetBox["\<\"D4\"\>", {0, 41}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{40, 4}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {40, 4}]}}, 
       {RGBColor[1, 1, 0], EdgeForm[GrayLevel[0]], DiskBox[{19, 45}], 
        {GrayLevel[0], InsetBox["\<\"D4\"\>", {19, 45}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{4, 31}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {4, 31}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{0, 26}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {0, 26}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{19, 22}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {19, 22}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{31, 30}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {31, 30}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{5, 24}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {5, 24}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{2, 22}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {2, 22}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{8, 14}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {8, 14}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{20, 31}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {20, 31}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{29, 28}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {29, 28}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{44, 50}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {44, 50}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{10, 50}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {10, 50}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{21, 36}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {21, 36}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{32, 20}], 
        {GrayLevel[0], InsetBox["\<\"D3\"\>", {32, 20}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{27, 49}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {27, 49}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{1, 17}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {1, 17}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{3, 20}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {3, 20}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{5, 37}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {5, 37}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{26, 43}], 
        {GrayLevel[1], InsetBox["\<\"A4\"\>", {26, 43}]}}, 
       {RGBColor[1, 1, 0], EdgeForm[GrayLevel[0]], DiskBox[{47, 1}], 
        {GrayLevel[0], InsetBox["\<\"D4\"\>", {47, 1}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{0, 4}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {0, 4}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{50, 27}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {50, 27}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{8, 22}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {8, 22}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{19, 4}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {19, 4}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{25, 31}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {25, 31}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{29, 36}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {29, 36}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{38, 17}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {38, 17}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{8, 33}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {8, 33}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{13, 23}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {13, 23}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{13, 16}], 
        {GrayLevel[0], InsetBox["\<\"C4\"\>", {13, 16}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{22, 3}], 
        {GrayLevel[0], InsetBox["\<\"C4\"\>", {22, 3}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{12, 30}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {12, 30}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{41, 41}], 
        {GrayLevel[1], InsetBox["\<\"D2\"\>", {41, 41}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{20, 5}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {20, 5}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{50, 5}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {50, 5}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{44, 36}], 
        {GrayLevel[1], InsetBox["\<\"D2\"\>", {44, 36}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{15, 35}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {15, 35}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{5, 30}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {5, 30}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{11, 40}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {11, 40}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{34, 32}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {34, 32}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{33, 8}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {33, 8}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{10, 26}], 
        {GrayLevel[1], InsetBox["\<\"A4\"\>", {10, 26}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{12, 45}], 
        {GrayLevel[1], InsetBox["\<\"A4\"\>", {12, 45}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{21, 36}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {21, 36}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{23, 9}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {23, 9}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{3, 47}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {3, 47}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{44, 23}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {44, 23}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{32, 27}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {32, 27}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{27, 15}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {27, 15}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{38, 22}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {38, 22}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{14, 39}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {14, 39}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{38, 35}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {38, 35}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{25, 9}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {25, 9}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{43, 13}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {43, 13}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{37, 19}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {37, 19}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{13, 40}], 
        {GrayLevel[0], InsetBox["\<\"D3\"\>", {13, 40}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{30, 49}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {30, 49}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{48, 8}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {48, 8}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{4, 50}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {4, 50}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{12, 17}], 
        {GrayLevel[1], InsetBox["\<\"B1\"\>", {12, 17}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{21, 48}], 
        {GrayLevel[1], InsetBox["\<\"B1\"\>", {21, 48}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{5, 17}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {5, 17}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{40, 4}], 
        {GrayLevel[1], InsetBox["\<\"A4\"\>", {40, 4}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{37, 6}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {37, 6}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{31, 46}], 
        {GrayLevel[1], InsetBox["\<\"B1\"\>", {31, 46}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{29, 47}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {29, 47}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{31, 36}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {31, 36}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{12, 8}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {12, 8}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{9, 29}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {9, 29}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{28, 45}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {28, 45}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{48, 3}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {48, 3}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{24, 25}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {24, 25}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{19, 50}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {19, 50}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{23, 5}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {23, 5}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{33, 15}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {33, 15}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{22, 29}], 
        {GrayLevel[0], InsetBox["\<\"D3\"\>", {22, 29}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{31, 16}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {31, 16}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{6, 1}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {6, 1}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{17, 10}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {17, 10}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{17, 42}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {17, 42}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{17, 2}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {17, 2}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{31, 13}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {31, 13}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{19, 12}], 
        {GrayLevel[1], InsetBox["\<\"A4\"\>", {19, 12}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{23, 29}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {23, 29}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{10, 4}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {10, 4}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{4, 41}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {4, 41}]}}, 
       {RGBColor[1, 1, 0], EdgeForm[GrayLevel[0]], DiskBox[{42, 29}], 
        {GrayLevel[0], InsetBox["\<\"D4\"\>", {42, 29}]}}, 
       {RGBColor[1, 1, 0], EdgeForm[GrayLevel[0]], DiskBox[{37, 25}], 
        {GrayLevel[0], InsetBox["\<\"D4\"\>", {37, 25}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{36, 16}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {36, 16}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{30, 27}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {30, 27}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{46, 22}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {46, 22}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{38, 45}], 
        {GrayLevel[1], InsetBox["\<\"D2\"\>", {38, 45}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{45, 0}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {45, 0}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{47, 15}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {47, 15}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{5, 23}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {5, 23}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{10, 33}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {10, 33}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{46, 13}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {46, 13}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{40, 13}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {40, 13}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{0, 29}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {0, 29}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{42, 44}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {42, 44}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{9, 27}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {9, 27}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{38, 9}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {38, 9}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{46, 34}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {46, 34}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{18, 35}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {18, 35}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{45, 1}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {45, 1}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{49, 16}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {49, 16}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{43, 41}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {43, 41}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{12, 47}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {12, 47}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{33, 18}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {33, 18}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{26, 13}], 
        {GrayLevel[1], InsetBox["\<\"B1\"\>", {26, 13}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{16, 33}], 
        {GrayLevel[0], InsetBox["\<\"D3\"\>", {16, 33}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{50, 6}], 
        {GrayLevel[0], InsetBox["\<\"C4\"\>", {50, 6}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{48, 22}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {48, 22}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{37, 34}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {37, 34}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{10, 39}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {10, 39}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{1, 22}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {1, 22}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{14, 38}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {14, 38}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{22, 23}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {22, 23}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{12, 46}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {12, 46}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{16, 12}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {16, 12}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{28, 44}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {28, 44}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{42, 19}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {42, 19}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{7, 32}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {7, 32}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{0, 32}], 
        {GrayLevel[1], InsetBox["\<\"A4\"\>", {0, 32}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{27, 5}], 
        {GrayLevel[1], InsetBox["\<\"B1\"\>", {27, 5}]}}, 
       {RGBColor[1, 1, 0], EdgeForm[GrayLevel[0]], DiskBox[{1, 17}], 
        {GrayLevel[0], InsetBox["\<\"D4\"\>", {1, 17}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{25, 36}], 
        {GrayLevel[0], InsetBox["\<\"C4\"\>", {25, 36}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{14, 3}], 
        {GrayLevel[0], InsetBox["\<\"C4\"\>", {14, 3}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{26, 11}], 
        {GrayLevel[0], InsetBox["\<\"C4\"\>", {26, 11}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{17, 2}], 
        {GrayLevel[1], InsetBox["\<\"D2\"\>", {17, 2}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{13, 16}], 
        {GrayLevel[1], InsetBox["\<\"D2\"\>", {13, 16}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{25, 43}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {25, 43}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{8, 35}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {8, 35}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{23, 30}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {23, 30}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{23, 16}], 
        {GrayLevel[0], InsetBox["\<\"C4\"\>", {23, 16}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{22, 7}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {22, 7}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{49, 49}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {49, 49}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{46, 39}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {46, 39}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{32, 27}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {32, 27}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{36, 46}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {36, 46}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{27, 34}], 
        {GrayLevel[0], InsetBox["\<\"D3\"\>", {27, 34}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{11, 4}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {11, 4}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{20, 30}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {20, 30}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{0, 20}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {0, 20}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{45, 6}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {45, 6}]}}},
      ImagePadding->20,
      ImageSize->Large,
      PlotRange->{{0, 50}, {0, 50}},
      ImageCache->GraphicsData["CompressedBitmap", "\<\
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
P5lHpb2p8n/5le1fGp+Vav/gXXTiWeT77Q4eP3KRoBPbwYf6sOFA5+Gdd+lz
jthv8YXzHHj2AcdqIrie9mF7VLU3FY5mv9L9S4G5JYM3LEAIIHKOQ36284SB
/ZJAuAUAke1kJHWLRYJpX8PwzN79V8DqVMdqXbRb7FdUe1Phr/o/gv1LAt/2
e3oykqAv5zBVeEECBRIkoPADt/rQl/+V0FWoI39e0JHfWkFdCTmVAZRBfUI9
/B9TL51qr/trwQGl9Ct4Ss9pCmzoWeSolxuMj1q00DxKgg1t5zY0kKlAApmi
MG/OTGh/+ftBk1RKi1SB0fp7rENCpNNvqZdPdfjRdT2wtFbkb/nnONEykOfH
nV7mJAs6pUdUJQXs9NfkqMg0SnSpQS/+xmOfpgPR5W0ysiQUsl6XLDDExiUJ
HRUlyj9PQOe4no2sbYHf9i+c1hybhStCQbiXDwAXJbpQUKLnzIDbb8+FO+/A
30vM31ROQt3v/3ZylOgn+d+5SeP556+IwNyFDquS+D15xHYvg/7efpKYs1M1
58MXcf1uK4qEhviba2Nqwu5JSuPh50VY80jqcvpNf1M5PbdWJWNhzkxt/DX1
nmzNQ88kbsvVvm1ZBP1iOBzaae6NyYI4/w7/OzthaLFYjKeDlIN9D7A4rnUj
2eljc+GBokQ8iyezmFUf9gXO1jyZ1fmFUVhZjOfb/Aj/pr955fH5xtoQuPFn
SfIReyKetevWFcCGDfn8e7GYvun5s8b0LauZWR9rkl9c9irqOTrAe/P8dkec
29IDMn9TtWcjwKdDC/pH+lCUg2kNnj4v4Cn0Oh1MHXww4UcuWiMHU5U5mP5e
H4rVv8ss/8MP46HYiofiRRaF+VC86HARPaIq1SYH4P/qn7ownV+XKAMuxyul
bOZkgJerA6+6uD7drE5MB/hH+s7Hy/duXNlX6F7u4HsZP3LRAnMv/0Tf+aV4
56/FO/8NznfEd/4bDheVmvSY7f5ZC1NtkbnlMvMGv4ShfdWicKgUveKEIJWr
1etsDOV06bp0DhLmSpFN/Dlxjmb28CMXCVf6Y1U7Nxe50meQK73O2WaYK73u
cFGuSRF71MyeVnYFVTrk/TBmQuoc60z60ZkWmcWsoJR/T/aHioCTH1btuG6a
E9Dq6MQyLPywsNJhJLwVnvDzd6oezcEPf2iSnbDw80OHy6jef/ZPTKh+Y2sZ
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
DtR/3pR9m5Q+Cx2hwSmDlVuouuN3Iy1i8qXvjl2JQ/wCvuZCG5y5arbN2KVG
2NppBCYKd9rTHYM9SMqsK+Fwp0RnUq1FSq/WukPVpsuIbvZApk/lI6kDhKYp
x8XzftLVKDiGTAv5mOXTdyiOzw0mWQOKlSdZ1BiELeVOSvLVaDjf1O+ZAvOY
bUGrTyfnUa31u2RV8Ug5Ykj5DpxMVdb8KSxb5MCyzzjuUTpdSHgLVd8SQni6
TPvvnIuJB1Ye3/Vn2GP1NOzsaYUPbl6FYydcR664RF41d4R7vmttfPb2grvU
t101O1ZJknA14Aquo5V+LelAAhshDMds91sWZNzOTT68/2Yjo/t4P4kbQGOY
reF/MzP63Kn7Mnlzmm2gVNmvFmTRHW2mzTbTqLYMkr0ybFeNqbKrO82xdWe5
3VVFelfBlpsObOxz4Fs/fZH7ueml9VDH/f07eK3vb+AXN89qhD4nDKJvoepT
QvyR7Kahc5WeP2N3o7mMPjpEXuYRl52JwRkJMmv2Ii91CFKumrmwVLO0IvR7
lsTF0HNrYS7KYoV82UTJdivvIf0IWX/Ickm/w+JvdDTWNOdaSXHnuMhrkhX5
7F4DntV0XMDxNmn2P/Vdc39gNrKJPlwRck9NsZVvvu5eliiPTyUZWiaeOHlq
aOtXh19weiuO/b1Z0GUP2a1oMAXp3X+wsSZAZHlwx90OLMHflsgKi/Ph9/Hd
P+t/KAxT0HenBWO5fKLGjZvj5qgDE/Rs7znsVOc2eGdsFD6Q+LsBjr9LvNCy
cRAqCu6lLPwgsgkE1bFs05krJ7DptIxiNt0c3lAnOajrkLu56HOFe7fFYPPm
GMNWvZVCRjEpqCbqPrhM93BqbaTFumNZY1JWTWpYUTUsv4iUZNv9WJy1brXi
fR48f8mBR6q+LqxUNB0rVVbl0FeiWUlIBa6EdH2sF/oo0O5SL0dyEq/f1qE2
XR30XR6EMQlw3NfphApIS0OmLXN3ix/oaZvG3EWB7RGG3rfl8DCf+3vFLnhy
R6UL8lgu9qL33+phWSmZ+slsjUy9nm8P9mb6jME+PJG04Jm/m9UwIoFhaA1X
IulH4fhGLx7xuxdd8L6n2pFjKnFg0eLcoMy8cLF5hFVyJqDOYrmp394nM5G0
m7ls5EI1llTD0ZE4HOyR0GGpj89yQ1RZS9XMpPcHeSk4M9OUDyqFHtsFpasy
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
+1Cdg6+4ovzlSgRaoMaYu7PbtWqMVpvlnn+jyVJioNy1WTq316yd3iyg5NOV
2OSeyk6eaoRX777b8Qq1Dn4tUbkrPPq/jsfh3qc8t/vF7GZcBLc+ZNyNFy8z
wY0Xc7tfgP94/FukJSqSxlYqpVShGmqu3sdL1VCtYsYHVyTmaQqIhHJXzDSo
Ieaqd/pq6i00F26zvx/Y4Fz8vR8TIJzr+BHv0zeRT01SptUkpCSB/+/KJWnv
r6G++VZ48JmPwJ/ge9t+8hV4csiBE9jfJUiUhFxFxTkMqVINaU3YxSMA4pbN
Qifx7RzGs84PDXPtWaoD1uTu0PyiGtUc6R3s/inawlmpuvFTDOkObe7y///i
X+d8OznqAFXRXrddgVHNoXRe0efOBwLd+IjulHW+atn4uH/J3w1vOh1uLtr/
86dqZHMrv1a8qbvqmvf00cOzkx87YQJkWfIwuccce3h9WRqI8jO0a6xt+udE
tqvkx7fJu1o+4gLpZbD/HNckd3aS1sDizrVvkl3RVB+3mPZxc/bq/q+5Stlo
zPVx8Uxi8iKv/GezeNmKqW2A2FTHqph2rHLBK6reKqkXJTic8A8zl1jEfuch
/8LuzXJvV6l6mSR4Msxs1Y52NdM51tiDtFe1l+lQ36XqZRKT/VczzNyU7jqC
e9C1RN+rP83prq9StaMlQa+agedmVRLMRTBX7g8ahXepEUXTFatV7WjxyKSZ
tMk8MReZOebAZD6MXOzSA8yZpv0N9XbukoEzZo1MipfZ2Y/mEsTrlhzq+pit
PJhVhwmB9ul1yJHp/Ih6N1ce+oc5rItE7fpCDq+kxD3MYWjatDhX6UV6QcvV
m+OGSVr+Noc1uT+Huj+8CrCQqIffvKpjqn0vchdO3qJP0hxZd4bJLfi1H17V
bSYhWf8op4teu3JFy/PD9Al5EAJwnS05oTeJnZybkkc7YkYH/bEa3zxz5r7J
Z0fQSJzybDWW2qE4k6bU+pLnlyfmZ/9BDykDtSmh87PVbmvv9UxadTvTfFgd
WYKaHz2rBpSJ+P+kf55RrIqdZ5RthZ3nnNjSxFxbGrqrfdsYxYLJ9L6uhpPJ
1CMYAiRd7IX3yKmxliiVdylLFHNqqMhaougNieLa4v4RR5lf2Lg6UQm7l8mI
6fuSmwuheBGnvLcjppTEVESP5BV3xFEMnKTw0YmpMpk76EBXNoGV9div7a+D
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
Hf11K3Cu+f8BTkoUzA==\
\>"]]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.702529019990829*^9, 3.70252910320925*^9}]
}, Open  ]],

Cell["Which should look something like:", "Text",
 CellChangeTimes->{{3.702529116286648*^9, 3.702529119818952*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {Opacity[0], PointBox[{0.38380952380952377`, 0.}]}, {{}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
         Thickness[Small]}], 
         {RGBColor[0, 
           NCache[
            Rational[1, 4], 0.25], 0], EdgeForm[{Opacity[0.644], Thickness[
          Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5421245421245421, 0.}, {1.4578754578754578`, 
                46.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{21.32140650377798, 
               44.41231640531651}, {-33.52760091319298, 51.40701017966577}}],
             StatusArea[#, 46]& ,
             TagBoxNote->"46"],
            StyleBox["46", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[46, {}], "Tooltip"]& ]}, 
         {RGBColor[0, 
           NCache[
            Rational[1, 2], 0.5], 0], EdgeForm[{Opacity[0.644], Thickness[
          Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.542124542124542, 0.}, {2.4578754578754576`, 
                53.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{45.85418011625806, 
               68.94509001779659}, {-46.35732434036712, 51.40701017966577}}],
             StatusArea[#, 53]& ,
             TagBoxNote->"53"],
            StyleBox["53", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[53, {}], "Tooltip"]& ]}, 
         {RGBColor[0, 
           NCache[
            Rational[3, 4], 0.75], 0], EdgeForm[{Opacity[0.644], Thickness[
          Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.542124542124542, 0.}, {3.4578754578754576`, 
                60.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{70.38695372873813, 
               93.47786363027666}, {-59.18704776754128, 51.40701017966577}}],
             StatusArea[#, 60]& ,
             TagBoxNote->"60"],
            StyleBox["60", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[60, {}], "Tooltip"]& ]}, 
         {RGBColor[0, 1, 0], EdgeForm[{Opacity[0.644], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.542124542124542, 0.}, {4.457875457875458, 41.},
                 "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{94.91972734121822, 
               118.01063724275676`}, {-24.363512750925715`, 
               51.40701017966577}}],
             StatusArea[#, 41]& ,
             TagBoxNote->"41"],
            StyleBox["41", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[41, {}], "Tooltip"]& ]}, 
         {RGBColor[
           NCache[
            Rational[1, 4], 0.25], 0, 0], EdgeForm[{Opacity[0.644], Thickness[
          Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.542124542124542, 0.}, {5.457875457875458, 44.},
                 "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{119.45250095369829`, 
               142.54341085523683`}, {-29.861965648286066`, 
               51.40701017966577}}],
             StatusArea[#, 44]& ,
             TagBoxNote->"44"],
            StyleBox["44", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[44, {}], "Tooltip"]& ]}, 
         {RGBColor[
           NCache[
            Rational[1, 2], 0.5], 0, 0], EdgeForm[{Opacity[0.644], Thickness[
          Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.542124542124542, 0.}, {6.457875457875458, 51.},
                 "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{143.98527456617836`, 
               167.0761844677169}, {-42.691689075460225`, 51.40701017966577}}],
             StatusArea[#, 51]& ,
             TagBoxNote->"51"],
            StyleBox["51", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[51, {}], "Tooltip"]& ]}, 
         {RGBColor[
           NCache[
            Rational[3, 4], 0.75], 0, 0], EdgeForm[{Opacity[0.644], Thickness[
          Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.542124542124542, 0.}, {7.457875457875458, 66.},
                 "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{168.51804817865843`, 
               191.60895808019697`}, {-70.18395356226199, 
               51.407010179665775`}}],
             StatusArea[#, 66]& ,
             TagBoxNote->"66"],
            StyleBox["66", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[66, {}], "Tooltip"]& ]}, 
         {RGBColor[1, 0, 0], EdgeForm[{Opacity[0.644], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.542124542124542, 0.}, {8.457875457875458, 39.},
                 "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{193.0508217911385, 
               216.14173169267707`}, {-20.697877486018818`, 
               51.40701017966577}}],
             StatusArea[#, 39]& ,
             TagBoxNote->"39"],
            StyleBox["39", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[39, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
       StyleBox[
        StyleBox[{
          {Thickness[Tiny], 
           LineBox[{{0.38380952380952377`, 0.}, {8.619356776556776, 0.}}], 
           StyleBox[{}, "GraphicsLabel",
            StripOnInput->False]}, 
          StyleBox[{
            {Thickness[Tiny], 
             LineBox[{{0.5421245421245421, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {0.5421245421245421, 
                0.}]}], 
             LineBox[{{8.457875457875458, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {8.457875457875458, 
                0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {
               LineBox[{{1.4578754578754578`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {1.4578754578754578`, 
                  0.}]}], 
               LineBox[{{1.542124542124542, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {1.542124542124542, 
                  0.}]}], 
               LineBox[{{2.4578754578754576`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {2.4578754578754576`, 
                  0.}]}], 
               LineBox[{{2.542124542124542, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {2.542124542124542, 
                  0.}]}], 
               LineBox[{{3.457875457875457, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {3.457875457875457, 
                  0.}]}], 
               LineBox[{{3.5421245421245415`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {3.5421245421245415`, 
                  0.}]}], 
               LineBox[{{4.457875457875458, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {4.457875457875458, 
                  0.}]}], 
               LineBox[{{4.542124542124542, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {4.542124542124542, 
                  0.}]}], 
               LineBox[{{5.457875457875458, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {5.457875457875458, 
                  0.}]}], 
               LineBox[{{5.542124542124542, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {5.542124542124542, 
                  0.}]}], 
               LineBox[{{6.457875457875458, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {6.457875457875458, 
                  0.}]}], 
               LineBox[{{6.542124542124542, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {6.542124542124542, 
                  0.}]}], 
               LineBox[{{7.457875457875458, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {7.457875457875458, 
                  0.}]}], 
               LineBox[{{7.542124542124542, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {7.542124542124542, 
                  0.}]}]}, {}}}, 
            StyleBox[
             {Thickness[Tiny], 
              InsetBox["\<\"1\"\>", Offset[{0., -2.}, {1., 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"2\"\>", Offset[{0., -2.}, {2., 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"3\"\>", 
               Offset[{0., -2.}, {2.9999999999999996, 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"4\"\>", 
               Offset[{0., -2.}, {3.9999999999999996, 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"A\"\>", Offset[{0., -2.}, {5., 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"B\"\>", Offset[{0., -2.}, {6., 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"C\"\>", Offset[{0., -2.}, {7., 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"D\"\>", Offset[{0., -2.}, {8., 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}]}, 
             "GraphicsLabel",
             StripOnInput->False]}, "GraphicsTicks",
           StripOnInput->False]},
         Antialiasing->False], "GraphicsAxes",
        StripOnInput->False]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, True},
      AxesLabel->{None, None},
      AxesOrigin->{0.38380952380952377`, 0.},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {{{1., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
           FormBox["\"1\"", TraditionalForm], 0}, {1.9999999999999998`, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {
          1.9999999999999998`, 
           FormBox["\"2\"", TraditionalForm], 0}, {3., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
           FormBox["\"3\"", TraditionalForm], 0}, {4., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
           FormBox["\"4\"", TraditionalForm], 0}, {5., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {5., 
           FormBox["\"A\"", TraditionalForm], 0}, {6., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {6., 
           FormBox["\"B\"", TraditionalForm], 0}, {7., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {7., 
           FormBox["\"C\"", TraditionalForm], 0}, {8., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {8., 
           FormBox["\"D\"", TraditionalForm], 0}}, {{1., 
           FormBox[
            InterpretationBox[
             StyleBox[
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {
          1.9999999999999998`, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {5., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {6., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {7., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {8., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}}}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{All, All}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{None, Automatic}]},
    {
     GraphicsBox[{
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{13, 9}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {13, 9}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{27, 33}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {27, 33}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{38, 12}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {38, 12}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{21, 16}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {21, 16}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{5, 31}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {5, 31}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{31, 4}], 
        {GrayLevel[1], InsetBox["\<\"D2\"\>", {31, 4}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{20, 28}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {20, 28}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{24, 23}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {24, 23}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{33, 40}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {33, 40}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{7, 8}], 
        {GrayLevel[1], InsetBox["\<\"A4\"\>", {7, 8}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{30, 50}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {30, 50}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{32, 19}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {32, 19}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{34, 37}], 
        {GrayLevel[1], InsetBox["\<\"D2\"\>", {34, 37}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{37, 18}], 
        {GrayLevel[0], InsetBox["\<\"C4\"\>", {37, 18}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{18, 26}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {18, 26}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{28, 41}], 
        {GrayLevel[0], InsetBox["\<\"D3\"\>", {28, 41}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{33, 28}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {33, 28}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{23, 50}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {23, 50}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{42, 18}], 
        {GrayLevel[1], InsetBox["\<\"B1\"\>", {42, 18}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{36, 4}], 
        {GrayLevel[1], InsetBox["\<\"B1\"\>", {36, 4}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{11, 50}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {11, 50}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{5, 45}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {5, 45}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{7, 39}], 
        {GrayLevel[1], InsetBox["\<\"D2\"\>", {7, 39}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{15, 23}], 
        {GrayLevel[1], InsetBox["\<\"D2\"\>", {15, 23}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{7, 45}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {7, 45}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{28, 2}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {28, 2}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{43, 43}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {43, 43}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{16, 8}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {16, 8}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{49, 10}], 
        {GrayLevel[0], InsetBox["\<\"C4\"\>", {49, 10}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{4, 17}], 
        {GrayLevel[0], InsetBox["\<\"C4\"\>", {4, 17}]}}, 
       {RGBColor[1, 1, 0], EdgeForm[GrayLevel[0]], DiskBox[{9, 40}], 
        {GrayLevel[0], InsetBox["\<\"D4\"\>", {9, 40}]}}, 
       {RGBColor[1, 1, 0], EdgeForm[GrayLevel[0]], DiskBox[{3, 18}], 
        {GrayLevel[0], InsetBox["\<\"D4\"\>", {3, 18}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{4, 35}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {4, 35}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{2, 45}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {2, 45}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{9, 42}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {9, 42}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{14, 50}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {14, 50}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{27, 29}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {27, 29}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{0, 45}], 
        {GrayLevel[0], InsetBox["\<\"D3\"\>", {0, 45}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{14, 24}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {14, 24}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{28, 44}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {28, 44}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{7, 8}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {7, 8}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{29, 18}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {29, 18}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{29, 37}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {29, 37}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{17, 12}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {17, 12}]}}, 
       {RGBColor[1, 1, 0], EdgeForm[GrayLevel[0]], DiskBox[{29, 50}], 
        {GrayLevel[0], InsetBox["\<\"D4\"\>", {29, 50}]}}, 
       {RGBColor[1, 1, 0], EdgeForm[GrayLevel[0]], DiskBox[{7, 0}], 
        {GrayLevel[0], InsetBox["\<\"D4\"\>", {7, 0}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{38, 19}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {38, 19}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{3, 12}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {3, 12}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{41, 26}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {41, 26}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{2, 11}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {2, 11}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{40, 50}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {40, 50}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{3, 21}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {3, 21}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{15, 5}], 
        {GrayLevel[0], InsetBox["\<\"D3\"\>", {15, 5}]}}, 
       {RGBColor[1, 1, 0], EdgeForm[GrayLevel[0]], DiskBox[{0, 41}], 
        {GrayLevel[0], InsetBox["\<\"D4\"\>", {0, 41}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{40, 4}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {40, 4}]}}, 
       {RGBColor[1, 1, 0], EdgeForm[GrayLevel[0]], DiskBox[{19, 45}], 
        {GrayLevel[0], InsetBox["\<\"D4\"\>", {19, 45}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{4, 31}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {4, 31}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{0, 26}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {0, 26}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{19, 22}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {19, 22}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{31, 30}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {31, 30}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{5, 24}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {5, 24}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{2, 22}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {2, 22}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{8, 14}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {8, 14}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{20, 31}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {20, 31}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{29, 28}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {29, 28}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{44, 50}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {44, 50}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{10, 50}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {10, 50}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{21, 36}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {21, 36}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{32, 20}], 
        {GrayLevel[0], InsetBox["\<\"D3\"\>", {32, 20}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{27, 49}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {27, 49}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{1, 17}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {1, 17}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{3, 20}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {3, 20}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{5, 37}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {5, 37}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{26, 43}], 
        {GrayLevel[1], InsetBox["\<\"A4\"\>", {26, 43}]}}, 
       {RGBColor[1, 1, 0], EdgeForm[GrayLevel[0]], DiskBox[{47, 1}], 
        {GrayLevel[0], InsetBox["\<\"D4\"\>", {47, 1}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{0, 4}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {0, 4}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{50, 27}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {50, 27}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{8, 22}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {8, 22}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{19, 4}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {19, 4}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{25, 31}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {25, 31}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{29, 36}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {29, 36}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{38, 17}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {38, 17}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{8, 33}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {8, 33}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{13, 23}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {13, 23}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{13, 16}], 
        {GrayLevel[0], InsetBox["\<\"C4\"\>", {13, 16}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{22, 3}], 
        {GrayLevel[0], InsetBox["\<\"C4\"\>", {22, 3}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{12, 30}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {12, 30}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{41, 41}], 
        {GrayLevel[1], InsetBox["\<\"D2\"\>", {41, 41}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{20, 5}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {20, 5}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{50, 5}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {50, 5}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{44, 36}], 
        {GrayLevel[1], InsetBox["\<\"D2\"\>", {44, 36}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{15, 35}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {15, 35}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{5, 30}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {5, 30}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{11, 40}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {11, 40}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{34, 32}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {34, 32}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{33, 8}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {33, 8}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{10, 26}], 
        {GrayLevel[1], InsetBox["\<\"A4\"\>", {10, 26}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{12, 45}], 
        {GrayLevel[1], InsetBox["\<\"A4\"\>", {12, 45}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{21, 36}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {21, 36}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{23, 9}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {23, 9}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{3, 47}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {3, 47}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{44, 23}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {44, 23}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{32, 27}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {32, 27}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{27, 15}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {27, 15}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{38, 22}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {38, 22}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{14, 39}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {14, 39}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{38, 35}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {38, 35}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{25, 9}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {25, 9}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{43, 13}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {43, 13}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{37, 19}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {37, 19}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{13, 40}], 
        {GrayLevel[0], InsetBox["\<\"D3\"\>", {13, 40}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{30, 49}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {30, 49}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{48, 8}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {48, 8}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{4, 50}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {4, 50}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{12, 17}], 
        {GrayLevel[1], InsetBox["\<\"B1\"\>", {12, 17}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{21, 48}], 
        {GrayLevel[1], InsetBox["\<\"B1\"\>", {21, 48}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{5, 17}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {5, 17}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{40, 4}], 
        {GrayLevel[1], InsetBox["\<\"A4\"\>", {40, 4}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{37, 6}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {37, 6}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{31, 46}], 
        {GrayLevel[1], InsetBox["\<\"B1\"\>", {31, 46}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{29, 47}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {29, 47}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{31, 36}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {31, 36}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{12, 8}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {12, 8}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{9, 29}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {9, 29}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{28, 45}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {28, 45}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{48, 3}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {48, 3}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{24, 25}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {24, 25}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{19, 50}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {19, 50}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{23, 5}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {23, 5}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{33, 15}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {33, 15}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{22, 29}], 
        {GrayLevel[0], InsetBox["\<\"D3\"\>", {22, 29}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{31, 16}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {31, 16}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{6, 1}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {6, 1}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{17, 10}], 
        {GrayLevel[1], InsetBox["\<\"A2\"\>", {17, 10}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{17, 42}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {17, 42}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{17, 2}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {17, 2}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{31, 13}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {31, 13}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{19, 12}], 
        {GrayLevel[1], InsetBox["\<\"A4\"\>", {19, 12}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{23, 29}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {23, 29}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{10, 4}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {10, 4}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{4, 41}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {4, 41}]}}, 
       {RGBColor[1, 1, 0], EdgeForm[GrayLevel[0]], DiskBox[{42, 29}], 
        {GrayLevel[0], InsetBox["\<\"D4\"\>", {42, 29}]}}, 
       {RGBColor[1, 1, 0], EdgeForm[GrayLevel[0]], DiskBox[{37, 25}], 
        {GrayLevel[0], InsetBox["\<\"D4\"\>", {37, 25}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{36, 16}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {36, 16}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{30, 27}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {30, 27}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{46, 22}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {46, 22}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{38, 45}], 
        {GrayLevel[1], InsetBox["\<\"D2\"\>", {38, 45}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{45, 0}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {45, 0}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{47, 15}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {47, 15}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{5, 23}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {5, 23}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{10, 33}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {10, 33}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{46, 13}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {46, 13}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{40, 13}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {40, 13}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{0, 29}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {0, 29}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{42, 44}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {42, 44}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{9, 27}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {9, 27}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{38, 9}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {38, 9}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{46, 34}], 
        {GrayLevel[1], InsetBox["\<\"D1\"\>", {46, 34}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{18, 35}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {18, 35}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{45, 1}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {45, 1}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{49, 16}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {49, 16}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{43, 41}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {43, 41}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{12, 47}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {12, 47}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{33, 18}], 
        {GrayLevel[1], InsetBox["\<\"B3\"\>", {33, 18}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{26, 13}], 
        {GrayLevel[1], InsetBox["\<\"B1\"\>", {26, 13}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{16, 33}], 
        {GrayLevel[0], InsetBox["\<\"D3\"\>", {16, 33}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{50, 6}], 
        {GrayLevel[0], InsetBox["\<\"C4\"\>", {50, 6}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{48, 22}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {48, 22}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{37, 34}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {37, 34}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{10, 39}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {10, 39}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{1, 22}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {1, 22}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{14, 38}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {14, 38}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{22, 23}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {22, 23}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{12, 46}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {12, 46}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{16, 12}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {16, 12}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{28, 44}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {28, 44}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{42, 19}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {42, 19}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{7, 32}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {7, 32}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{0, 32}], 
        {GrayLevel[1], InsetBox["\<\"A4\"\>", {0, 32}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{27, 5}], 
        {GrayLevel[1], InsetBox["\<\"B1\"\>", {27, 5}]}}, 
       {RGBColor[1, 1, 0], EdgeForm[GrayLevel[0]], DiskBox[{1, 17}], 
        {GrayLevel[0], InsetBox["\<\"D4\"\>", {1, 17}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{25, 36}], 
        {GrayLevel[0], InsetBox["\<\"C4\"\>", {25, 36}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{14, 3}], 
        {GrayLevel[0], InsetBox["\<\"C4\"\>", {14, 3}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{26, 11}], 
        {GrayLevel[0], InsetBox["\<\"C4\"\>", {26, 11}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{17, 2}], 
        {GrayLevel[1], InsetBox["\<\"D2\"\>", {17, 2}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{13, 16}], 
        {GrayLevel[1], InsetBox["\<\"D2\"\>", {13, 16}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{25, 43}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {25, 43}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{8, 35}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {8, 35}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{23, 30}], 
        {GrayLevel[1], InsetBox["\<\"B2\"\>", {23, 30}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{23, 16}], 
        {GrayLevel[0], InsetBox["\<\"C4\"\>", {23, 16}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{22, 7}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {22, 7}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 2], 0.5], 0], EdgeForm[GrayLevel[0]], DiskBox[{49, 49}], 
        {GrayLevel[1], InsetBox["\<\"C2\"\>", {49, 49}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 2], 0.5], 1, 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{46, 39}], 
        {GrayLevel[1], InsetBox["\<\"B4\"\>", {46, 39}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{32, 27}], 
        {GrayLevel[1], InsetBox["\<\"C1\"\>", {32, 27}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{36, 46}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {36, 46}]}}, 
       {RGBColor[1, 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{27, 34}], 
        {GrayLevel[0], InsetBox["\<\"D3\"\>", {27, 34}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{11, 4}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {11, 4}]}}, 
       {RGBColor[
         NCache[
          Rational[3, 4], 0.75], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], 
        DiskBox[{20, 30}], 
        {GrayLevel[1], InsetBox["\<\"C3\"\>", {20, 30}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[3, 4], 0.75], 0], EdgeForm[GrayLevel[0]], DiskBox[{0, 20}], 
        {GrayLevel[1], InsetBox["\<\"A3\"\>", {0, 20}]}}, 
       {RGBColor[
         NCache[
          Rational[1, 4], 0.25], 
         NCache[
          Rational[1, 4], 0.25], 0], EdgeForm[GrayLevel[0]], DiskBox[{45, 6}], 
        {GrayLevel[1], InsetBox["\<\"A1\"\>", {45, 6}]}}},
      ImagePadding->20,
      ImageSize->Large,
      PlotRange->{{0, 50}, {0, 50}},
      ImageCache->GraphicsData["CompressedBitmap", "\<\
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
P5lHpb2p8n/5le1fGp+Vav/gXXTiWeT77Q4eP3KRoBPbwYf6sOFA5+Gdd+lz
jthv8YXzHHj2AcdqIrie9mF7VLU3FY5mv9L9S4G5JYM3LEAIIHKOQ36284SB
/ZJAuAUAke1kJHWLRYJpX8PwzN79V8DqVMdqXbRb7FdUe1Phr/o/gv1LAt/2
e3oykqAv5zBVeEECBRIkoPADt/rQl/+V0FWoI39e0JHfWkFdCTmVAZRBfUI9
/B9TL51qr/trwQGl9Ct4Ss9pCmzoWeSolxuMj1q00DxKgg1t5zY0kKlAApmi
MG/OTGh/+ftBk1RKi1SB0fp7rENCpNNvqZdPdfjRdT2wtFbkb/nnONEykOfH
nV7mJAs6pUdUJQXs9NfkqMg0SnSpQS/+xmOfpgPR5W0ysiQUsl6XLDDExiUJ
HRUlyj9PQOe4no2sbYHf9i+c1hybhStCQbiXDwAXJbpQUKLnzIDbb8+FO+/A
30vM31ROQt3v/3ZylOgn+d+5SeP556+IwNyFDquS+D15xHYvg/7efpKYs1M1
58MXcf1uK4qEhviba2Nqwu5JSuPh50VY80jqcvpNf1M5PbdWJWNhzkxt/DX1
nmzNQ88kbsvVvm1ZBP1iOBzaae6NyYI4/w7/OzthaLFYjKeDlIN9D7A4rnUj
2eljc+GBokQ8iyezmFUf9gXO1jyZ1fmFUVhZjOfb/Aj/pr955fH5xtoQuPFn
SfIReyKetevWFcCGDfn8e7GYvun5s8b0LauZWR9rkl9c9irqOTrAe/P8dkec
29IDMn9TtWcjwKdDC/pH+lCUg2kNnj4v4Cn0Oh1MHXww4UcuWiMHU5U5mP5e
H4rVv8ss/8MP46HYiofiRRaF+VC86HARPaIq1SYH4P/qn7ownV+XKAMuxyul
bOZkgJerA6+6uD7drE5MB/hH+s7Hy/duXNlX6F7u4HsZP3LRAnMv/0Tf+aV4
56/FO/8NznfEd/4bDheVmvSY7f5ZC1NtkbnlMvMGv4ShfdWicKgUveKEIJWr
1etsDOV06bp0DhLmSpFN/Dlxjmb28CMXCVf6Y1U7Nxe50meQK73O2WaYK73u
cFGuSRF71MyeVnYFVTrk/TBmQuoc60z60ZkWmcWsoJR/T/aHioCTH1btuG6a
E9Dq6MQyLPywsNJhJLwVnvDzd6oezcEPf2iSnbDw80OHy6jef/ZPTKh+Y2sZ
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
DtR/3pR9m5Q+Cx2hwSmDlVuouuN3Iy1i8qXvjl2JQ/wCvuZCG5y5arbN2KVG
2NppBCYKd9rTHYM9SMqsK+Fwp0RnUq1FSq/WukPVpsuIbvZApk/lI6kDhKYp
x8XzftLVKDiGTAv5mOXTdyiOzw0mWQOKlSdZ1BiELeVOSvLVaDjf1O+ZAvOY
bUGrTyfnUa31u2RV8Ug5Ykj5DpxMVdb8KSxb5MCyzzjuUTpdSHgLVd8SQni6
TPvvnIuJB1Ye3/Vn2GP1NOzsaYUPbl6FYydcR664RF41d4R7vmttfPb2grvU
t101O1ZJknA14Aquo5V+LelAAhshDMds91sWZNzOTT68/2Yjo/t4P4kbQGOY
reF/MzP63Kn7Mnlzmm2gVNmvFmTRHW2mzTbTqLYMkr0ybFeNqbKrO82xdWe5
3VVFelfBlpsObOxz4Fs/fZH7ueml9VDH/f07eK3vb+AXN89qhD4nDKJvoepT
QvyR7Kahc5WeP2N3o7mMPjpEXuYRl52JwRkJMmv2Ii91CFKumrmwVLO0IvR7
lsTF0HNrYS7KYoV82UTJdivvIf0IWX/Ickm/w+JvdDTWNOdaSXHnuMhrkhX5
7F4DntV0XMDxNmn2P/Vdc39gNrKJPlwRck9NsZVvvu5eliiPTyUZWiaeOHlq
aOtXh19weiuO/b1Z0GUP2a1oMAXp3X+wsSZAZHlwx90OLMHflsgKi/Ph9/Hd
P+t/KAxT0HenBWO5fKLGjZvj5qgDE/Rs7znsVOc2eGdsFD6Q+LsBjr9LvNCy
cRAqCu6lLPwgsgkE1bFs05krJ7DptIxiNt0c3lAnOajrkLu56HOFe7fFYPPm
GMNWvZVCRjEpqCbqPrhM93BqbaTFumNZY1JWTWpYUTUsv4iUZNv9WJy1brXi
fR48f8mBR6q+LqxUNB0rVVbl0FeiWUlIBa6EdH2sF/oo0O5SL0dyEq/f1qE2
XR30XR6EMQlw3NfphApIS0OmLXN3ix/oaZvG3EWB7RGG3rfl8DCf+3vFLnhy
R6UL8lgu9qL33+phWSmZ+slsjUy9nm8P9mb6jME+PJG04Jm/m9UwIoFhaA1X
IulH4fhGLx7xuxdd8L6n2pFjKnFg0eLcoMy8cLF5hFVyJqDOYrmp394nM5G0
m7ls5EI1llTD0ZE4HOyR0GGpj89yQ1RZS9XMpPcHeSk4M9OUDyqFHtsFpasy
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\
\>"]]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.702529019990829*^9, 3.70252910320925*^9}],

Cell["Awesome!", "Text",
 CellChangeTimes->{{3.701979325364874*^9, 3.7019793265808697`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manipulate", "Section",
 CellChangeTimes->{{3.697063983953307*^9, 3.697063985559499*^9}}],

Cell[TextData[{
 "We\[CloseCurlyQuote]re nearly there. We just need to update our ",
 StyleBox["Manipulate", "Code"],
 " to support both Blending and Mendelian modes. "
}], "Text",
 CellChangeTimes->{{3.7025292667107477`*^9, 3.7025293046567717`*^9}, {
  3.702529343267578*^9, 3.702529375217246*^9}, {3.702529827940812*^9, 
  3.702529851271904*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
         "Next", " ", "we", " ", "change", " ", "these", " ", "lines", " ", 
          "to", " ", "call", " ", "our", " ", "over"}], "-", 
         RowBox[{"all", " ", "Simulate", " ", "function"}]}], ",", " ", 
        RowBox[{
        "passing", " ", "method", " ", "as", " ", "an", " ", "argument"}]}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TraitHistogram", "[", 
        RowBox[{
         RowBox[{"Simulate", "[", 
          RowBox[{"s", ",", "20", ",", "200", ",", "method"}], "]"}], "[", 
         RowBox[{"[", "t", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"Render", "[", 
          RowBox[{
           RowBox[{"Simulate", "[", 
            RowBox[{"s", ",", "20", ",", "200", ",", "method"}], "]"}], "[", 
           RowBox[{"[", "t", "]"}], "]"}], "]"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "Center"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", ",", "0", ",", "\"\<Seed\>\""}], "}"}], ",", "0", ",", 
     "100", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", "1", ",", "\"\<Generation\>\""}], "}"}], ",", "1", 
     ",", "20", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}], ",", 
     RowBox[{"AnimationRate", "\[Rule]", "1"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "First", " ", "we", " ", "add", " ", "the", " ", "Simulation", " ", 
     "Method", " ", "button"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "method", ",", "\"\<Blending\>\"", ",", "\"\<Simulation Method\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Blending\>\"", ",", "\"\<Mendelian\>\""}], "}"}]}], 
    "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7019797329528837`*^9, 3.701979781675164*^9}, {
  3.702529855099011*^9, 3.7025299721567287`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`method$$ = "Mendelian", $CellContext`s$$ = 
    0, $CellContext`t$$ = 20, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`s$$], 0, "Seed"}, 0, 100, 1}, {{
       Hold[$CellContext`t$$], 1, "Generation"}, 1, 20, 1}, {{
       Hold[$CellContext`method$$], "Blending", "Simulation Method"}, {
      "Blending", "Mendelian"}}}, Typeset`size$$ = {
    720., {432.91754150390625`, 440.08245849609375`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, $CellContext`s$7922$$ =
     0, $CellContext`t$7923$$ = 0, $CellContext`method$7924$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`method$$ = "Blending", $CellContext`s$$ = 
        0, $CellContext`t$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`s$$, $CellContext`s$7922$$, 0], 
        Hold[$CellContext`t$$, $CellContext`t$7923$$, 0], 
        Hold[$CellContext`method$$, $CellContext`method$7924$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Column[{
         $CellContext`TraitHistogram[
          Part[
           $CellContext`Simulate[$CellContext`s$$, 20, 
            200, $CellContext`method$$], $CellContext`t$$]], 
         Graphics[
          $CellContext`Render[
           Part[
            $CellContext`Simulate[$CellContext`s$$, 20, 
             200, $CellContext`method$$], $CellContext`t$$]], ImageSize -> 
          Large]}, Center], 
      "Specifications" :> {{{$CellContext`s$$, 0, "Seed"}, 0, 100, 1, 
         Appearance -> "Open"}, {{$CellContext`t$$, 1, "Generation"}, 1, 20, 
         1, Appearance -> "Open", AnimationRate -> 
         1}, {{$CellContext`method$$, "Blending", "Simulation Method"}, {
         "Blending", "Mendelian"}}}, "Options" :> {}, "DefaultOptions" :> {}],
     
     ImageSizeCache->{775., {551., 558.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.702529981484153*^9}]
}, Open  ]],

Cell["\<\
There we have it! We can now simulate the Blending model, and watch how each \
generation converges to a single Trait value of 0.5. And we can also simulate \
the Mendelian model. You\[CloseCurlyQuote]ll notice that the number of genes \
might vary a lot over time, but it never converges to a single value. This is \
much closer to reality.\
\>", "Text",
 CellChangeTimes->{{3.701979821823979*^9, 3.701979897613922*^9}, {
  3.702530005239953*^9, 3.7025300848337097`*^9}}],

Cell["\<\
Congratulations on completing our course! I personally think that it was a \
difficult course. So, if you made it here, you should feel really proud of \
yourself. We really hope you had fun learning Mathematica with us, and we \
wish you good luck in your math and programming explorations! Thanks and, \
hopefully, see you at the next lecture!\
\>", "Text",
 CellChangeTimes->{{3.7025300872411327`*^9, 3.702530261909322*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1250, 1395},
WindowMargins->{{Automatic, -2}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info243702497658-1757410"->{
  Cell[14873, 450, 3460, 52, 173, "Print",
   CellTags->"Info243702497658-1757410"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info243702497658-1757410", 629535, 12973}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 134, 2, 114, "Title"],
Cell[717, 26, 303, 5, 37, "Text"],
Cell[CellGroupData[{
Cell[1045, 35, 99, 1, 80, "Section"],
Cell[1147, 38, 352, 6, 61, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1536, 49, 96, 1, 80, "Section"],
Cell[1635, 52, 297, 4, 37, "Text"],
Cell[1935, 58, 283, 7, 66, "Input"],
Cell[2221, 67, 667, 16, 66, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2925, 88, 94, 1, 80, "Section"],
Cell[3022, 91, 2074, 66, 222, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5133, 162, 96, 1, 80, "Section"],
Cell[5232, 165, 566, 20, 61, "Text"],
Cell[5801, 187, 597, 11, 40, "Input"],
Cell[6401, 200, 445, 9, 40, "Input"],
Cell[6849, 211, 123, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[6997, 216, 95, 1, 54, "Subsection"],
Cell[CellGroupData[{
Cell[7117, 221, 183, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[7325, 227, 284, 5, 39, "Input"],
Cell[7612, 234, 174, 3, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7823, 242, 225, 4, 39, "Input"],
Cell[8051, 248, 172, 3, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8260, 256, 275, 6, 39, "Input"],
Cell[8538, 264, 170, 3, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8745, 272, 278, 6, 39, "Input"],
Cell[9026, 280, 176, 3, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9239, 288, 215, 5, 39, "Input"],
Cell[9457, 295, 126, 2, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9620, 302, 217, 5, 39, "Input"],
Cell[9840, 309, 124, 2, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10001, 316, 203, 5, 39, "Input"],
Cell[10207, 323, 122, 2, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10366, 330, 203, 5, 39, "Input"],
Cell[10572, 337, 122, 2, 39, "Output"]
}, Open  ]],
Cell[10709, 342, 92, 1, 37, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10862, 350, 96, 1, 80, "Section"],
Cell[10961, 353, 602, 12, 37, "Text"],
Cell[11566, 367, 1967, 41, 196, "Input"],
Cell[13536, 410, 505, 11, 61, "Text"],
Cell[14044, 423, 678, 19, 85, "Text"],
Cell[CellGroupData[{
Cell[14747, 446, 123, 2, 39, "Input"],
Cell[14873, 450, 3460, 52, 173, "Print",
 CellTags->"Info243702497658-1757410"]
}, Open  ]],
Cell[18348, 505, 295, 10, 37, "Text"],
Cell[CellGroupData[{
Cell[18668, 519, 254, 6, 39, "Input"],
Cell[18925, 527, 183, 4, 39, "Output"]
}, Open  ]],
Cell[19123, 534, 237, 7, 37, "Text"],
Cell[19363, 543, 1504, 36, 196, "Input"],
Cell[20870, 581, 119, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[21014, 586, 93, 1, 54, "Subsection"],
Cell[CellGroupData[{
Cell[21132, 591, 256, 5, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[21413, 600, 732, 18, 39, "Input"],
Cell[22148, 620, 162, 2, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22359, 628, 276, 5, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[22660, 637, 581, 16, 39, "Input"],
Cell[23244, 655, 166, 2, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23459, 663, 269, 5, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[23753, 672, 949, 23, 40, "Input"],
Cell[24705, 697, 216, 4, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24970, 707, 335, 6, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[25330, 717, 979, 23, 40, "Input"],
Cell[26312, 742, 238, 4, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26599, 752, 276, 5, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[26900, 761, 577, 16, 39, "Input"],
Cell[27480, 779, 194, 3, 39, "Output"]
}, Open  ]],
Cell[27689, 785, 90, 1, 37, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27840, 793, 101, 1, 80, "Section"],
Cell[27944, 796, 330, 8, 37, "Text"],
Cell[28277, 806, 890, 23, 144, "Input"],
Cell[29170, 831, 174, 4, 37, "Text"],
Cell[29347, 837, 1746, 37, 170, "Input"],
Cell[31096, 876, 119, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[31240, 881, 97, 1, 54, "Subsection"],
Cell[CellGroupData[{
Cell[31362, 886, 240, 4, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[31627, 894, 407, 11, 39, "Input"],
Cell[32037, 907, 145, 2, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32231, 915, 242, 4, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[32498, 923, 648, 18, 92, "Input"],
Cell[33149, 943, 97, 1, 39, "Output"]
}, Open  ]],
Cell[33261, 947, 90, 1, 37, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33412, 955, 92, 1, 80, "Section"],
Cell[33507, 958, 620, 17, 85, "Text"],
Cell[34130, 977, 713, 20, 67, "Input"],
Cell[34846, 999, 174, 5, 37, "Text"],
Cell[35023, 1006, 1076, 24, 170, "Input"],
Cell[36102, 1032, 160, 2, 37, "Text"],
Cell[36265, 1036, 1307, 31, 222, "Input"],
Cell[37575, 1069, 401, 8, 61, "Text"],
Cell[37979, 1079, 743, 16, 144, "Input"],
Cell[CellGroupData[{
Cell[38747, 1099, 93, 1, 54, "Subsection"],
Cell[CellGroupData[{
Cell[38865, 1104, 312, 6, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[39202, 1114, 1043, 27, 196, "Input"],
Cell[40248, 1143, 120, 2, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40417, 1151, 315, 6, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[40757, 1161, 1094, 28, 196, "Input"],
Cell[41854, 1191, 120, 2, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42023, 1199, 247, 4, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[42295, 1207, 377, 8, 39, "Input"],
Cell[42675, 1217, 119, 2, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42843, 1225, 248, 4, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[43116, 1233, 424, 8, 39, "Input"],
Cell[43543, 1243, 147, 3, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43739, 1252, 255, 5, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[44019, 1261, 401, 8, 39, "Input"],
Cell[44423, 1271, 120, 2, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44592, 1279, 256, 5, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[44873, 1288, 453, 9, 39, "Input"],
Cell[45329, 1299, 148, 3, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45526, 1308, 238, 5, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[45789, 1317, 311, 7, 39, "Input"],
Cell[46103, 1326, 97, 1, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46249, 1333, 236, 5, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[46510, 1342, 362, 8, 39, "Input"],
Cell[46875, 1352, 123, 2, 39, "Output"]
}, Open  ]],
Cell[47013, 1357, 92, 1, 37, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47166, 1365, 94, 1, 80, "Section"],
Cell[47263, 1368, 345, 7, 37, "Text"],
Cell[47611, 1377, 465, 12, 39, "Input"],
Cell[48079, 1391, 234, 7, 37, "Text"],
Cell[48316, 1400, 525, 13, 92, "Input"],
Cell[48844, 1415, 241, 8, 37, "Text"],
Cell[49088, 1425, 1473, 33, 118, "Input"],
Cell[50564, 1460, 199, 7, 37, "Text"],
Cell[50766, 1469, 304, 7, 39, "Input"],
Cell[51073, 1478, 288, 11, 37, "Text"],
Cell[51364, 1491, 192, 4, 39, "Input"],
Cell[51559, 1497, 322, 8, 37, "Text"],
Cell[51884, 1507, 1288, 29, 197, "Input"],
Cell[53175, 1538, 443, 11, 40, "Input"],
Cell[53621, 1551, 212, 7, 37, "Text"],
Cell[53836, 1560, 794, 20, 66, "Input"],
Cell[54633, 1582, 232, 5, 37, "Text"],
Cell[CellGroupData[{
Cell[54890, 1591, 183, 3, 39, "Input"],
Cell[55076, 1596, 4170, 123, 196, "Output"]
}, Open  ]],
Cell[59261, 1722, 360, 10, 37, "Text"],
Cell[CellGroupData[{
Cell[59646, 1736, 129, 2, 39, "Input"],
Cell[59778, 1740, 1594, 43, 66, "Output"]
}, Open  ]],
Cell[61387, 1786, 211, 4, 37, "Text"],
Cell[CellGroupData[{
Cell[61623, 1794, 166, 3, 39, "Input"],
Cell[61792, 1799, 854, 13, 39, "Output"]
}, Open  ]],
Cell[62661, 1815, 105, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[62791, 1820, 192, 4, 39, "Input"],
Cell[62986, 1826, 633, 19, 39, "Output"]
}, Open  ]],
Cell[63634, 1848, 180, 4, 37, "Text"],
Cell[CellGroupData[{
Cell[63839, 1856, 220, 5, 39, "Input"],
Cell[64062, 1863, 633, 19, 39, "Output"]
}, Open  ]],
Cell[64710, 1885, 370, 6, 61, "Text"],
Cell[CellGroupData[{
Cell[65105, 1895, 659, 19, 66, "Input"],
Cell[65767, 1916, 15357, 383, 308, "Output"]
}, Open  ]],
Cell[81139, 2302, 612, 10, 85, "Text"],
Cell[81754, 2314, 713, 18, 66, "Input"],
Cell[82470, 2334, 618, 17, 66, "Input"],
Cell[83091, 2353, 234, 5, 37, "Text"],
Cell[CellGroupData[{
Cell[83350, 2362, 895, 26, 66, "Input"],
Cell[84248, 2390, 15395, 393, 308, "Output"]
}, Open  ]],
Cell[99658, 2786, 175, 2, 37, "Text"],
Cell[99836, 2790, 1035, 30, 92, "Input"],
Cell[100874, 2822, 176, 2, 37, "Text"],
Cell[CellGroupData[{
Cell[101075, 2828, 97, 1, 54, "Subsection"],
Cell[CellGroupData[{
Cell[101197, 2833, 193, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[101415, 2839, 437, 9, 39, "Input"],
Cell[101855, 2850, 73, 1, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[101977, 2857, 193, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[102195, 2863, 437, 9, 39, "Input"],
Cell[102635, 2874, 73, 1, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[102757, 2881, 220, 3, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[103002, 2888, 510, 10, 39, "Input"],
Cell[103515, 2900, 122, 2, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[103686, 2908, 221, 3, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[103932, 2915, 509, 10, 39, "Input"],
Cell[104444, 2927, 122, 2, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[104615, 2935, 202, 3, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[104842, 2942, 259, 5, 39, "Input"],
Cell[105104, 2949, 125, 2, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[105278, 2957, 203, 3, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[105506, 2964, 311, 6, 39, "Input"],
Cell[105820, 2972, 148, 2, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[106017, 2980, 255, 4, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[106297, 2988, 248, 6, 39, "Input"],
Cell[106548, 2996, 95, 1, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[106692, 3003, 258, 4, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[106975, 3011, 298, 7, 39, "Input"],
Cell[107276, 3020, 122, 2, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[107447, 3028, 224, 4, 43, "Subsubsection"],
Cell[107674, 3034, 186, 4, 37, "Text"],
Cell[CellGroupData[{
Cell[107885, 3042, 1089, 27, 144, "Input"],
Cell[108977, 3071, 83388, 1388, 892, "Output"]
}, Open  ]],
Cell[192380, 4462, 115, 1, 37, "Text"],
Cell[192498, 4465, 83364, 1388, 892, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275899, 5858, 225, 4, 43, "Subsubsection"],
Cell[276127, 5864, 186, 4, 37, "Text"],
Cell[CellGroupData[{
Cell[276338, 5872, 1139, 28, 144, "Input"],
Cell[277480, 5902, 172446, 3445, 894, "Output"]
}, Open  ]],
Cell[449941, 9350, 115, 1, 37, "Text"],
Cell[450059, 9353, 172352, 3443, 894, "Output"],
Cell[622414, 12798, 92, 1, 37, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[622567, 12806, 95, 1, 80, "Section"],
Cell[622665, 12809, 348, 7, 37, "Text"],
Cell[CellGroupData[{
Cell[623038, 12820, 2436, 61, 300, "Input"],
Cell[625477, 12883, 2741, 54, 1129, "Output"]
}, Open  ]],
Cell[628233, 12940, 482, 8, 85, "Text"],
Cell[628718, 12950, 437, 7, 85, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

